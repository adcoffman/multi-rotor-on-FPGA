

================================================================
== Vivado HLS Report for 'AXI_SPI_DRIVER'
================================================================
* Date:           Sun May 12 14:18:22 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        AXI_SPI_Driver
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|    7|    1|    7|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|DSP              |        -|      -|       -|      -|
|Expression       |        -|      -|       0|     78|
|FIFO             |        -|      -|       -|      -|
|Instance         |        2|      -|     586|    684|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|    146|
|Register         |        -|      -|      82|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        2|      0|     668|    908|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |    ~0   |      0|   ~0   |      1|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    +------------------------------+----------------------------+---------+-------+-----+-----+
    |           Instance           |           Module           | BRAM_18K| DSP48E|  FF | LUT |
    +------------------------------+----------------------------+---------+-------+-----+-----+
    |AXI_SPI_DRIVER_CTRL_s_axi_U   |AXI_SPI_DRIVER_CTRL_s_axi   |        0|      0|   74|  104|
    |AXI_SPI_DRIVER_OUT_r_m_axi_U  |AXI_SPI_DRIVER_OUT_r_m_axi  |        2|      0|  512|  580|
    +------------------------------+----------------------------+---------+-------+-----+-----+
    |Total                         |                            |        2|      0|  586|  684|
    +------------------------------+----------------------------+---------+-------+-----+-----+

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +-------------------------+----------+-------+---+----+------------+------------+
    |      Variable Name      | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +-------------------------+----------+-------+---+----+------------+------------+
    |spi_bus2_sum3_fu_146_p2  |     +    |      0|  0|  38|          31|           5|
    |spi_bus2_sum_fu_134_p2   |     +    |      0|  0|  38|          31|           5|
    |ap_block_state8          |    or    |      0|  0|   2|           1|           1|
    +-------------------------+----------+-------+---+----+------------+------------+
    |Total                    |          |      0|  0|  78|          63|          11|
    +-------------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +------------------------------+----+-----------+-----+-----------+
    |             Name             | LUT| Input Size| Bits| Total Bits|
    +------------------------------+----+-----------+-----+-----------+
    |OUT_r_AWADDR                  |  15|          3|   32|         96|
    |OUT_r_WDATA                   |  15|          3|   32|         96|
    |OUT_r_blk_n_AW                |   9|          2|    1|          2|
    |OUT_r_blk_n_B                 |   9|          2|    1|          2|
    |OUT_r_blk_n_W                 |   9|          2|    1|          2|
    |ap_NS_fsm                     |  62|         15|    1|         15|
    |ap_sig_ioackin_OUT_r_AWREADY  |   9|          2|    1|          2|
    |ap_sig_ioackin_OUT_r_WREADY   |   9|          2|    1|          2|
    |state                         |   9|          2|    2|          4|
    +------------------------------+----+-----------+-----+-----------+
    |Total                         | 146|         33|   72|        221|
    +------------------------------+----+-----------+-----+-----------+

    * Register: 
    +------------------------------+----+----+-----+-----------+
    |             Name             | FF | LUT| Bits| Const Bits|
    +------------------------------+----+----+-----+-----------+
    |ap_CS_fsm                     |  14|   0|   14|          0|
    |ap_reg_ioackin_OUT_r_AWREADY  |   1|   0|    1|          0|
    |ap_reg_ioackin_OUT_r_WREADY   |   1|   0|    1|          0|
    |spi_bus2_sum3_reg_187         |  31|   0|   31|          0|
    |spi_bus2_sum_reg_182          |  31|   0|   31|          0|
    |state                         |   2|   0|    4|          2|
    |state_load_reg_178            |   2|   0|    4|          2|
    +------------------------------+----+----+-----+-----------+
    |Total                         |  82|   0|   86|          4|
    +------------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+----------------------+-----+-----+------------+----------------+--------------+
|       RTL Ports      | Dir | Bits|  Protocol  |  Source Object |    C Type    |
+----------------------+-----+-----+------------+----------------+--------------+
|s_axi_CTRL_AWVALID    |  in |    1|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_AWREADY    | out |    1|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_AWADDR     |  in |    5|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_WVALID     |  in |    1|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_WREADY     | out |    1|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_WDATA      |  in |   32|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_WSTRB      |  in |    4|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_ARVALID    |  in |    1|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_ARREADY    | out |    1|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_ARADDR     |  in |    5|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_RVALID     | out |    1|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_RREADY     |  in |    1|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_RDATA      | out |   32|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_RRESP      | out |    2|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_BVALID     | out |    1|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_BREADY     |  in |    1|    s_axi   |      CTRL      |    scalar    |
|s_axi_CTRL_BRESP      | out |    2|    s_axi   |      CTRL      |    scalar    |
|ap_clk                |  in |    1| ap_ctrl_hs | AXI_SPI_DRIVER | return value |
|ap_rst_n              |  in |    1| ap_ctrl_hs | AXI_SPI_DRIVER | return value |
|interrupt             | out |    1| ap_ctrl_hs | AXI_SPI_DRIVER | return value |
|m_axi_OUT_r_AWVALID   | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWREADY   |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWADDR    | out |   32|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWID      | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWLEN     | out |    8|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWSIZE    | out |    3|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWBURST   | out |    2|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWLOCK    | out |    2|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWCACHE   | out |    4|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWPROT    | out |    3|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWQOS     | out |    4|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWREGION  | out |    4|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWUSER    | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_WVALID    | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_WREADY    |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_WDATA     | out |   32|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_WSTRB     | out |    4|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_WLAST     | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_WID       | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_WUSER     | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARVALID   | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARREADY   |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARADDR    | out |   32|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARID      | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARLEN     | out |    8|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARSIZE    | out |    3|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARBURST   | out |    2|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARLOCK    | out |    2|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARCACHE   | out |    4|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARPROT    | out |    3|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARQOS     | out |    4|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARREGION  | out |    4|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARUSER    | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_RVALID    |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_RREADY    | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_RDATA     |  in |   32|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_RLAST     |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_RID       |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_RUSER     |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_RRESP     |  in |    2|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_BVALID    |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_BREADY    | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_BRESP     |  in |    2|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_BID       |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_BUSER     |  in |    1|    m_axi   |      OUT_r     |    pointer   |
+----------------------+-----+-----+------------+----------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 14
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (state_load == 1)
	8  / (state_load != 0 & state_load != 1)
	9  / (state_load == 0)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	8  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.49>
ST_1 : Operation 15 [1/1] (1.00ns)   --->   "%spi_bus_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %spi_bus)"   --->   Operation 15 'read' 'spi_bus_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %spi_bus_read, i32 2, i32 31)"   --->   Operation 16 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%tmp_cast = zext i30 %tmp to i31"   --->   Operation 17 'zext' 'tmp_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %OUT_r), !map !16"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecClockDomain([8 x i8]* @default, [1 x i8]* @empty) nounwind"   --->   Operation 19 'specclockdomain' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @AXI_SPI_DRIVER_str) nounwind"   --->   Operation 20 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:17]   --->   Operation 21 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %OUT_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 1000, [4 x i8]* @p_str4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:23]   --->   Operation 22 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %spi_bus, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 1000, [1 x i8]* @bundle, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:23]   --->   Operation 23 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i4* @state, i32 1, [1 x i8]* @p_str1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:28]   --->   Operation 24 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%state_load = load i4* @state, align 1"   --->   Operation 25 'load' 'state_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.13ns)   --->   "switch i4 %state_load, label %._crit_edge [
    i4 0, label %1
    i4 1, label %2
  ]" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:32]   --->   Operation 26 'switch' <Predicate = true> <Delay = 1.13>
ST_1 : Operation 27 [1/1] (2.49ns)   --->   "%spi_bus2_sum = add i31 %tmp_cast, 28" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:43]   --->   Operation 27 'add' 'spi_bus2_sum' <Predicate = (state_load == 1)> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (1.76ns)   --->   "store i4 2, i4* @state, align 1" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:47]   --->   Operation 28 'store' <Predicate = (state_load == 1)> <Delay = 1.76>
ST_1 : Operation 29 [1/1] (2.49ns)   --->   "%spi_bus2_sum3 = add i31 %tmp_cast, 24" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:35]   --->   Operation 29 'add' 'spi_bus2_sum3' <Predicate = (state_load == 0)> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (1.76ns)   --->   "store i4 1, i4* @state, align 1" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:40]   --->   Operation 30 'store' <Predicate = (state_load == 0)> <Delay = 1.76>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%spi_bus2_sum_cast = zext i31 %spi_bus2_sum to i64" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:43]   --->   Operation 31 'zext' 'spi_bus2_sum_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%OUT_addr_1 = getelementptr inbounds i32* %OUT_r, i64 %spi_bus2_sum_cast" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:43]   --->   Operation 32 'getelementptr' 'OUT_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (8.75ns)   --->   "%OUT_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %OUT_addr_1, i32 1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:43]   --->   Operation 33 'writereq' 'OUT_addr_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 34 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %OUT_addr_1, i32 65534, i4 -1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:43]   --->   Operation 34 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 35 [5/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr_1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:43]   --->   Operation 35 'writeresp' 'OUT_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 36 [4/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr_1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:43]   --->   Operation 36 'writeresp' 'OUT_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 37 [3/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr_1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:43]   --->   Operation 37 'writeresp' 'OUT_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 38 [2/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr_1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:43]   --->   Operation 38 'writeresp' 'OUT_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 39 [1/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr_1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:43]   --->   Operation 39 'writeresp' 'OUT_addr_1_resp' <Predicate = (state_load == 1)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 40 [1/1] (0.00ns)   --->   "br label %._crit_edge" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:48]   --->   Operation 40 'br' <Predicate = (state_load == 1)> <Delay = 0.00>
ST_8 : Operation 41 [1/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:35]   --->   Operation 41 'writeresp' 'OUT_addr_resp' <Predicate = (state_load == 0)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 42 [1/1] (0.00ns)   --->   "br label %._crit_edge" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:41]   --->   Operation 42 'br' <Predicate = (state_load == 0)> <Delay = 0.00>
ST_8 : Operation 43 [1/1] (0.00ns)   --->   "ret void" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:69]   --->   Operation 43 'ret' <Predicate = true> <Delay = 0.00>

State 9 <SV = 1> <Delay = 8.75>
ST_9 : Operation 44 [1/1] (0.00ns)   --->   "%spi_bus2_sum3_cast = zext i31 %spi_bus2_sum3 to i64" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:35]   --->   Operation 44 'zext' 'spi_bus2_sum3_cast' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 45 [1/1] (0.00ns)   --->   "%OUT_addr = getelementptr inbounds i32* %OUT_r, i64 %spi_bus2_sum3_cast" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:35]   --->   Operation 45 'getelementptr' 'OUT_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 46 [1/1] (8.75ns)   --->   "%OUT_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %OUT_addr, i32 1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:35]   --->   Operation 46 'writereq' 'OUT_addr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 2> <Delay = 8.75>
ST_10 : Operation 47 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %OUT_addr, i32 6, i4 -1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:35]   --->   Operation 47 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 3> <Delay = 8.75>
ST_11 : Operation 48 [5/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:35]   --->   Operation 48 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 4> <Delay = 8.75>
ST_12 : Operation 49 [4/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:35]   --->   Operation 49 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 5> <Delay = 8.75>
ST_13 : Operation 50 [3/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:35]   --->   Operation 50 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 6> <Delay = 8.75>
ST_14 : Operation 51 [2/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:35]   --->   Operation 51 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ OUT_r]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ spi_bus]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ state]:  wired=0; compound=0; hidden=1; nouse=0; global=1; static=1; extern=0; dir=2; type=0; pingpong=0; private_global=1; linkage=7; visibility=0; IO mode=ap_ovld:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
spi_bus_read       (read           ) [ 000000000000000]
tmp                (partselect     ) [ 000000000000000]
tmp_cast           (zext           ) [ 000000000000000]
StgValue_18        (specbitsmap    ) [ 000000000000000]
StgValue_19        (specclockdomain) [ 000000000000000]
StgValue_20        (spectopmodule  ) [ 000000000000000]
StgValue_21        (specinterface  ) [ 000000000000000]
StgValue_22        (specinterface  ) [ 000000000000000]
StgValue_23        (specinterface  ) [ 000000000000000]
StgValue_24        (specreset      ) [ 000000000000000]
state_load         (load           ) [ 011111111111111]
StgValue_26        (switch         ) [ 000000000000000]
spi_bus2_sum       (add            ) [ 001000000000000]
StgValue_28        (store          ) [ 000000000000000]
spi_bus2_sum3      (add            ) [ 000000000100000]
StgValue_30        (store          ) [ 000000000000000]
spi_bus2_sum_cast  (zext           ) [ 000000000000000]
OUT_addr_1         (getelementptr  ) [ 000111111000000]
OUT_addr_1_req     (writereq       ) [ 000000000000000]
StgValue_34        (write          ) [ 000000000000000]
OUT_addr_1_resp    (writeresp      ) [ 000000000000000]
StgValue_40        (br             ) [ 000000000000000]
OUT_addr_resp      (writeresp      ) [ 000000000000000]
StgValue_42        (br             ) [ 000000000000000]
StgValue_43        (ret            ) [ 000000000000000]
spi_bus2_sum3_cast (zext           ) [ 000000000000000]
OUT_addr           (getelementptr  ) [ 000000001011111]
OUT_addr_req       (writereq       ) [ 000000000000000]
StgValue_47        (write          ) [ 000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="OUT_r">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="OUT_r"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="spi_bus">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="spi_bus"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="state">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="state"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.s_axilite.i32"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i30.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecClockDomain"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="default"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="AXI_SPI_DRIVER_str"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str5"/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="mode"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="bundle"/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecReset"/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="76" class="1004" name="spi_bus_read_read_fu_76">
<pin_list>
<pin id="77" dir="0" index="0" bw="32" slack="0"/>
<pin id="78" dir="0" index="1" bw="32" slack="0"/>
<pin id="79" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="spi_bus_read/1 "/>
</bind>
</comp>

<comp id="82" class="1004" name="grp_writeresp_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="1" slack="0"/>
<pin id="84" dir="0" index="1" bw="32" slack="0"/>
<pin id="85" dir="0" index="2" bw="1" slack="0"/>
<pin id="86" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="OUT_addr_1_req/2 OUT_addr_1_resp/4 "/>
</bind>
</comp>

<comp id="89" class="1004" name="StgValue_34_write_fu_89">
<pin_list>
<pin id="90" dir="0" index="0" bw="0" slack="0"/>
<pin id="91" dir="0" index="1" bw="32" slack="1"/>
<pin id="92" dir="0" index="2" bw="17" slack="0"/>
<pin id="93" dir="0" index="3" bw="1" slack="0"/>
<pin id="94" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_34/3 "/>
</bind>
</comp>

<comp id="99" class="1004" name="grp_writeresp_fu_99">
<pin_list>
<pin id="100" dir="0" index="0" bw="1" slack="0"/>
<pin id="101" dir="0" index="1" bw="32" slack="0"/>
<pin id="102" dir="0" index="2" bw="1" slack="0"/>
<pin id="103" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="OUT_addr_req/9 OUT_addr_resp/11 "/>
</bind>
</comp>

<comp id="106" class="1004" name="StgValue_47_write_fu_106">
<pin_list>
<pin id="107" dir="0" index="0" bw="0" slack="0"/>
<pin id="108" dir="0" index="1" bw="32" slack="1"/>
<pin id="109" dir="0" index="2" bw="4" slack="0"/>
<pin id="110" dir="0" index="3" bw="1" slack="0"/>
<pin id="111" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_47/10 "/>
</bind>
</comp>

<comp id="116" class="1004" name="tmp_fu_116">
<pin_list>
<pin id="117" dir="0" index="0" bw="30" slack="0"/>
<pin id="118" dir="0" index="1" bw="32" slack="0"/>
<pin id="119" dir="0" index="2" bw="3" slack="0"/>
<pin id="120" dir="0" index="3" bw="6" slack="0"/>
<pin id="121" dir="1" index="4" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp/1 "/>
</bind>
</comp>

<comp id="126" class="1004" name="tmp_cast_fu_126">
<pin_list>
<pin id="127" dir="0" index="0" bw="30" slack="0"/>
<pin id="128" dir="1" index="1" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="tmp_cast/1 "/>
</bind>
</comp>

<comp id="130" class="1004" name="state_load_load_fu_130">
<pin_list>
<pin id="131" dir="0" index="0" bw="4" slack="0"/>
<pin id="132" dir="1" index="1" bw="4" slack="7"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="state_load/1 "/>
</bind>
</comp>

<comp id="134" class="1004" name="spi_bus2_sum_fu_134">
<pin_list>
<pin id="135" dir="0" index="0" bw="30" slack="0"/>
<pin id="136" dir="0" index="1" bw="6" slack="0"/>
<pin id="137" dir="1" index="2" bw="31" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="spi_bus2_sum/1 "/>
</bind>
</comp>

<comp id="140" class="1004" name="StgValue_28_store_fu_140">
<pin_list>
<pin id="141" dir="0" index="0" bw="3" slack="0"/>
<pin id="142" dir="0" index="1" bw="4" slack="0"/>
<pin id="143" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_28/1 "/>
</bind>
</comp>

<comp id="146" class="1004" name="spi_bus2_sum3_fu_146">
<pin_list>
<pin id="147" dir="0" index="0" bw="30" slack="0"/>
<pin id="148" dir="0" index="1" bw="6" slack="0"/>
<pin id="149" dir="1" index="2" bw="31" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="spi_bus2_sum3/1 "/>
</bind>
</comp>

<comp id="152" class="1004" name="StgValue_30_store_fu_152">
<pin_list>
<pin id="153" dir="0" index="0" bw="1" slack="0"/>
<pin id="154" dir="0" index="1" bw="4" slack="0"/>
<pin id="155" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_30/1 "/>
</bind>
</comp>

<comp id="158" class="1004" name="spi_bus2_sum_cast_fu_158">
<pin_list>
<pin id="159" dir="0" index="0" bw="31" slack="1"/>
<pin id="160" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="spi_bus2_sum_cast/2 "/>
</bind>
</comp>

<comp id="161" class="1004" name="OUT_addr_1_fu_161">
<pin_list>
<pin id="162" dir="0" index="0" bw="32" slack="0"/>
<pin id="163" dir="0" index="1" bw="32" slack="0"/>
<pin id="164" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="OUT_addr_1/2 "/>
</bind>
</comp>

<comp id="168" class="1004" name="spi_bus2_sum3_cast_fu_168">
<pin_list>
<pin id="169" dir="0" index="0" bw="31" slack="1"/>
<pin id="170" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="spi_bus2_sum3_cast/9 "/>
</bind>
</comp>

<comp id="171" class="1004" name="OUT_addr_fu_171">
<pin_list>
<pin id="172" dir="0" index="0" bw="32" slack="0"/>
<pin id="173" dir="0" index="1" bw="32" slack="0"/>
<pin id="174" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="OUT_addr/9 "/>
</bind>
</comp>

<comp id="178" class="1005" name="state_load_reg_178">
<pin_list>
<pin id="179" dir="0" index="0" bw="4" slack="7"/>
<pin id="180" dir="1" index="1" bw="4" slack="2147483647"/>
</pin_list>
<bind>
<opset="state_load "/>
</bind>
</comp>

<comp id="182" class="1005" name="spi_bus2_sum_reg_182">
<pin_list>
<pin id="183" dir="0" index="0" bw="31" slack="1"/>
<pin id="184" dir="1" index="1" bw="31" slack="1"/>
</pin_list>
<bind>
<opset="spi_bus2_sum "/>
</bind>
</comp>

<comp id="187" class="1005" name="spi_bus2_sum3_reg_187">
<pin_list>
<pin id="188" dir="0" index="0" bw="31" slack="1"/>
<pin id="189" dir="1" index="1" bw="31" slack="1"/>
</pin_list>
<bind>
<opset="spi_bus2_sum3 "/>
</bind>
</comp>

<comp id="192" class="1005" name="OUT_addr_1_reg_192">
<pin_list>
<pin id="193" dir="0" index="0" bw="32" slack="1"/>
<pin id="194" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="OUT_addr_1 "/>
</bind>
</comp>

<comp id="198" class="1005" name="OUT_addr_reg_198">
<pin_list>
<pin id="199" dir="0" index="0" bw="32" slack="1"/>
<pin id="200" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="OUT_addr "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="80"><net_src comp="6" pin="0"/><net_sink comp="76" pin=0"/></net>

<net id="81"><net_src comp="2" pin="0"/><net_sink comp="76" pin=1"/></net>

<net id="87"><net_src comp="64" pin="0"/><net_sink comp="82" pin=0"/></net>

<net id="88"><net_src comp="52" pin="0"/><net_sink comp="82" pin=2"/></net>

<net id="95"><net_src comp="66" pin="0"/><net_sink comp="89" pin=0"/></net>

<net id="96"><net_src comp="68" pin="0"/><net_sink comp="89" pin=2"/></net>

<net id="97"><net_src comp="70" pin="0"/><net_sink comp="89" pin=3"/></net>

<net id="98"><net_src comp="72" pin="0"/><net_sink comp="82" pin=0"/></net>

<net id="104"><net_src comp="64" pin="0"/><net_sink comp="99" pin=0"/></net>

<net id="105"><net_src comp="52" pin="0"/><net_sink comp="99" pin=2"/></net>

<net id="112"><net_src comp="66" pin="0"/><net_sink comp="106" pin=0"/></net>

<net id="113"><net_src comp="74" pin="0"/><net_sink comp="106" pin=2"/></net>

<net id="114"><net_src comp="70" pin="0"/><net_sink comp="106" pin=3"/></net>

<net id="115"><net_src comp="72" pin="0"/><net_sink comp="99" pin=0"/></net>

<net id="122"><net_src comp="8" pin="0"/><net_sink comp="116" pin=0"/></net>

<net id="123"><net_src comp="76" pin="2"/><net_sink comp="116" pin=1"/></net>

<net id="124"><net_src comp="10" pin="0"/><net_sink comp="116" pin=2"/></net>

<net id="125"><net_src comp="12" pin="0"/><net_sink comp="116" pin=3"/></net>

<net id="129"><net_src comp="116" pin="4"/><net_sink comp="126" pin=0"/></net>

<net id="133"><net_src comp="4" pin="0"/><net_sink comp="130" pin=0"/></net>

<net id="138"><net_src comp="126" pin="1"/><net_sink comp="134" pin=0"/></net>

<net id="139"><net_src comp="58" pin="0"/><net_sink comp="134" pin=1"/></net>

<net id="144"><net_src comp="60" pin="0"/><net_sink comp="140" pin=0"/></net>

<net id="145"><net_src comp="4" pin="0"/><net_sink comp="140" pin=1"/></net>

<net id="150"><net_src comp="126" pin="1"/><net_sink comp="146" pin=0"/></net>

<net id="151"><net_src comp="62" pin="0"/><net_sink comp="146" pin=1"/></net>

<net id="156"><net_src comp="56" pin="0"/><net_sink comp="152" pin=0"/></net>

<net id="157"><net_src comp="4" pin="0"/><net_sink comp="152" pin=1"/></net>

<net id="165"><net_src comp="0" pin="0"/><net_sink comp="161" pin=0"/></net>

<net id="166"><net_src comp="158" pin="1"/><net_sink comp="161" pin=1"/></net>

<net id="167"><net_src comp="161" pin="2"/><net_sink comp="82" pin=1"/></net>

<net id="175"><net_src comp="0" pin="0"/><net_sink comp="171" pin=0"/></net>

<net id="176"><net_src comp="168" pin="1"/><net_sink comp="171" pin=1"/></net>

<net id="177"><net_src comp="171" pin="2"/><net_sink comp="99" pin=1"/></net>

<net id="181"><net_src comp="130" pin="1"/><net_sink comp="178" pin=0"/></net>

<net id="185"><net_src comp="134" pin="2"/><net_sink comp="182" pin=0"/></net>

<net id="186"><net_src comp="182" pin="1"/><net_sink comp="158" pin=0"/></net>

<net id="190"><net_src comp="146" pin="2"/><net_sink comp="187" pin=0"/></net>

<net id="191"><net_src comp="187" pin="1"/><net_sink comp="168" pin=0"/></net>

<net id="195"><net_src comp="161" pin="2"/><net_sink comp="192" pin=0"/></net>

<net id="196"><net_src comp="192" pin="1"/><net_sink comp="89" pin=1"/></net>

<net id="197"><net_src comp="192" pin="1"/><net_sink comp="82" pin=1"/></net>

<net id="201"><net_src comp="171" pin="2"/><net_sink comp="198" pin=0"/></net>

<net id="202"><net_src comp="198" pin="1"/><net_sink comp="99" pin=1"/></net>

<net id="203"><net_src comp="198" pin="1"/><net_sink comp="106" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: OUT_r | {2 3 4 5 6 7 8 9 10 11 12 13 14 }
	Port: state | {1 }
 - Input state : 
	Port: AXI_SPI_DRIVER : spi_bus | {1 }
	Port: AXI_SPI_DRIVER : state | {1 }
  - Chain level:
	State 1
		tmp_cast : 1
		StgValue_26 : 1
		spi_bus2_sum : 2
		spi_bus2_sum3 : 2
	State 2
		OUT_addr_1 : 1
		OUT_addr_1_req : 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
		OUT_addr : 1
		OUT_addr_req : 2
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|---------------------------|---------|---------|
| Operation|      Functional Unit      |    FF   |   LUT   |
|----------|---------------------------|---------|---------|
|    add   |    spi_bus2_sum_fu_134    |    0    |    37   |
|          |    spi_bus2_sum3_fu_146   |    0    |    37   |
|----------|---------------------------|---------|---------|
|   read   |  spi_bus_read_read_fu_76  |    0    |    0    |
|----------|---------------------------|---------|---------|
| writeresp|    grp_writeresp_fu_82    |    0    |    0    |
|          |    grp_writeresp_fu_99    |    0    |    0    |
|----------|---------------------------|---------|---------|
|   write  |  StgValue_34_write_fu_89  |    0    |    0    |
|          |  StgValue_47_write_fu_106 |    0    |    0    |
|----------|---------------------------|---------|---------|
|partselect|         tmp_fu_116        |    0    |    0    |
|----------|---------------------------|---------|---------|
|          |      tmp_cast_fu_126      |    0    |    0    |
|   zext   |  spi_bus2_sum_cast_fu_158 |    0    |    0    |
|          | spi_bus2_sum3_cast_fu_168 |    0    |    0    |
|----------|---------------------------|---------|---------|
|   Total  |                           |    0    |    74   |
|----------|---------------------------|---------|---------|

Memories:
N/A

* Register list:
+---------------------+--------+
|                     |   FF   |
+---------------------+--------+
|  OUT_addr_1_reg_192 |   32   |
|   OUT_addr_reg_198  |   32   |
|spi_bus2_sum3_reg_187|   31   |
| spi_bus2_sum_reg_182|   31   |
|  state_load_reg_178 |    4   |
+---------------------+--------+
|        Total        |   130  |
+---------------------+--------+

* Multiplexer (MUX) list: 
|---------------------|------|------|------|--------||---------||---------|
|         Comp        |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|---------------------|------|------|------|--------||---------||---------|
| grp_writeresp_fu_82 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_82 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_99 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_99 |  p1  |   2  |  32  |   64   ||    9    |
|---------------------|------|------|------|--------||---------||---------|
|        Total        |      |      |      |   132  ||  7.076  ||    18   |
|---------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |   74   |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    7   |    -   |   18   |
|  Register |    -   |   130  |    -   |
+-----------+--------+--------+--------+
|   Total   |    7   |   130  |   92   |
+-----------+--------+--------+--------+
