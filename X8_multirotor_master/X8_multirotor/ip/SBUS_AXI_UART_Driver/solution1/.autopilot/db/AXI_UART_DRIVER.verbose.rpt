

================================================================
== Vivado HLS Report for 'AXI_UART_DRIVER'
================================================================
* Date:           Sat May 18 20:25:47 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        SBUS_AXI_UART_Driver
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  500003|  500054|  500003|  500054|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+--------+--------+----------+-----------+-----------+--------+----------+
        |          |     Latency     | Iteration|  Initiation Interval  |  Trip  |          |
        | Loop Name|   min  |   max  |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------+--------+--------+----------+-----------+-----------+--------+----------+
        |- Loop 1  |  500000|  500000|         1|          -|          -|  500000|    no    |
        +----------+--------+--------+----------+-----------+-----------+--------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|DSP              |        -|      -|       -|      -|
|Expression       |        -|      -|       0|     75|
|FIFO             |        -|      -|       -|      -|
|Instance         |       10|      -|     658|    730|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|    516|
|Register         |        -|      -|     123|      -|
+-----------------+---------+-------+--------+-------+
|Total            |       10|      0|     781|   1321|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        3|      0|   ~0   |      2|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    +------------------------------+----------------------------+---------+-------+-----+-----+
    |           Instance           |           Module           | BRAM_18K| DSP48E|  FF | LUT |
    +------------------------------+----------------------------+---------+-------+-----+-----+
    |AXI_UART_DRIVER_CTRL_s_axi_U  |AXI_UART_DRIVER_CTRL_s_axi  |        0|      0|   36|   40|
    |AXI_UART_DRIVER_TEST_s_axi_U  |AXI_UART_DRIVER_TEST_s_axi  |        8|      0|  110|  110|
    |AXI_UART_DRIVER_UART_m_axi_U  |AXI_UART_DRIVER_UART_m_axi  |        2|      0|  512|  580|
    +------------------------------+----------------------------+---------+-------+-----+-----+
    |Total                         |                            |       10|      0|  658|  730|
    +------------------------------+----------------------------+---------+-------+-----+-----+

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +--------------------------------------+----------+-------+---+----+------------+------------+
    |             Variable Name            | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +--------------------------------------+----------+-------+---+----+------------+------------+
    |ctr_V_fu_505_p2                       |     +    |      0|  0|  26|          19|           1|
    |ap_block_state1_io                    |    and   |      0|  0|   2|           1|           1|
    |ap_block_state22_io                   |    and   |      0|  0|   2|           1|           1|
    |ap_block_state28                      |    and   |      0|  0|   2|           1|           1|
    |ap_block_state28_io                   |    and   |      0|  0|   2|           1|           1|
    |ap_block_state42_io                   |    and   |      0|  0|   2|           1|           1|
    |ap_block_state54                      |    and   |      0|  0|   2|           1|           1|
    |ap_condition_764                      |    and   |      0|  0|   2|           1|           1|
    |ap_predicate_op140_writeresp_state28  |    and   |      0|  0|   2|           1|           1|
    |ap_predicate_op196_writeresp_state54  |    and   |      0|  0|   2|           1|           1|
    |tmp_4_fu_499_p2                       |   icmp   |      0|  0|  18|          19|          16|
    |tmp_fu_467_p2                         |   icmp   |      0|  0|  11|           8|           7|
    |ap_block_state2_io                    |    or    |      0|  0|   2|           1|           1|
    +--------------------------------------+----------+-------+---+----+------------+------------+
    |Total                                 |          |      0|  0|  75|          56|          34|
    +--------------------------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +-----------------------------+-----+-----------+-----+-----------+
    |             Name            | LUT | Input Size| Bits| Total Bits|
    +-----------------------------+-----+-----------+-----+-----------+
    |SBUS_data_address0           |   44|          9|   12|        108|
    |SBUS_data_d0                 |   47|         10|   32|        320|
    |UART_ARADDR                  |   21|          4|   32|        128|
    |UART_AWADDR                  |   44|          9|   32|        288|
    |UART_WDATA                   |   38|          7|   32|        224|
    |UART_blk_n_AR                |    9|          2|    1|          2|
    |UART_blk_n_AW                |    9|          2|    1|          2|
    |UART_blk_n_B                 |    9|          2|    1|          2|
    |UART_blk_n_R                 |    9|          2|    1|          2|
    |UART_blk_n_W                 |    9|          2|    1|          2|
    |ap_NS_fsm                    |  241|         56|    1|         56|
    |ap_sig_ioackin_UART_ARREADY  |    9|          2|    1|          2|
    |ap_sig_ioackin_UART_AWREADY  |    9|          2|    1|          2|
    |ap_sig_ioackin_UART_WREADY   |    9|          2|    1|          2|
    |p_014_0_i_reg_392            |    9|          2|   19|         38|
    +-----------------------------+-----+-----------+-----+-----------+
    |Total                        |  516|        113|  168|       1178|
    +-----------------------------+-----+-----------+-----+-----------+

    * Register: 
    +------------------------------+----+----+-----+-----------+
    |             Name             | FF | LUT| Bits| Const Bits|
    +------------------------------+----+----+-----+-----------+
    |UART_addr_5_read_reg_577      |  32|   0|   32|          0|
    |ap_CS_fsm                     |  55|   0|   55|          0|
    |ap_reg_ioackin_UART_ARREADY   |   1|   0|    1|          0|
    |ap_reg_ioackin_UART_AWREADY   |   1|   0|    1|          0|
    |ap_reg_ioackin_UART_WREADY    |   1|   0|    1|          0|
    |calibrationSuccess            |   1|   0|    1|          0|
    |calibrationSuccess_l_reg_563  |   1|   0|    1|          0|
    |firstSample                   |   1|   0|    1|          0|
    |firstSample_load_reg_530      |   1|   0|    1|          0|
    |p_014_0_i_reg_392             |  19|   0|   19|          0|
    |temp_reg_554                  |   8|   0|    8|          0|
    |tmp_2_reg_573                 |   1|   0|    1|          0|
    |tmp_reg_559                   |   1|   0|    1|          0|
    +------------------------------+----+----+-----+-----------+
    |Total                         | 123|   0|  123|          0|
    +------------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+---------------------+-----+-----+------------+-----------------+--------------+
|      RTL Ports      | Dir | Bits|  Protocol  |  Source Object  |    C Type    |
+---------------------+-----+-----+------------+-----------------+--------------+
|s_axi_CTRL_AWVALID   |  in |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_AWREADY   | out |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_AWADDR    |  in |    4|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_WVALID    |  in |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_WREADY    | out |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_WDATA     |  in |   32|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_WSTRB     |  in |    4|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_ARVALID   |  in |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_ARREADY   | out |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_ARADDR    |  in |    4|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_RVALID    | out |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_RREADY    |  in |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_RDATA     | out |   32|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_RRESP     | out |    2|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_BVALID    | out |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_BREADY    |  in |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_BRESP     | out |    2|    s_axi   |       CTRL      |  return void |
|s_axi_TEST_AWVALID   |  in |    1|    s_axi   |       TEST      |     array    |
|s_axi_TEST_AWREADY   | out |    1|    s_axi   |       TEST      |     array    |
|s_axi_TEST_AWADDR    |  in |   15|    s_axi   |       TEST      |     array    |
|s_axi_TEST_WVALID    |  in |    1|    s_axi   |       TEST      |     array    |
|s_axi_TEST_WREADY    | out |    1|    s_axi   |       TEST      |     array    |
|s_axi_TEST_WDATA     |  in |   32|    s_axi   |       TEST      |     array    |
|s_axi_TEST_WSTRB     |  in |    4|    s_axi   |       TEST      |     array    |
|s_axi_TEST_ARVALID   |  in |    1|    s_axi   |       TEST      |     array    |
|s_axi_TEST_ARREADY   | out |    1|    s_axi   |       TEST      |     array    |
|s_axi_TEST_ARADDR    |  in |   15|    s_axi   |       TEST      |     array    |
|s_axi_TEST_RVALID    | out |    1|    s_axi   |       TEST      |     array    |
|s_axi_TEST_RREADY    |  in |    1|    s_axi   |       TEST      |     array    |
|s_axi_TEST_RDATA     | out |   32|    s_axi   |       TEST      |     array    |
|s_axi_TEST_RRESP     | out |    2|    s_axi   |       TEST      |     array    |
|s_axi_TEST_BVALID    | out |    1|    s_axi   |       TEST      |     array    |
|s_axi_TEST_BREADY    |  in |    1|    s_axi   |       TEST      |     array    |
|s_axi_TEST_BRESP     | out |    2|    s_axi   |       TEST      |     array    |
|ap_clk               |  in |    1| ap_ctrl_hs | AXI_UART_DRIVER | return value |
|ap_rst_n             |  in |    1| ap_ctrl_hs | AXI_UART_DRIVER | return value |
|interrupt            | out |    1| ap_ctrl_hs | AXI_UART_DRIVER | return value |
|m_axi_UART_AWVALID   | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWREADY   |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWADDR    | out |   32|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWID      | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWLEN     | out |    8|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWSIZE    | out |    3|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWBURST   | out |    2|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWLOCK    | out |    2|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWCACHE   | out |    4|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWPROT    | out |    3|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWQOS     | out |    4|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWREGION  | out |    4|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWUSER    | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_WVALID    | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_WREADY    |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_WDATA     | out |   32|    m_axi   |       UART      |    pointer   |
|m_axi_UART_WSTRB     | out |    4|    m_axi   |       UART      |    pointer   |
|m_axi_UART_WLAST     | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_WID       | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_WUSER     | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARVALID   | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARREADY   |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARADDR    | out |   32|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARID      | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARLEN     | out |    8|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARSIZE    | out |    3|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARBURST   | out |    2|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARLOCK    | out |    2|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARCACHE   | out |    4|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARPROT    | out |    3|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARQOS     | out |    4|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARREGION  | out |    4|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARUSER    | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_RVALID    |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_RREADY    | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_RDATA     |  in |   32|    m_axi   |       UART      |    pointer   |
|m_axi_UART_RLAST     |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_RID       |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_RUSER     |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_RRESP     |  in |    2|    m_axi   |       UART      |    pointer   |
|m_axi_UART_BVALID    |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_BREADY    | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_BRESP     |  in |    2|    m_axi   |       UART      |    pointer   |
|m_axi_UART_BID       |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_BUSER     |  in |    1|    m_axi   |       UART      |    pointer   |
+---------------------+-----+-----+------------+-----------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 55
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (firstSample_load)
	28  / (!firstSample_load)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / (tmp)
	28  / (!tmp)
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / (calibrationSuccess_l)
	54  / (!calibrationSuccess_l)
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / (tmp_2)
	54  / (!tmp_2)
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	55  / (!tmp_4)

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.75>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %UART), !map !37"   --->   Operation 56 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4096 x i32]* %SBUS_data) nounwind, !map !43"   --->   Operation 57 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%SBUS_data_addr = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 0"   --->   Operation 58 'getelementptr' 'SBUS_data_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%dummy = alloca i8, align 1"   --->   Operation 59 'alloca' 'dummy' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([16 x i8]* @AXI_UART_DRIVER_str) nounwind"   --->   Operation 60 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:11]   --->   Operation 61 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %UART, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 4096, [5 x i8]* @p_str4, [4 x i8]* @p_str5, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 62 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([4096 x i32]* %SBUS_data, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 4096, [5 x i8]* @p_str6, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind"   --->   Operation 63 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([4096 x i32]* %SBUS_data, [1 x i8]* @p_str, [12 x i8]* @p_str7, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind"   --->   Operation 64 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i1* @firstSample, i32 1, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:26]   --->   Operation 65 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%firstSample_load = load i1* @firstSample, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:29]   --->   Operation 66 'load' 'firstSample_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "br i1 %firstSample_load, label %1, label %._crit_edge" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:29]   --->   Operation 67 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%UART_addr = getelementptr i32* %UART, i64 1031"   --->   Operation 68 'getelementptr' 'UART_addr' <Predicate = (firstSample_load)> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (8.75ns)   --->   "%UART_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34]   --->   Operation 69 'writereq' 'UART_addr_req' <Predicate = (firstSample_load)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 70 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr, i32 69, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34]   --->   Operation 70 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%UART_addr_1 = getelementptr i32* %UART, i64 1027"   --->   Operation 71 'getelementptr' 'UART_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (8.75ns)   --->   "%UART_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_1, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37]   --->   Operation 72 'writereq' 'UART_addr_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 73 [5/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34]   --->   Operation 73 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 74 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_1, i32 128, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37]   --->   Operation 74 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%UART_addr_2 = getelementptr i32* %UART, i64 1024"   --->   Operation 75 'getelementptr' 'UART_addr_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (8.75ns)   --->   "%UART_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_2, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42]   --->   Operation 76 'writereq' 'UART_addr_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 77 [4/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34]   --->   Operation 77 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 78 [5/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37]   --->   Operation 78 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 79 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_2, i32 63, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42]   --->   Operation 79 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%UART_addr_3 = getelementptr i32* %UART, i64 1025"   --->   Operation 80 'getelementptr' 'UART_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (8.75ns)   --->   "%UART_addr_3_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_3, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45]   --->   Operation 81 'writereq' 'UART_addr_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 82 [3/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34]   --->   Operation 82 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 83 [4/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37]   --->   Operation 83 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 84 [5/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42]   --->   Operation 84 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 85 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_3, i32 0, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45]   --->   Operation 85 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 86 [1/1] (8.75ns)   --->   "%UART_addr_1_req4 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_1, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48]   --->   Operation 86 'writereq' 'UART_addr_1_req4' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 87 [2/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34]   --->   Operation 87 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 88 [3/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37]   --->   Operation 88 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 89 [4/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42]   --->   Operation 89 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 90 [5/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45]   --->   Operation 90 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 91 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_1, i32 31, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48]   --->   Operation 91 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 92 [1/1] (0.00ns)   --->   "%UART_addr_4 = getelementptr i32* %UART, i64 1026"   --->   Operation 92 'getelementptr' 'UART_addr_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 93 [1/1] (8.75ns)   --->   "%UART_addr_4_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_4, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51]   --->   Operation 93 'writereq' 'UART_addr_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 94 [1/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34]   --->   Operation 94 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 95 [2/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37]   --->   Operation 95 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 96 [3/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42]   --->   Operation 96 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 97 [4/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45]   --->   Operation 97 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 98 [5/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48]   --->   Operation 98 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 99 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_4, i32 1, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51]   --->   Operation 99 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 100 [1/1] (8.75ns)   --->   "%UART_addr_3_req6 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_3, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58]   --->   Operation 100 'writereq' 'UART_addr_3_req6' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 101 [1/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37]   --->   Operation 101 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 102 [2/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42]   --->   Operation 102 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 103 [3/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45]   --->   Operation 103 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 104 [4/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48]   --->   Operation 104 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 105 [5/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51]   --->   Operation 105 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 106 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_3, i32 1, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58]   --->   Operation 106 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 107 [1/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42]   --->   Operation 107 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 108 [2/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45]   --->   Operation 108 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 109 [3/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48]   --->   Operation 109 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 110 [4/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51]   --->   Operation 110 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 111 [5/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58]   --->   Operation 111 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 112 [1/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45]   --->   Operation 112 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 113 [2/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48]   --->   Operation 113 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 114 [3/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51]   --->   Operation 114 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 115 [4/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58]   --->   Operation 115 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 116 [1/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48]   --->   Operation 116 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 117 [2/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51]   --->   Operation 117 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 118 [3/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58]   --->   Operation 118 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 119 [1/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51]   --->   Operation 119 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 120 [2/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58]   --->   Operation 120 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 121 [1/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58]   --->   Operation 121 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 122 [7/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 122 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 123 [6/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 123 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 124 [5/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 124 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.75>
ST_17 : Operation 125 [4/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 125 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 8.75>
ST_18 : Operation 126 [3/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 126 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 8.75>
ST_19 : Operation 127 [2/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 127 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 8.75>
ST_20 : Operation 128 [1/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 128 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 8.75>
ST_21 : Operation 129 [1/1] (8.75ns)   --->   "%UART_addr_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 129 'read' 'UART_addr_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 130 [1/1] (0.00ns)   --->   "%temp = trunc i32 %UART_addr_read to i8" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 130 'trunc' 'temp' <Predicate = true> <Delay = 0.00>

State 22 <SV = 21> <Delay = 8.75>
ST_22 : Operation 131 [1/1] (1.55ns)   --->   "%tmp = icmp eq i8 %temp, 69" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:63]   --->   Operation 131 'icmp' 'tmp' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 132 [1/1] (0.00ns)   --->   "br i1 %tmp, label %2, label %._crit_edge1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:63]   --->   Operation 132 'br' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 133 [1/1] (0.00ns)   --->   "store i1 true, i1* @calibrationSuccess, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 133 'store' <Predicate = (tmp)> <Delay = 0.00>
ST_22 : Operation 134 [1/1] (8.75ns)   --->   "%UART_addr_req2 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 134 'writereq' 'UART_addr_req2' <Predicate = (tmp)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 8.75>
ST_23 : Operation 135 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr, i32 0, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 135 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 8.75>
ST_24 : Operation 136 [5/5] (8.75ns)   --->   "%UART_addr_resp3 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 136 'writeresp' 'UART_addr_resp3' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 8.75>
ST_25 : Operation 137 [4/5] (8.75ns)   --->   "%UART_addr_resp3 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 137 'writeresp' 'UART_addr_resp3' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 8.75>
ST_26 : Operation 138 [3/5] (8.75ns)   --->   "%UART_addr_resp3 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 138 'writeresp' 'UART_addr_resp3' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 8.75>
ST_27 : Operation 139 [2/5] (8.75ns)   --->   "%UART_addr_resp3 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 139 'writeresp' 'UART_addr_resp3' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 8.75>
ST_28 : Operation 140 [1/5] (8.75ns)   --->   "%UART_addr_resp3 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 140 'writeresp' 'UART_addr_resp3' <Predicate = (firstSample_load & tmp)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 141 [1/1] (0.00ns)   --->   "br label %._crit_edge1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:67]   --->   Operation 141 'br' <Predicate = (firstSample_load & tmp)> <Delay = 0.00>
ST_28 : Operation 142 [1/1] (0.00ns)   --->   "store i1 false, i1* @firstSample, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 142 'store' <Predicate = (firstSample_load)> <Delay = 0.00>
ST_28 : Operation 143 [1/1] (0.00ns)   --->   "br label %._crit_edge" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:71]   --->   Operation 143 'br' <Predicate = (firstSample_load)> <Delay = 0.00>
ST_28 : Operation 144 [1/1] (0.00ns)   --->   "%calibrationSuccess_l = load i1* @calibrationSuccess, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:75]   --->   Operation 144 'load' 'calibrationSuccess_l' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 145 [1/1] (0.00ns)   --->   "br i1 %calibrationSuccess_l, label %3, label %._crit_edge2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:75]   --->   Operation 145 'br' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 146 [1/1] (0.00ns)   --->   "%UART_addr_5 = getelementptr i32* %UART, i64 1024"   --->   Operation 146 'getelementptr' 'UART_addr_5' <Predicate = (calibrationSuccess_l)> <Delay = 0.00>
ST_28 : Operation 147 [1/1] (8.75ns)   --->   "%UART_addr_5_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 147 'writereq' 'UART_addr_5_req' <Predicate = (calibrationSuccess_l)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 8.75>
ST_29 : Operation 148 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_5, i32 69, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 148 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 8.75>
ST_30 : Operation 149 [5/5] (8.75ns)   --->   "%UART_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 149 'writeresp' 'UART_addr_5_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 8.75>
ST_31 : Operation 150 [4/5] (8.75ns)   --->   "%UART_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 150 'writeresp' 'UART_addr_5_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 8.75>
ST_32 : Operation 151 [3/5] (8.75ns)   --->   "%UART_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 151 'writeresp' 'UART_addr_5_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 8.75>
ST_33 : Operation 152 [2/5] (8.75ns)   --->   "%UART_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 152 'writeresp' 'UART_addr_5_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 8.75>
ST_34 : Operation 153 [1/5] (8.75ns)   --->   "%UART_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 153 'writeresp' 'UART_addr_5_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 34> <Delay = 8.75>
ST_35 : Operation 154 [1/1] (3.25ns)   --->   "store i32 17, i32* %SBUS_data_addr, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:79]   --->   Operation 154 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_35 : Operation 155 [1/1] (0.00ns)   --->   "%UART_addr_6 = getelementptr i32* %UART, i64 1029"   --->   Operation 155 'getelementptr' 'UART_addr_6' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 156 [7/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 156 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 8.75>
ST_36 : Operation 157 [1/1] (0.00ns)   --->   "%SBUS_data_addr_1 = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:80]   --->   Operation 157 'getelementptr' 'SBUS_data_addr_1' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 158 [1/1] (3.25ns)   --->   "store i32 34, i32* %SBUS_data_addr_1, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:80]   --->   Operation 158 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_36 : Operation 159 [6/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 159 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 8.75>
ST_37 : Operation 160 [1/1] (0.00ns)   --->   "%SBUS_data_addr_2 = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:81]   --->   Operation 160 'getelementptr' 'SBUS_data_addr_2' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 161 [1/1] (3.25ns)   --->   "store i32 51, i32* %SBUS_data_addr_2, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:81]   --->   Operation 161 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_37 : Operation 162 [5/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 162 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 8.75>
ST_38 : Operation 163 [1/1] (0.00ns)   --->   "%SBUS_data_addr_3 = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 3" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:82]   --->   Operation 163 'getelementptr' 'SBUS_data_addr_3' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 164 [1/1] (3.25ns)   --->   "store i32 68, i32* %SBUS_data_addr_3, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:82]   --->   Operation 164 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_38 : Operation 165 [4/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 165 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 38> <Delay = 8.75>
ST_39 : Operation 166 [1/1] (0.00ns)   --->   "%SBUS_data_addr_4 = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:83]   --->   Operation 166 'getelementptr' 'SBUS_data_addr_4' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 167 [1/1] (3.25ns)   --->   "store i32 85, i32* %SBUS_data_addr_4, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:83]   --->   Operation 167 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_39 : Operation 168 [3/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 168 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 8.75>
ST_40 : Operation 169 [1/1] (0.00ns)   --->   "%SBUS_data_addr_5 = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 5" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:84]   --->   Operation 169 'getelementptr' 'SBUS_data_addr_5' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 170 [1/1] (3.25ns)   --->   "store i32 102, i32* %SBUS_data_addr_5, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:84]   --->   Operation 170 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_40 : Operation 171 [2/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 171 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 8.75>
ST_41 : Operation 172 [1/1] (0.00ns)   --->   "%SBUS_data_addr_6 = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 6" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:85]   --->   Operation 172 'getelementptr' 'SBUS_data_addr_6' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 173 [1/1] (3.25ns)   --->   "store i32 119, i32* %SBUS_data_addr_6, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:85]   --->   Operation 173 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_41 : Operation 174 [1/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 174 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 41> <Delay = 8.75>
ST_42 : Operation 175 [1/1] (0.00ns)   --->   "%SBUS_data_addr_7 = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 7" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:86]   --->   Operation 175 'getelementptr' 'SBUS_data_addr_7' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 176 [1/1] (3.25ns)   --->   "store i32 136, i32* %SBUS_data_addr_7, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:86]   --->   Operation 176 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_42 : Operation 177 [1/1] (8.75ns)   --->   "%UART_addr_6_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_6)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 177 'read' 'UART_addr_6_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 178 [1/1] (0.00ns)   --->   "%tmp_2 = trunc i32 %UART_addr_6_read to i1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 178 'trunc' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 179 [1/1] (0.00ns)   --->   "br i1 %tmp_2, label %4, label %._crit_edge3" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:105]   --->   Operation 179 'br' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 180 [7/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 180 'readreq' 'UART_load_2_req' <Predicate = (tmp_2)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 8.75>
ST_43 : Operation 181 [6/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 181 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 43> <Delay = 8.75>
ST_44 : Operation 182 [5/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 182 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 44> <Delay = 8.75>
ST_45 : Operation 183 [4/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 183 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 45> <Delay = 8.75>
ST_46 : Operation 184 [3/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 184 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 46> <Delay = 8.75>
ST_47 : Operation 185 [2/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 185 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 47> <Delay = 8.75>
ST_48 : Operation 186 [1/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 186 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_48 : Operation 187 [1/1] (0.00ns)   --->   "%UART_addr_7 = getelementptr i32* %UART, i64 1031"   --->   Operation 187 'getelementptr' 'UART_addr_7' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 188 [1/1] (8.75ns)   --->   "%UART_addr_7_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_7, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 188 'writereq' 'UART_addr_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 49 <SV = 48> <Delay = 8.75>
ST_49 : Operation 189 [1/1] (8.75ns)   --->   "%UART_addr_5_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 189 'read' 'UART_addr_5_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_49 : Operation 190 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_7, i32 1, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 190 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 50 <SV = 49> <Delay = 8.75>
ST_50 : Operation 191 [1/1] (3.25ns)   --->   "store i32 %UART_addr_5_read, i32* %SBUS_data_addr, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 191 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_50 : Operation 192 [5/5] (8.75ns)   --->   "%UART_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_7)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 192 'writeresp' 'UART_addr_7_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 51 <SV = 50> <Delay = 8.75>
ST_51 : Operation 193 [4/5] (8.75ns)   --->   "%UART_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_7)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 193 'writeresp' 'UART_addr_7_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 52 <SV = 51> <Delay = 8.75>
ST_52 : Operation 194 [3/5] (8.75ns)   --->   "%UART_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_7)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 194 'writeresp' 'UART_addr_7_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 53 <SV = 52> <Delay = 8.75>
ST_53 : Operation 195 [2/5] (8.75ns)   --->   "%UART_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_7)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 195 'writeresp' 'UART_addr_7_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 53> <Delay = 8.75>
ST_54 : Operation 196 [1/5] (8.75ns)   --->   "%UART_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_7)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 196 'writeresp' 'UART_addr_7_resp' <Predicate = (calibrationSuccess_l & tmp_2)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_54 : Operation 197 [1/1] (0.00ns)   --->   "br label %._crit_edge3" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:122]   --->   Operation 197 'br' <Predicate = (calibrationSuccess_l & tmp_2)> <Delay = 0.00>
ST_54 : Operation 198 [1/1] (0.00ns)   --->   "br label %._crit_edge2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:148]   --->   Operation 198 'br' <Predicate = (calibrationSuccess_l)> <Delay = 0.00>
ST_54 : Operation 199 [1/1] (0.00ns)   --->   "%rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([42 x i8]* @delay_until_ms_MD_5u) nounwind"   --->   Operation 199 'specregionbegin' 'rbegin' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 200 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecProtocol(i32 0, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:38->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 200 'specprotocol' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 201 [1/1] (1.76ns)   --->   "br label %5" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:42->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 201 'br' <Predicate = true> <Delay = 1.76>

State 55 <SV = 54> <Delay = 2.43>
ST_55 : Operation 202 [1/1] (0.00ns)   --->   "%p_014_0_i = phi i19 [ 0, %._crit_edge2 ], [ %ctr_V, %6 ]"   --->   Operation 202 'phi' 'p_014_0_i' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 203 [1/1] (2.43ns)   --->   "%tmp_4 = icmp eq i19 %p_014_0_i, -24288" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:42->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 203 'icmp' 'tmp_4' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 204 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 500000, i64 500000, i64 500000) nounwind"   --->   Operation 204 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 205 [1/1] (2.16ns)   --->   "%ctr_V = add i19 %p_014_0_i, 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:42->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 205 'add' 'ctr_V' <Predicate = true> <Delay = 2.16> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 206 [1/1] (0.00ns)   --->   "br i1 %tmp_4, label %"delay_until_ms<5ull, 100000000ull>.exit", label %6" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:42->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 206 'br' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 207 [1/1] (0.00ns)   --->   "%dummy_1 = load volatile i8* %dummy, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:43->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 207 'load' 'dummy_1' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_55 : Operation 208 [1/1] (0.00ns)   --->   "store volatile i8 %dummy_1, i8* %dummy, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:43->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 208 'store' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_55 : Operation 209 [1/1] (0.00ns)   --->   "br label %5" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:42->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 209 'br' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_55 : Operation 210 [1/1] (0.00ns)   --->   "%rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([42 x i8]* @delay_until_ms_MD_5u, i32 %rbegin) nounwind"   --->   Operation 210 'specregionend' 'rend' <Predicate = (tmp_4)> <Delay = 0.00>
ST_55 : Operation 211 [1/1] (0.00ns)   --->   "ret void" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:155]   --->   Operation 211 'ret' <Predicate = (tmp_4)> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ UART]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=2; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ SBUS_data]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=1; pingpong=0; private_global=0; MemPort=[0]; IO mode=ap_memory:ce=0
Port [ firstSample]:  wired=0; compound=0; hidden=1; nouse=0; global=1; static=1; extern=0; dir=2; type=0; pingpong=0; private_global=1; linkage=7; visibility=0; IO mode=ap_ovld:ce=0
Port [ calibrationSuccess]:  wired=0; compound=0; hidden=1; nouse=0; global=1; static=1; extern=0; dir=2; type=0; pingpong=0; private_global=1; linkage=7; visibility=0; IO mode=ap_ovld:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
StgValue_56          (specbitsmap      ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_57          (specbitsmap      ) [ 00000000000000000000000000000000000000000000000000000000]
SBUS_data_addr       (getelementptr    ) [ 00111111111111111111111111111111111111111111111111100000]
dummy                (alloca           ) [ 00111111111111111111111111111111111111111111111111111111]
StgValue_60          (spectopmodule    ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_61          (specinterface    ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_62          (specinterface    ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_63          (specinterface    ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_64          (specmemcore      ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_65          (specreset        ) [ 00000000000000000000000000000000000000000000000000000000]
firstSample_load     (load             ) [ 01111111111111111111111111111000000000000000000000000000]
StgValue_67          (br               ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr            (getelementptr    ) [ 00111111111111111111111111111000000000000000000000000000]
UART_addr_req        (writereq         ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_70          (write            ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_1          (getelementptr    ) [ 00011111111100000000000000000000000000000000000000000000]
UART_addr_1_req      (writereq         ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_74          (write            ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_2          (getelementptr    ) [ 00001111110000000000000000000000000000000000000000000000]
UART_addr_2_req      (writereq         ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_79          (write            ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_3          (getelementptr    ) [ 00000111111111000000000000000000000000000000000000000000]
UART_addr_3_req      (writereq         ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_85          (write            ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_1_req4     (writereq         ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_91          (write            ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_4          (getelementptr    ) [ 00000001111110000000000000000000000000000000000000000000]
UART_addr_4_req      (writereq         ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_resp       (writeresp        ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_99          (write            ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_3_req6     (writereq         ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_1_resp     (writeresp        ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_106         (write            ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_2_resp     (writeresp        ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_3_resp     (writeresp        ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_1_resp5    (writeresp        ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_4_resp     (writeresp        ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_3_resp7    (writeresp        ) [ 00000000000000000000000000000000000000000000000000000000]
UART_load_req        (readreq          ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_read       (read             ) [ 00000000000000000000000000000000000000000000000000000000]
temp                 (trunc            ) [ 00000000000000000000001000000000000000000000000000000000]
tmp                  (icmp             ) [ 00000000000000000000001111111000000000000000000000000000]
StgValue_132         (br               ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_133         (store            ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_req2       (writereq         ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_135         (write            ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_resp3      (writeresp        ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_141         (br               ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_142         (store            ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_143         (br               ) [ 00000000000000000000000000000000000000000000000000000000]
calibrationSuccess_l (load             ) [ 00000000000000000000000000001111111111111111111111111110]
StgValue_145         (br               ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_5          (getelementptr    ) [ 00000000000000000000000000000111111111111111111111000000]
UART_addr_5_req      (writereq         ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_148         (write            ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_5_resp     (writeresp        ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_154         (store            ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_6          (getelementptr    ) [ 00000000000000000000000000000000000011111110000000000000]
SBUS_data_addr_1     (getelementptr    ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_158         (store            ) [ 00000000000000000000000000000000000000000000000000000000]
SBUS_data_addr_2     (getelementptr    ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_161         (store            ) [ 00000000000000000000000000000000000000000000000000000000]
SBUS_data_addr_3     (getelementptr    ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_164         (store            ) [ 00000000000000000000000000000000000000000000000000000000]
SBUS_data_addr_4     (getelementptr    ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_167         (store            ) [ 00000000000000000000000000000000000000000000000000000000]
SBUS_data_addr_5     (getelementptr    ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_170         (store            ) [ 00000000000000000000000000000000000000000000000000000000]
SBUS_data_addr_6     (getelementptr    ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_173         (store            ) [ 00000000000000000000000000000000000000000000000000000000]
UART_load_1_req      (readreq          ) [ 00000000000000000000000000000000000000000000000000000000]
SBUS_data_addr_7     (getelementptr    ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_176         (store            ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_6_read     (read             ) [ 00000000000000000000000000000000000000000000000000000000]
tmp_2                (trunc            ) [ 00000000000000000000000000000000000000000011111111111110]
StgValue_179         (br               ) [ 00000000000000000000000000000000000000000000000000000000]
UART_load_2_req      (readreq          ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_7          (getelementptr    ) [ 00000000000000000000000000000000000000000000000001111110]
UART_addr_7_req      (writereq         ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_5_read     (read             ) [ 00000000000000000000000000000000000000000000000000100000]
StgValue_190         (write            ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_191         (store            ) [ 00000000000000000000000000000000000000000000000000000000]
UART_addr_7_resp     (writeresp        ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_197         (br               ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_198         (br               ) [ 00000000000000000000000000000000000000000000000000000000]
rbegin               (specregionbegin  ) [ 00000000000000000000000000000000000000000000000000000001]
StgValue_200         (specprotocol     ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_201         (br               ) [ 00000000000000000000000000000000000000000000000000000011]
p_014_0_i            (phi              ) [ 00000000000000000000000000000000000000000000000000000001]
tmp_4                (icmp             ) [ 00000000000000000000000000000000000000000000000000000001]
empty                (speclooptripcount) [ 00000000000000000000000000000000000000000000000000000000]
ctr_V                (add              ) [ 00000000000000000000000000000000000000000000000000000011]
StgValue_206         (br               ) [ 00000000000000000000000000000000000000000000000000000000]
dummy_1              (load             ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_208         (store            ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_209         (br               ) [ 00000000000000000000000000000000000000000000000000000011]
rend                 (specregionend    ) [ 00000000000000000000000000000000000000000000000000000000]
StgValue_211         (ret              ) [ 00000000000000000000000000000000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="UART">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="UART"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="SBUS_data">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="SBUS_data"/><MemPortTyVec>0 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="firstSample">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="firstSample"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="calibrationSuccess">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="calibrationSuccess"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="AXI_UART_DRIVER_str"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str5"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str6"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecMemCore"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str7"/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecReset"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="76" class="1001" name="const_76">
<pin_list>
<pin id="77" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_ReadReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="78" class="1001" name="const_78">
<pin_list>
<pin id="79" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.m_axi.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="80" class="1001" name="const_80">
<pin_list>
<pin id="81" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="82" class="1001" name="const_82">
<pin_list>
<pin id="83" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="84" class="1001" name="const_84">
<pin_list>
<pin id="85" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="86" class="1001" name="const_86">
<pin_list>
<pin id="87" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="88" class="1001" name="const_88">
<pin_list>
<pin id="89" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="90" class="1001" name="const_90">
<pin_list>
<pin id="91" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="92" class="1001" name="const_92">
<pin_list>
<pin id="93" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="94" class="1001" name="const_94">
<pin_list>
<pin id="95" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="96" class="1001" name="const_96">
<pin_list>
<pin id="97" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="98" class="1001" name="const_98">
<pin_list>
<pin id="99" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="100" class="1001" name="const_100">
<pin_list>
<pin id="101" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="102" class="1001" name="const_102">
<pin_list>
<pin id="103" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="104" class="1001" name="const_104">
<pin_list>
<pin id="105" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="106" class="1001" name="const_106">
<pin_list>
<pin id="107" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="108" class="1001" name="const_108">
<pin_list>
<pin id="109" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="110" class="1001" name="const_110">
<pin_list>
<pin id="111" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="112" class="1001" name="const_112">
<pin_list>
<pin id="113" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="114" class="1001" name="const_114">
<pin_list>
<pin id="115" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="116" class="1001" name="const_116">
<pin_list>
<pin id="117" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionBegin"/></StgValue>
</bind>
</comp>

<comp id="118" class="1001" name="const_118">
<pin_list>
<pin id="119" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="delay_until_ms_MD_5u"/></StgValue>
</bind>
</comp>

<comp id="120" class="1001" name="const_120">
<pin_list>
<pin id="121" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecProtocol"/></StgValue>
</bind>
</comp>

<comp id="122" class="1001" name="const_122">
<pin_list>
<pin id="123" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="124" class="1001" name="const_124">
<pin_list>
<pin id="125" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="126" class="1001" name="const_126">
<pin_list>
<pin id="127" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="128" class="1001" name="const_128">
<pin_list>
<pin id="129" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="130" class="1001" name="const_130">
<pin_list>
<pin id="131" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="132" class="1001" name="const_132">
<pin_list>
<pin id="133" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionEnd"/></StgValue>
</bind>
</comp>

<comp id="134" class="1004" name="dummy_fu_134">
<pin_list>
<pin id="135" dir="0" index="0" bw="1" slack="0"/>
<pin id="136" dir="1" index="1" bw="8" slack="54"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="dummy/1 "/>
</bind>
</comp>

<comp id="138" class="1004" name="grp_writeresp_fu_138">
<pin_list>
<pin id="139" dir="0" index="0" bw="1" slack="0"/>
<pin id="140" dir="0" index="1" bw="32" slack="0"/>
<pin id="141" dir="0" index="2" bw="1" slack="0"/>
<pin id="142" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_req/1 UART_addr_resp/3 UART_load_req/14 UART_addr_req2/22 UART_addr_resp3/24 "/>
</bind>
</comp>

<comp id="145" class="1004" name="StgValue_70_write_fu_145">
<pin_list>
<pin id="146" dir="0" index="0" bw="0" slack="0"/>
<pin id="147" dir="0" index="1" bw="32" slack="1"/>
<pin id="148" dir="0" index="2" bw="8" slack="0"/>
<pin id="149" dir="0" index="3" bw="1" slack="0"/>
<pin id="150" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_70/2 "/>
</bind>
</comp>

<comp id="154" class="1004" name="grp_writeresp_fu_154">
<pin_list>
<pin id="155" dir="0" index="0" bw="1" slack="0"/>
<pin id="156" dir="0" index="1" bw="32" slack="0"/>
<pin id="157" dir="0" index="2" bw="1" slack="0"/>
<pin id="158" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_1_req/2 UART_addr_1_resp/4 UART_addr_1_req4/5 UART_addr_1_resp5/7 "/>
</bind>
</comp>

<comp id="162" class="1004" name="StgValue_74_write_fu_162">
<pin_list>
<pin id="163" dir="0" index="0" bw="0" slack="0"/>
<pin id="164" dir="0" index="1" bw="32" slack="1"/>
<pin id="165" dir="0" index="2" bw="9" slack="0"/>
<pin id="166" dir="0" index="3" bw="1" slack="0"/>
<pin id="167" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_74/3 "/>
</bind>
</comp>

<comp id="171" class="1004" name="grp_writeresp_fu_171">
<pin_list>
<pin id="172" dir="0" index="0" bw="1" slack="0"/>
<pin id="173" dir="0" index="1" bw="32" slack="0"/>
<pin id="174" dir="0" index="2" bw="1" slack="0"/>
<pin id="175" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_2_req/3 UART_addr_2_resp/5 "/>
</bind>
</comp>

<comp id="179" class="1004" name="StgValue_79_write_fu_179">
<pin_list>
<pin id="180" dir="0" index="0" bw="0" slack="0"/>
<pin id="181" dir="0" index="1" bw="32" slack="1"/>
<pin id="182" dir="0" index="2" bw="7" slack="0"/>
<pin id="183" dir="0" index="3" bw="1" slack="0"/>
<pin id="184" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_79/4 "/>
</bind>
</comp>

<comp id="188" class="1004" name="grp_writeresp_fu_188">
<pin_list>
<pin id="189" dir="0" index="0" bw="1" slack="0"/>
<pin id="190" dir="0" index="1" bw="32" slack="0"/>
<pin id="191" dir="0" index="2" bw="1" slack="0"/>
<pin id="192" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_3_req/4 UART_addr_3_resp/6 UART_addr_3_req6/7 UART_addr_3_resp7/9 "/>
</bind>
</comp>

<comp id="196" class="1004" name="StgValue_85_write_fu_196">
<pin_list>
<pin id="197" dir="0" index="0" bw="0" slack="0"/>
<pin id="198" dir="0" index="1" bw="32" slack="1"/>
<pin id="199" dir="0" index="2" bw="1" slack="0"/>
<pin id="200" dir="0" index="3" bw="1" slack="0"/>
<pin id="201" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_85/5 "/>
</bind>
</comp>

<comp id="206" class="1004" name="StgValue_91_write_fu_206">
<pin_list>
<pin id="207" dir="0" index="0" bw="0" slack="0"/>
<pin id="208" dir="0" index="1" bw="32" slack="4"/>
<pin id="209" dir="0" index="2" bw="6" slack="0"/>
<pin id="210" dir="0" index="3" bw="1" slack="0"/>
<pin id="211" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_91/6 "/>
</bind>
</comp>

<comp id="215" class="1004" name="grp_writeresp_fu_215">
<pin_list>
<pin id="216" dir="0" index="0" bw="1" slack="0"/>
<pin id="217" dir="0" index="1" bw="32" slack="0"/>
<pin id="218" dir="0" index="2" bw="1" slack="0"/>
<pin id="219" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_4_req/6 UART_addr_4_resp/8 "/>
</bind>
</comp>

<comp id="222" class="1004" name="StgValue_99_write_fu_222">
<pin_list>
<pin id="223" dir="0" index="0" bw="0" slack="0"/>
<pin id="224" dir="0" index="1" bw="32" slack="1"/>
<pin id="225" dir="0" index="2" bw="1" slack="0"/>
<pin id="226" dir="0" index="3" bw="1" slack="0"/>
<pin id="227" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_99/7 "/>
</bind>
</comp>

<comp id="232" class="1004" name="StgValue_106_write_fu_232">
<pin_list>
<pin id="233" dir="0" index="0" bw="0" slack="0"/>
<pin id="234" dir="0" index="1" bw="32" slack="4"/>
<pin id="235" dir="0" index="2" bw="1" slack="0"/>
<pin id="236" dir="0" index="3" bw="1" slack="0"/>
<pin id="237" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_106/8 "/>
</bind>
</comp>

<comp id="242" class="1004" name="UART_addr_read_read_fu_242">
<pin_list>
<pin id="243" dir="0" index="0" bw="32" slack="0"/>
<pin id="244" dir="0" index="1" bw="32" slack="20"/>
<pin id="245" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="UART_addr_read/21 "/>
</bind>
</comp>

<comp id="247" class="1004" name="StgValue_135_write_fu_247">
<pin_list>
<pin id="248" dir="0" index="0" bw="0" slack="0"/>
<pin id="249" dir="0" index="1" bw="32" slack="22"/>
<pin id="250" dir="0" index="2" bw="1" slack="0"/>
<pin id="251" dir="0" index="3" bw="1" slack="0"/>
<pin id="252" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_135/23 "/>
</bind>
</comp>

<comp id="256" class="1004" name="grp_readreq_fu_256">
<pin_list>
<pin id="257" dir="0" index="0" bw="1" slack="0"/>
<pin id="258" dir="0" index="1" bw="32" slack="0"/>
<pin id="259" dir="0" index="2" bw="1" slack="0"/>
<pin id="260" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) writereq(1155) writeresp(1158) " fcode="readreq"/>
<opset="UART_addr_5_req/28 UART_addr_5_resp/30 UART_load_2_req/42 "/>
</bind>
</comp>

<comp id="263" class="1004" name="StgValue_148_write_fu_263">
<pin_list>
<pin id="264" dir="0" index="0" bw="0" slack="0"/>
<pin id="265" dir="0" index="1" bw="32" slack="1"/>
<pin id="266" dir="0" index="2" bw="8" slack="0"/>
<pin id="267" dir="0" index="3" bw="1" slack="0"/>
<pin id="268" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_148/29 "/>
</bind>
</comp>

<comp id="273" class="1004" name="grp_readreq_fu_273">
<pin_list>
<pin id="274" dir="0" index="0" bw="1" slack="0"/>
<pin id="275" dir="0" index="1" bw="32" slack="0"/>
<pin id="276" dir="0" index="2" bw="1" slack="0"/>
<pin id="277" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) " fcode="readreq"/>
<opset="UART_load_1_req/35 "/>
</bind>
</comp>

<comp id="280" class="1004" name="UART_addr_6_read_read_fu_280">
<pin_list>
<pin id="281" dir="0" index="0" bw="32" slack="0"/>
<pin id="282" dir="0" index="1" bw="32" slack="7"/>
<pin id="283" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="UART_addr_6_read/42 "/>
</bind>
</comp>

<comp id="286" class="1004" name="grp_writeresp_fu_286">
<pin_list>
<pin id="287" dir="0" index="0" bw="1" slack="0"/>
<pin id="288" dir="0" index="1" bw="32" slack="0"/>
<pin id="289" dir="0" index="2" bw="1" slack="0"/>
<pin id="290" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_7_req/48 UART_addr_7_resp/50 "/>
</bind>
</comp>

<comp id="293" class="1004" name="UART_addr_5_read_read_fu_293">
<pin_list>
<pin id="294" dir="0" index="0" bw="32" slack="0"/>
<pin id="295" dir="0" index="1" bw="32" slack="21"/>
<pin id="296" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="UART_addr_5_read/49 "/>
</bind>
</comp>

<comp id="298" class="1004" name="StgValue_190_write_fu_298">
<pin_list>
<pin id="299" dir="0" index="0" bw="0" slack="0"/>
<pin id="300" dir="0" index="1" bw="32" slack="1"/>
<pin id="301" dir="0" index="2" bw="1" slack="0"/>
<pin id="302" dir="0" index="3" bw="1" slack="0"/>
<pin id="303" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_190/49 "/>
</bind>
</comp>

<comp id="308" class="1004" name="SBUS_data_addr_gep_fu_308">
<pin_list>
<pin id="309" dir="0" index="0" bw="32" slack="0"/>
<pin id="310" dir="0" index="1" bw="1" slack="0"/>
<pin id="311" dir="0" index="2" bw="1" slack="0"/>
<pin id="312" dir="1" index="3" bw="12" slack="34"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="SBUS_data_addr/1 "/>
</bind>
</comp>

<comp id="316" class="1004" name="grp_access_fu_316">
<pin_list>
<pin id="317" dir="0" index="0" bw="12" slack="0"/>
<pin id="318" dir="0" index="1" bw="32" slack="0"/>
<pin id="319" dir="0" index="2" bw="0" slack="2147483647"/>
<pin id="320" dir="1" index="3" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_154/35 StgValue_158/36 StgValue_161/37 StgValue_164/38 StgValue_167/39 StgValue_170/40 StgValue_173/41 StgValue_176/42 StgValue_191/50 "/>
</bind>
</comp>

<comp id="322" class="1004" name="SBUS_data_addr_1_gep_fu_322">
<pin_list>
<pin id="323" dir="0" index="0" bw="32" slack="0"/>
<pin id="324" dir="0" index="1" bw="1" slack="0"/>
<pin id="325" dir="0" index="2" bw="1" slack="0"/>
<pin id="326" dir="1" index="3" bw="12" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="SBUS_data_addr_1/36 "/>
</bind>
</comp>

<comp id="332" class="1004" name="SBUS_data_addr_2_gep_fu_332">
<pin_list>
<pin id="333" dir="0" index="0" bw="32" slack="0"/>
<pin id="334" dir="0" index="1" bw="1" slack="0"/>
<pin id="335" dir="0" index="2" bw="3" slack="0"/>
<pin id="336" dir="1" index="3" bw="12" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="SBUS_data_addr_2/37 "/>
</bind>
</comp>

<comp id="342" class="1004" name="SBUS_data_addr_3_gep_fu_342">
<pin_list>
<pin id="343" dir="0" index="0" bw="32" slack="0"/>
<pin id="344" dir="0" index="1" bw="1" slack="0"/>
<pin id="345" dir="0" index="2" bw="3" slack="0"/>
<pin id="346" dir="1" index="3" bw="12" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="SBUS_data_addr_3/38 "/>
</bind>
</comp>

<comp id="352" class="1004" name="SBUS_data_addr_4_gep_fu_352">
<pin_list>
<pin id="353" dir="0" index="0" bw="32" slack="0"/>
<pin id="354" dir="0" index="1" bw="1" slack="0"/>
<pin id="355" dir="0" index="2" bw="4" slack="0"/>
<pin id="356" dir="1" index="3" bw="12" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="SBUS_data_addr_4/39 "/>
</bind>
</comp>

<comp id="362" class="1004" name="SBUS_data_addr_5_gep_fu_362">
<pin_list>
<pin id="363" dir="0" index="0" bw="32" slack="0"/>
<pin id="364" dir="0" index="1" bw="1" slack="0"/>
<pin id="365" dir="0" index="2" bw="4" slack="0"/>
<pin id="366" dir="1" index="3" bw="12" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="SBUS_data_addr_5/40 "/>
</bind>
</comp>

<comp id="372" class="1004" name="SBUS_data_addr_6_gep_fu_372">
<pin_list>
<pin id="373" dir="0" index="0" bw="32" slack="0"/>
<pin id="374" dir="0" index="1" bw="1" slack="0"/>
<pin id="375" dir="0" index="2" bw="4" slack="0"/>
<pin id="376" dir="1" index="3" bw="12" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="SBUS_data_addr_6/41 "/>
</bind>
</comp>

<comp id="382" class="1004" name="SBUS_data_addr_7_gep_fu_382">
<pin_list>
<pin id="383" dir="0" index="0" bw="32" slack="0"/>
<pin id="384" dir="0" index="1" bw="1" slack="0"/>
<pin id="385" dir="0" index="2" bw="4" slack="0"/>
<pin id="386" dir="1" index="3" bw="12" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="SBUS_data_addr_7/42 "/>
</bind>
</comp>

<comp id="392" class="1005" name="p_014_0_i_reg_392">
<pin_list>
<pin id="393" dir="0" index="0" bw="19" slack="1"/>
<pin id="394" dir="1" index="1" bw="19" slack="1"/>
</pin_list>
<bind>
<opset="p_014_0_i (phireg) "/>
</bind>
</comp>

<comp id="396" class="1004" name="p_014_0_i_phi_fu_396">
<pin_list>
<pin id="397" dir="0" index="0" bw="1" slack="1"/>
<pin id="398" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="399" dir="0" index="2" bw="19" slack="0"/>
<pin id="400" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="401" dir="1" index="4" bw="19" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="p_014_0_i/55 "/>
</bind>
</comp>

<comp id="403" class="1004" name="grp_fu_403">
<pin_list>
<pin id="404" dir="0" index="0" bw="32" slack="0"/>
<pin id="405" dir="0" index="1" bw="32" slack="0"/>
<pin id="406" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr/1 UART_addr_7/48 "/>
</bind>
</comp>

<comp id="411" class="1004" name="grp_fu_411">
<pin_list>
<pin id="412" dir="0" index="0" bw="32" slack="0"/>
<pin id="413" dir="0" index="1" bw="32" slack="0"/>
<pin id="414" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr_2/3 UART_addr_5/28 "/>
</bind>
</comp>

<comp id="419" class="1005" name="reg_419">
<pin_list>
<pin id="420" dir="0" index="0" bw="32" slack="1"/>
<pin id="421" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr UART_addr_7 "/>
</bind>
</comp>

<comp id="429" class="1005" name="reg_429">
<pin_list>
<pin id="430" dir="0" index="0" bw="32" slack="1"/>
<pin id="431" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_2 UART_addr_5 "/>
</bind>
</comp>

<comp id="438" class="1004" name="firstSample_load_load_fu_438">
<pin_list>
<pin id="439" dir="0" index="0" bw="1" slack="0"/>
<pin id="440" dir="1" index="1" bw="1" slack="27"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="firstSample_load/1 "/>
</bind>
</comp>

<comp id="442" class="1004" name="UART_addr_1_fu_442">
<pin_list>
<pin id="443" dir="0" index="0" bw="32" slack="0"/>
<pin id="444" dir="0" index="1" bw="32" slack="0"/>
<pin id="445" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr_1/2 "/>
</bind>
</comp>

<comp id="449" class="1004" name="UART_addr_3_fu_449">
<pin_list>
<pin id="450" dir="0" index="0" bw="32" slack="0"/>
<pin id="451" dir="0" index="1" bw="32" slack="0"/>
<pin id="452" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr_3/4 "/>
</bind>
</comp>

<comp id="456" class="1004" name="UART_addr_4_fu_456">
<pin_list>
<pin id="457" dir="0" index="0" bw="32" slack="0"/>
<pin id="458" dir="0" index="1" bw="32" slack="0"/>
<pin id="459" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr_4/6 "/>
</bind>
</comp>

<comp id="463" class="1004" name="temp_fu_463">
<pin_list>
<pin id="464" dir="0" index="0" bw="32" slack="0"/>
<pin id="465" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="temp/21 "/>
</bind>
</comp>

<comp id="467" class="1004" name="tmp_fu_467">
<pin_list>
<pin id="468" dir="0" index="0" bw="8" slack="1"/>
<pin id="469" dir="0" index="1" bw="8" slack="0"/>
<pin id="470" dir="1" index="2" bw="1" slack="6"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp/22 "/>
</bind>
</comp>

<comp id="472" class="1004" name="StgValue_133_store_fu_472">
<pin_list>
<pin id="473" dir="0" index="0" bw="1" slack="0"/>
<pin id="474" dir="0" index="1" bw="1" slack="0"/>
<pin id="475" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_133/22 "/>
</bind>
</comp>

<comp id="478" class="1004" name="StgValue_142_store_fu_478">
<pin_list>
<pin id="479" dir="0" index="0" bw="1" slack="0"/>
<pin id="480" dir="0" index="1" bw="1" slack="0"/>
<pin id="481" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_142/28 "/>
</bind>
</comp>

<comp id="484" class="1004" name="calibrationSuccess_l_load_fu_484">
<pin_list>
<pin id="485" dir="0" index="0" bw="1" slack="0"/>
<pin id="486" dir="1" index="1" bw="1" slack="26"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="calibrationSuccess_l/28 "/>
</bind>
</comp>

<comp id="488" class="1004" name="UART_addr_6_fu_488">
<pin_list>
<pin id="489" dir="0" index="0" bw="32" slack="0"/>
<pin id="490" dir="0" index="1" bw="32" slack="0"/>
<pin id="491" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr_6/35 "/>
</bind>
</comp>

<comp id="495" class="1004" name="tmp_2_fu_495">
<pin_list>
<pin id="496" dir="0" index="0" bw="32" slack="0"/>
<pin id="497" dir="1" index="1" bw="1" slack="12"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_2/42 "/>
</bind>
</comp>

<comp id="499" class="1004" name="tmp_4_fu_499">
<pin_list>
<pin id="500" dir="0" index="0" bw="19" slack="0"/>
<pin id="501" dir="0" index="1" bw="19" slack="0"/>
<pin id="502" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_4/55 "/>
</bind>
</comp>

<comp id="505" class="1004" name="ctr_V_fu_505">
<pin_list>
<pin id="506" dir="0" index="0" bw="19" slack="0"/>
<pin id="507" dir="0" index="1" bw="1" slack="0"/>
<pin id="508" dir="1" index="2" bw="19" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="ctr_V/55 "/>
</bind>
</comp>

<comp id="511" class="1004" name="dummy_1_load_fu_511">
<pin_list>
<pin id="512" dir="0" index="0" bw="8" slack="54"/>
<pin id="513" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="dummy_1/55 "/>
</bind>
</comp>

<comp id="514" class="1004" name="StgValue_208_store_fu_514">
<pin_list>
<pin id="515" dir="0" index="0" bw="8" slack="0"/>
<pin id="516" dir="0" index="1" bw="8" slack="54"/>
<pin id="517" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_208/55 "/>
</bind>
</comp>

<comp id="519" class="1005" name="SBUS_data_addr_reg_519">
<pin_list>
<pin id="520" dir="0" index="0" bw="12" slack="34"/>
<pin id="521" dir="1" index="1" bw="12" slack="34"/>
</pin_list>
<bind>
<opset="SBUS_data_addr "/>
</bind>
</comp>

<comp id="524" class="1005" name="dummy_reg_524">
<pin_list>
<pin id="525" dir="0" index="0" bw="8" slack="54"/>
<pin id="526" dir="1" index="1" bw="8" slack="54"/>
</pin_list>
<bind>
<opset="dummy "/>
</bind>
</comp>

<comp id="530" class="1005" name="firstSample_load_reg_530">
<pin_list>
<pin id="531" dir="0" index="0" bw="1" slack="27"/>
<pin id="532" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="firstSample_load "/>
</bind>
</comp>

<comp id="534" class="1005" name="UART_addr_1_reg_534">
<pin_list>
<pin id="535" dir="0" index="0" bw="32" slack="1"/>
<pin id="536" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_1 "/>
</bind>
</comp>

<comp id="541" class="1005" name="UART_addr_3_reg_541">
<pin_list>
<pin id="542" dir="0" index="0" bw="32" slack="1"/>
<pin id="543" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_3 "/>
</bind>
</comp>

<comp id="548" class="1005" name="UART_addr_4_reg_548">
<pin_list>
<pin id="549" dir="0" index="0" bw="32" slack="1"/>
<pin id="550" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_4 "/>
</bind>
</comp>

<comp id="554" class="1005" name="temp_reg_554">
<pin_list>
<pin id="555" dir="0" index="0" bw="8" slack="1"/>
<pin id="556" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="temp "/>
</bind>
</comp>

<comp id="559" class="1005" name="tmp_reg_559">
<pin_list>
<pin id="560" dir="0" index="0" bw="1" slack="6"/>
<pin id="561" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="tmp "/>
</bind>
</comp>

<comp id="563" class="1005" name="calibrationSuccess_l_reg_563">
<pin_list>
<pin id="564" dir="0" index="0" bw="1" slack="26"/>
<pin id="565" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="calibrationSuccess_l "/>
</bind>
</comp>

<comp id="567" class="1005" name="UART_addr_6_reg_567">
<pin_list>
<pin id="568" dir="0" index="0" bw="32" slack="1"/>
<pin id="569" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_6 "/>
</bind>
</comp>

<comp id="573" class="1005" name="tmp_2_reg_573">
<pin_list>
<pin id="574" dir="0" index="0" bw="1" slack="12"/>
<pin id="575" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="tmp_2 "/>
</bind>
</comp>

<comp id="577" class="1005" name="UART_addr_5_read_reg_577">
<pin_list>
<pin id="578" dir="0" index="0" bw="32" slack="1"/>
<pin id="579" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_5_read "/>
</bind>
</comp>

<comp id="585" class="1005" name="ctr_V_reg_585">
<pin_list>
<pin id="586" dir="0" index="0" bw="19" slack="0"/>
<pin id="587" dir="1" index="1" bw="19" slack="0"/>
</pin_list>
<bind>
<opset="ctr_V "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="137"><net_src comp="12" pin="0"/><net_sink comp="134" pin=0"/></net>

<net id="143"><net_src comp="52" pin="0"/><net_sink comp="138" pin=0"/></net>

<net id="144"><net_src comp="48" pin="0"/><net_sink comp="138" pin=2"/></net>

<net id="151"><net_src comp="54" pin="0"/><net_sink comp="145" pin=0"/></net>

<net id="152"><net_src comp="56" pin="0"/><net_sink comp="145" pin=2"/></net>

<net id="153"><net_src comp="58" pin="0"/><net_sink comp="145" pin=3"/></net>

<net id="159"><net_src comp="52" pin="0"/><net_sink comp="154" pin=0"/></net>

<net id="160"><net_src comp="48" pin="0"/><net_sink comp="154" pin=2"/></net>

<net id="161"><net_src comp="62" pin="0"/><net_sink comp="138" pin=0"/></net>

<net id="168"><net_src comp="54" pin="0"/><net_sink comp="162" pin=0"/></net>

<net id="169"><net_src comp="64" pin="0"/><net_sink comp="162" pin=2"/></net>

<net id="170"><net_src comp="58" pin="0"/><net_sink comp="162" pin=3"/></net>

<net id="176"><net_src comp="52" pin="0"/><net_sink comp="171" pin=0"/></net>

<net id="177"><net_src comp="48" pin="0"/><net_sink comp="171" pin=2"/></net>

<net id="178"><net_src comp="62" pin="0"/><net_sink comp="154" pin=0"/></net>

<net id="185"><net_src comp="54" pin="0"/><net_sink comp="179" pin=0"/></net>

<net id="186"><net_src comp="68" pin="0"/><net_sink comp="179" pin=2"/></net>

<net id="187"><net_src comp="58" pin="0"/><net_sink comp="179" pin=3"/></net>

<net id="193"><net_src comp="52" pin="0"/><net_sink comp="188" pin=0"/></net>

<net id="194"><net_src comp="48" pin="0"/><net_sink comp="188" pin=2"/></net>

<net id="195"><net_src comp="62" pin="0"/><net_sink comp="171" pin=0"/></net>

<net id="202"><net_src comp="54" pin="0"/><net_sink comp="196" pin=0"/></net>

<net id="203"><net_src comp="20" pin="0"/><net_sink comp="196" pin=2"/></net>

<net id="204"><net_src comp="58" pin="0"/><net_sink comp="196" pin=3"/></net>

<net id="205"><net_src comp="62" pin="0"/><net_sink comp="188" pin=0"/></net>

<net id="212"><net_src comp="54" pin="0"/><net_sink comp="206" pin=0"/></net>

<net id="213"><net_src comp="72" pin="0"/><net_sink comp="206" pin=2"/></net>

<net id="214"><net_src comp="58" pin="0"/><net_sink comp="206" pin=3"/></net>

<net id="220"><net_src comp="52" pin="0"/><net_sink comp="215" pin=0"/></net>

<net id="221"><net_src comp="48" pin="0"/><net_sink comp="215" pin=2"/></net>

<net id="228"><net_src comp="54" pin="0"/><net_sink comp="222" pin=0"/></net>

<net id="229"><net_src comp="48" pin="0"/><net_sink comp="222" pin=2"/></net>

<net id="230"><net_src comp="58" pin="0"/><net_sink comp="222" pin=3"/></net>

<net id="231"><net_src comp="62" pin="0"/><net_sink comp="215" pin=0"/></net>

<net id="238"><net_src comp="54" pin="0"/><net_sink comp="232" pin=0"/></net>

<net id="239"><net_src comp="48" pin="0"/><net_sink comp="232" pin=2"/></net>

<net id="240"><net_src comp="58" pin="0"/><net_sink comp="232" pin=3"/></net>

<net id="241"><net_src comp="76" pin="0"/><net_sink comp="138" pin=0"/></net>

<net id="246"><net_src comp="78" pin="0"/><net_sink comp="242" pin=0"/></net>

<net id="253"><net_src comp="54" pin="0"/><net_sink comp="247" pin=0"/></net>

<net id="254"><net_src comp="20" pin="0"/><net_sink comp="247" pin=2"/></net>

<net id="255"><net_src comp="58" pin="0"/><net_sink comp="247" pin=3"/></net>

<net id="261"><net_src comp="52" pin="0"/><net_sink comp="256" pin=0"/></net>

<net id="262"><net_src comp="48" pin="0"/><net_sink comp="256" pin=2"/></net>

<net id="269"><net_src comp="54" pin="0"/><net_sink comp="263" pin=0"/></net>

<net id="270"><net_src comp="56" pin="0"/><net_sink comp="263" pin=2"/></net>

<net id="271"><net_src comp="58" pin="0"/><net_sink comp="263" pin=3"/></net>

<net id="272"><net_src comp="62" pin="0"/><net_sink comp="256" pin=0"/></net>

<net id="278"><net_src comp="76" pin="0"/><net_sink comp="273" pin=0"/></net>

<net id="279"><net_src comp="48" pin="0"/><net_sink comp="273" pin=2"/></net>

<net id="284"><net_src comp="78" pin="0"/><net_sink comp="280" pin=0"/></net>

<net id="285"><net_src comp="76" pin="0"/><net_sink comp="256" pin=0"/></net>

<net id="291"><net_src comp="52" pin="0"/><net_sink comp="286" pin=0"/></net>

<net id="292"><net_src comp="48" pin="0"/><net_sink comp="286" pin=2"/></net>

<net id="297"><net_src comp="78" pin="0"/><net_sink comp="293" pin=0"/></net>

<net id="304"><net_src comp="54" pin="0"/><net_sink comp="298" pin=0"/></net>

<net id="305"><net_src comp="48" pin="0"/><net_sink comp="298" pin=2"/></net>

<net id="306"><net_src comp="58" pin="0"/><net_sink comp="298" pin=3"/></net>

<net id="307"><net_src comp="62" pin="0"/><net_sink comp="286" pin=0"/></net>

<net id="313"><net_src comp="2" pin="0"/><net_sink comp="308" pin=0"/></net>

<net id="314"><net_src comp="10" pin="0"/><net_sink comp="308" pin=1"/></net>

<net id="315"><net_src comp="10" pin="0"/><net_sink comp="308" pin=2"/></net>

<net id="321"><net_src comp="86" pin="0"/><net_sink comp="316" pin=1"/></net>

<net id="327"><net_src comp="2" pin="0"/><net_sink comp="322" pin=0"/></net>

<net id="328"><net_src comp="10" pin="0"/><net_sink comp="322" pin=1"/></net>

<net id="329"><net_src comp="12" pin="0"/><net_sink comp="322" pin=2"/></net>

<net id="330"><net_src comp="90" pin="0"/><net_sink comp="316" pin=1"/></net>

<net id="331"><net_src comp="322" pin="3"/><net_sink comp="316" pin=0"/></net>

<net id="337"><net_src comp="2" pin="0"/><net_sink comp="332" pin=0"/></net>

<net id="338"><net_src comp="10" pin="0"/><net_sink comp="332" pin=1"/></net>

<net id="339"><net_src comp="92" pin="0"/><net_sink comp="332" pin=2"/></net>

<net id="340"><net_src comp="94" pin="0"/><net_sink comp="316" pin=1"/></net>

<net id="341"><net_src comp="332" pin="3"/><net_sink comp="316" pin=0"/></net>

<net id="347"><net_src comp="2" pin="0"/><net_sink comp="342" pin=0"/></net>

<net id="348"><net_src comp="10" pin="0"/><net_sink comp="342" pin=1"/></net>

<net id="349"><net_src comp="96" pin="0"/><net_sink comp="342" pin=2"/></net>

<net id="350"><net_src comp="98" pin="0"/><net_sink comp="316" pin=1"/></net>

<net id="351"><net_src comp="342" pin="3"/><net_sink comp="316" pin=0"/></net>

<net id="357"><net_src comp="2" pin="0"/><net_sink comp="352" pin=0"/></net>

<net id="358"><net_src comp="10" pin="0"/><net_sink comp="352" pin=1"/></net>

<net id="359"><net_src comp="100" pin="0"/><net_sink comp="352" pin=2"/></net>

<net id="360"><net_src comp="102" pin="0"/><net_sink comp="316" pin=1"/></net>

<net id="361"><net_src comp="352" pin="3"/><net_sink comp="316" pin=0"/></net>

<net id="367"><net_src comp="2" pin="0"/><net_sink comp="362" pin=0"/></net>

<net id="368"><net_src comp="10" pin="0"/><net_sink comp="362" pin=1"/></net>

<net id="369"><net_src comp="104" pin="0"/><net_sink comp="362" pin=2"/></net>

<net id="370"><net_src comp="106" pin="0"/><net_sink comp="316" pin=1"/></net>

<net id="371"><net_src comp="362" pin="3"/><net_sink comp="316" pin=0"/></net>

<net id="377"><net_src comp="2" pin="0"/><net_sink comp="372" pin=0"/></net>

<net id="378"><net_src comp="10" pin="0"/><net_sink comp="372" pin=1"/></net>

<net id="379"><net_src comp="108" pin="0"/><net_sink comp="372" pin=2"/></net>

<net id="380"><net_src comp="110" pin="0"/><net_sink comp="316" pin=1"/></net>

<net id="381"><net_src comp="372" pin="3"/><net_sink comp="316" pin=0"/></net>

<net id="387"><net_src comp="2" pin="0"/><net_sink comp="382" pin=0"/></net>

<net id="388"><net_src comp="10" pin="0"/><net_sink comp="382" pin=1"/></net>

<net id="389"><net_src comp="112" pin="0"/><net_sink comp="382" pin=2"/></net>

<net id="390"><net_src comp="114" pin="0"/><net_sink comp="316" pin=1"/></net>

<net id="391"><net_src comp="382" pin="3"/><net_sink comp="316" pin=0"/></net>

<net id="395"><net_src comp="122" pin="0"/><net_sink comp="392" pin=0"/></net>

<net id="402"><net_src comp="392" pin="1"/><net_sink comp="396" pin=0"/></net>

<net id="407"><net_src comp="0" pin="0"/><net_sink comp="403" pin=0"/></net>

<net id="408"><net_src comp="50" pin="0"/><net_sink comp="403" pin=1"/></net>

<net id="409"><net_src comp="403" pin="2"/><net_sink comp="138" pin=1"/></net>

<net id="410"><net_src comp="403" pin="2"/><net_sink comp="286" pin=1"/></net>

<net id="415"><net_src comp="0" pin="0"/><net_sink comp="411" pin=0"/></net>

<net id="416"><net_src comp="66" pin="0"/><net_sink comp="411" pin=1"/></net>

<net id="417"><net_src comp="411" pin="2"/><net_sink comp="171" pin=1"/></net>

<net id="418"><net_src comp="411" pin="2"/><net_sink comp="256" pin=1"/></net>

<net id="422"><net_src comp="403" pin="2"/><net_sink comp="419" pin=0"/></net>

<net id="423"><net_src comp="419" pin="1"/><net_sink comp="145" pin=1"/></net>

<net id="424"><net_src comp="419" pin="1"/><net_sink comp="138" pin=1"/></net>

<net id="425"><net_src comp="419" pin="1"/><net_sink comp="242" pin=1"/></net>

<net id="426"><net_src comp="419" pin="1"/><net_sink comp="247" pin=1"/></net>

<net id="427"><net_src comp="419" pin="1"/><net_sink comp="298" pin=1"/></net>

<net id="428"><net_src comp="419" pin="1"/><net_sink comp="286" pin=1"/></net>

<net id="432"><net_src comp="411" pin="2"/><net_sink comp="429" pin=0"/></net>

<net id="433"><net_src comp="429" pin="1"/><net_sink comp="179" pin=1"/></net>

<net id="434"><net_src comp="429" pin="1"/><net_sink comp="171" pin=1"/></net>

<net id="435"><net_src comp="429" pin="1"/><net_sink comp="263" pin=1"/></net>

<net id="436"><net_src comp="429" pin="1"/><net_sink comp="256" pin=1"/></net>

<net id="437"><net_src comp="429" pin="1"/><net_sink comp="293" pin=1"/></net>

<net id="441"><net_src comp="4" pin="0"/><net_sink comp="438" pin=0"/></net>

<net id="446"><net_src comp="0" pin="0"/><net_sink comp="442" pin=0"/></net>

<net id="447"><net_src comp="60" pin="0"/><net_sink comp="442" pin=1"/></net>

<net id="448"><net_src comp="442" pin="2"/><net_sink comp="154" pin=1"/></net>

<net id="453"><net_src comp="0" pin="0"/><net_sink comp="449" pin=0"/></net>

<net id="454"><net_src comp="70" pin="0"/><net_sink comp="449" pin=1"/></net>

<net id="455"><net_src comp="449" pin="2"/><net_sink comp="188" pin=1"/></net>

<net id="460"><net_src comp="0" pin="0"/><net_sink comp="456" pin=0"/></net>

<net id="461"><net_src comp="74" pin="0"/><net_sink comp="456" pin=1"/></net>

<net id="462"><net_src comp="456" pin="2"/><net_sink comp="215" pin=1"/></net>

<net id="466"><net_src comp="242" pin="2"/><net_sink comp="463" pin=0"/></net>

<net id="471"><net_src comp="80" pin="0"/><net_sink comp="467" pin=1"/></net>

<net id="476"><net_src comp="82" pin="0"/><net_sink comp="472" pin=0"/></net>

<net id="477"><net_src comp="6" pin="0"/><net_sink comp="472" pin=1"/></net>

<net id="482"><net_src comp="84" pin="0"/><net_sink comp="478" pin=0"/></net>

<net id="483"><net_src comp="4" pin="0"/><net_sink comp="478" pin=1"/></net>

<net id="487"><net_src comp="6" pin="0"/><net_sink comp="484" pin=0"/></net>

<net id="492"><net_src comp="0" pin="0"/><net_sink comp="488" pin=0"/></net>

<net id="493"><net_src comp="88" pin="0"/><net_sink comp="488" pin=1"/></net>

<net id="494"><net_src comp="488" pin="2"/><net_sink comp="273" pin=1"/></net>

<net id="498"><net_src comp="280" pin="2"/><net_sink comp="495" pin=0"/></net>

<net id="503"><net_src comp="396" pin="4"/><net_sink comp="499" pin=0"/></net>

<net id="504"><net_src comp="124" pin="0"/><net_sink comp="499" pin=1"/></net>

<net id="509"><net_src comp="396" pin="4"/><net_sink comp="505" pin=0"/></net>

<net id="510"><net_src comp="130" pin="0"/><net_sink comp="505" pin=1"/></net>

<net id="518"><net_src comp="511" pin="1"/><net_sink comp="514" pin=0"/></net>

<net id="522"><net_src comp="308" pin="3"/><net_sink comp="519" pin=0"/></net>

<net id="523"><net_src comp="519" pin="1"/><net_sink comp="316" pin=0"/></net>

<net id="527"><net_src comp="134" pin="1"/><net_sink comp="524" pin=0"/></net>

<net id="528"><net_src comp="524" pin="1"/><net_sink comp="511" pin=0"/></net>

<net id="529"><net_src comp="524" pin="1"/><net_sink comp="514" pin=1"/></net>

<net id="533"><net_src comp="438" pin="1"/><net_sink comp="530" pin=0"/></net>

<net id="537"><net_src comp="442" pin="2"/><net_sink comp="534" pin=0"/></net>

<net id="538"><net_src comp="534" pin="1"/><net_sink comp="162" pin=1"/></net>

<net id="539"><net_src comp="534" pin="1"/><net_sink comp="154" pin=1"/></net>

<net id="540"><net_src comp="534" pin="1"/><net_sink comp="206" pin=1"/></net>

<net id="544"><net_src comp="449" pin="2"/><net_sink comp="541" pin=0"/></net>

<net id="545"><net_src comp="541" pin="1"/><net_sink comp="196" pin=1"/></net>

<net id="546"><net_src comp="541" pin="1"/><net_sink comp="188" pin=1"/></net>

<net id="547"><net_src comp="541" pin="1"/><net_sink comp="232" pin=1"/></net>

<net id="551"><net_src comp="456" pin="2"/><net_sink comp="548" pin=0"/></net>

<net id="552"><net_src comp="548" pin="1"/><net_sink comp="222" pin=1"/></net>

<net id="553"><net_src comp="548" pin="1"/><net_sink comp="215" pin=1"/></net>

<net id="557"><net_src comp="463" pin="1"/><net_sink comp="554" pin=0"/></net>

<net id="558"><net_src comp="554" pin="1"/><net_sink comp="467" pin=0"/></net>

<net id="562"><net_src comp="467" pin="2"/><net_sink comp="559" pin=0"/></net>

<net id="566"><net_src comp="484" pin="1"/><net_sink comp="563" pin=0"/></net>

<net id="570"><net_src comp="488" pin="2"/><net_sink comp="567" pin=0"/></net>

<net id="571"><net_src comp="567" pin="1"/><net_sink comp="273" pin=1"/></net>

<net id="572"><net_src comp="567" pin="1"/><net_sink comp="280" pin=1"/></net>

<net id="576"><net_src comp="495" pin="1"/><net_sink comp="573" pin=0"/></net>

<net id="580"><net_src comp="293" pin="2"/><net_sink comp="577" pin=0"/></net>

<net id="581"><net_src comp="577" pin="1"/><net_sink comp="316" pin=1"/></net>

<net id="588"><net_src comp="505" pin="2"/><net_sink comp="585" pin=0"/></net>

<net id="589"><net_src comp="585" pin="1"/><net_sink comp="396" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: UART | {1 2 3 4 5 6 7 8 9 10 11 12 13 22 23 24 25 26 27 28 29 30 31 32 33 34 48 49 50 51 52 53 54 }
	Port: SBUS_data | {35 36 37 38 39 40 41 42 50 }
	Port: firstSample | {28 }
	Port: calibrationSuccess | {22 }
 - Input state : 
	Port: AXI_UART_DRIVER : UART | {14 15 16 17 18 19 20 21 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 }
	Port: AXI_UART_DRIVER : firstSample | {1 }
	Port: AXI_UART_DRIVER : calibrationSuccess | {28 }
  - Chain level:
	State 1
		StgValue_67 : 1
		UART_addr_req : 1
	State 2
		UART_addr_1_req : 1
	State 3
		UART_addr_2_req : 1
	State 4
		UART_addr_3_req : 1
	State 5
	State 6
		UART_addr_4_req : 1
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
		StgValue_132 : 1
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
		StgValue_145 : 1
		UART_addr_5_req : 1
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
		UART_load_1_req : 1
	State 36
		StgValue_158 : 1
	State 37
		StgValue_161 : 1
	State 38
		StgValue_164 : 1
	State 39
		StgValue_167 : 1
	State 40
		StgValue_170 : 1
	State 41
		StgValue_173 : 1
	State 42
		StgValue_176 : 1
		StgValue_179 : 1
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
		UART_addr_7_req : 1
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
		tmp_4 : 1
		ctr_V : 1
		StgValue_206 : 2
		StgValue_208 : 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|------------------------------|---------|---------|
| Operation|        Functional Unit       |    FF   |   LUT   |
|----------|------------------------------|---------|---------|
|   icmp   |          tmp_fu_467          |    0    |    11   |
|          |         tmp_4_fu_499         |    0    |    18   |
|----------|------------------------------|---------|---------|
|    add   |         ctr_V_fu_505         |    0    |    26   |
|----------|------------------------------|---------|---------|
|          |     grp_writeresp_fu_138     |    0    |    0    |
|          |     grp_writeresp_fu_154     |    0    |    0    |
| writeresp|     grp_writeresp_fu_171     |    0    |    0    |
|          |     grp_writeresp_fu_188     |    0    |    0    |
|          |     grp_writeresp_fu_215     |    0    |    0    |
|          |     grp_writeresp_fu_286     |    0    |    0    |
|----------|------------------------------|---------|---------|
|          |   StgValue_70_write_fu_145   |    0    |    0    |
|          |   StgValue_74_write_fu_162   |    0    |    0    |
|          |   StgValue_79_write_fu_179   |    0    |    0    |
|          |   StgValue_85_write_fu_196   |    0    |    0    |
|   write  |   StgValue_91_write_fu_206   |    0    |    0    |
|          |   StgValue_99_write_fu_222   |    0    |    0    |
|          |   StgValue_106_write_fu_232  |    0    |    0    |
|          |   StgValue_135_write_fu_247  |    0    |    0    |
|          |   StgValue_148_write_fu_263  |    0    |    0    |
|          |   StgValue_190_write_fu_298  |    0    |    0    |
|----------|------------------------------|---------|---------|
|          |  UART_addr_read_read_fu_242  |    0    |    0    |
|   read   | UART_addr_6_read_read_fu_280 |    0    |    0    |
|          | UART_addr_5_read_read_fu_293 |    0    |    0    |
|----------|------------------------------|---------|---------|
|  readreq |      grp_readreq_fu_256      |    0    |    0    |
|          |      grp_readreq_fu_273      |    0    |    0    |
|----------|------------------------------|---------|---------|
|   trunc  |          temp_fu_463         |    0    |    0    |
|          |         tmp_2_fu_495         |    0    |    0    |
|----------|------------------------------|---------|---------|
|   Total  |                              |    0    |    55   |
|----------|------------------------------|---------|---------|

Memories:
N/A

* Register list:
+----------------------------+--------+
|                            |   FF   |
+----------------------------+--------+
|   SBUS_data_addr_reg_519   |   12   |
|     UART_addr_1_reg_534    |   32   |
|     UART_addr_3_reg_541    |   32   |
|     UART_addr_4_reg_548    |   32   |
|  UART_addr_5_read_reg_577  |   32   |
|     UART_addr_6_reg_567    |   32   |
|calibrationSuccess_l_reg_563|    1   |
|        ctr_V_reg_585       |   19   |
|        dummy_reg_524       |    8   |
|  firstSample_load_reg_530  |    1   |
|      p_014_0_i_reg_392     |   19   |
|           reg_419          |   32   |
|           reg_429          |   32   |
|        temp_reg_554        |    8   |
|        tmp_2_reg_573       |    1   |
|         tmp_reg_559        |    1   |
+----------------------------+--------+
|            Total           |   294  |
+----------------------------+--------+

* Multiplexer (MUX) list: 
|----------------------|------|------|------|--------||---------||---------|
|         Comp         |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|----------------------|------|------|------|--------||---------||---------|
| grp_writeresp_fu_138 |  p0  |   3  |   1  |    3   |
| grp_writeresp_fu_138 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_154 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_154 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_171 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_171 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_188 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_188 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_215 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_215 |  p1  |   2  |  32  |   64   ||    9    |
|  grp_readreq_fu_256  |  p0  |   3  |   1  |    3   |
|  grp_readreq_fu_256  |  p1  |   2  |  32  |   64   ||    9    |
|  grp_readreq_fu_273  |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_286 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_286 |  p1  |   2  |  32  |   64   ||    9    |
|   grp_access_fu_316  |  p0  |   8  |  12  |   96   ||    41   |
|   grp_access_fu_316  |  p1  |   9  |  32  |   288  ||    21   |
|----------------------|------|------|------|--------||---------||---------|
|         Total        |      |      |      |   912  ||  30.654 ||   134   |
|----------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |   55   |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|   30   |    -   |   134  |
|  Register |    -   |   294  |    -   |
+-----------+--------+--------+--------+
|   Total   |   30   |   294  |   189  |
+-----------+--------+--------+--------+
