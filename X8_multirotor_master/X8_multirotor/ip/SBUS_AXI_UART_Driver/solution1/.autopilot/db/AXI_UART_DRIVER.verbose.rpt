

================================================================
== Vivado HLS Report for 'AXI_UART_DRIVER'
================================================================
* Date:           Sun May 19 18:18:10 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        SBUS_AXI_UART_Driver
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  500003|  500058|  500003|  500058|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+--------+--------+----------+-----------+-----------+--------+----------+
        |          |     Latency     | Iteration|  Initiation Interval  |  Trip  |          |
        | Loop Name|   min  |   max  |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------+--------+--------+----------+-----------+-----------+--------+----------+
        |- Loop 1  |  500000|  500000|         1|          -|          -|  500000|    no    |
        +----------+--------+--------+----------+-----------+-----------+--------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|DSP              |        -|      -|       -|      -|
|Expression       |        -|      -|       0|     73|
|FIFO             |        -|      -|       -|      -|
|Instance         |        4|      -|    1132|   1440|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|    566|
|Register         |        -|      -|      96|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        4|      0|    1228|   2079|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        1|      0|       1|      3|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    +-------------------------------+-----------------------------+---------+-------+-----+-----+
    |            Instance           |            Module           | BRAM_18K| DSP48E|  FF | LUT |
    +-------------------------------+-----------------------------+---------+-------+-----+-----+
    |AXI_UART_DRIVER_CTRL_s_axi_U   |AXI_UART_DRIVER_CTRL_s_axi   |        0|      0|   36|   40|
    |AXI_UART_DRIVER_OUT_r_m_axi_U  |AXI_UART_DRIVER_OUT_r_m_axi  |        2|      0|  548|  700|
    |AXI_UART_DRIVER_UART_m_axi_U   |AXI_UART_DRIVER_UART_m_axi   |        2|      0|  548|  700|
    +-------------------------------+-----------------------------+---------+-------+-----+-----+
    |Total                          |                             |        4|      0| 1132| 1440|
    +-------------------------------+-----------------------------+---------+-------+-----+-----+

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +--------------------------------------+----------+-------+---+----+------------+------------+
    |             Variable Name            | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +--------------------------------------+----------+-------+---+----+------------+------------+
    |ctr_V_fu_556_p2                       |     +    |      0|  0|  26|          19|           1|
    |ap_block_state1_io                    |    and   |      0|  0|   2|           1|           1|
    |ap_block_state22_io                   |    and   |      0|  0|   2|           1|           1|
    |ap_block_state28                      |    and   |      0|  0|   2|           1|           1|
    |ap_block_state28_io                   |    and   |      0|  0|   2|           1|           1|
    |ap_block_state58                      |    and   |      0|  0|   2|           1|           1|
    |ap_condition_1236                     |    and   |      0|  0|   2|           1|           1|
    |ap_condition_192                      |    and   |      0|  0|   2|           1|           1|
    |ap_predicate_op142_writeresp_state28  |    and   |      0|  0|   2|           1|           1|
    |tmp_1_fu_550_p2                       |   icmp   |      0|  0|  18|          19|          16|
    |tmp_fu_529_p2                         |   icmp   |      0|  0|  11|           8|           7|
    |ap_block_state2_io                    |    or    |      0|  0|   2|           1|           1|
    +--------------------------------------+----------+-------+---+----+------------+------------+
    |Total                                 |          |      0|  0|  73|          55|          33|
    +--------------------------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +------------------------------+-----+-----------+-----+-----------+
    |             Name             | LUT | Input Size| Bits| Total Bits|
    +------------------------------+-----+-----------+-----+-----------+
    |OUT_r_WDATA                   |  101|         21|    8|        168|
    |OUT_r_blk_n_AW                |    9|          2|    1|          2|
    |OUT_r_blk_n_B                 |    9|          2|    1|          2|
    |OUT_r_blk_n_W                 |    9|          2|    1|          2|
    |UART_AWADDR                   |   44|          9|   32|        288|
    |UART_WDATA                    |   38|          7|   32|        224|
    |UART_blk_n_AR                 |    9|          2|    1|          2|
    |UART_blk_n_AW                 |    9|          2|    1|          2|
    |UART_blk_n_B                  |    9|          2|    1|          2|
    |UART_blk_n_R                  |    9|          2|    1|          2|
    |UART_blk_n_W                  |    9|          2|    1|          2|
    |ap_NS_fsm                     |  257|         60|    1|         60|
    |ap_sig_ioackin_OUT_r_AWREADY  |    9|          2|    1|          2|
    |ap_sig_ioackin_OUT_r_WREADY   |    9|          2|    1|          2|
    |ap_sig_ioackin_UART_ARREADY   |    9|          2|    1|          2|
    |ap_sig_ioackin_UART_AWREADY   |    9|          2|    1|          2|
    |ap_sig_ioackin_UART_WREADY    |    9|          2|    1|          2|
    |p_014_0_i_reg_475             |    9|          2|   19|         38|
    +------------------------------+-----+-----------+-----+-----------+
    |Total                         |  566|        125|  105|        804|
    +------------------------------+-----+-----------+-----+-----------+

    * Register: 
    +------------------------------+----+----+-----+-----------+
    |             Name             | FF | LUT| Bits| Const Bits|
    +------------------------------+----+----+-----+-----------+
    |ap_CS_fsm                     |  59|   0|   59|          0|
    |ap_reg_ioackin_OUT_r_AWREADY  |   1|   0|    1|          0|
    |ap_reg_ioackin_OUT_r_WREADY   |   1|   0|    1|          0|
    |ap_reg_ioackin_UART_ARREADY   |   1|   0|    1|          0|
    |ap_reg_ioackin_UART_AWREADY   |   1|   0|    1|          0|
    |ap_reg_ioackin_UART_WREADY    |   1|   0|    1|          0|
    |calibrationSuccess            |   1|   0|    1|          0|
    |calibrationSuccess_l_reg_623  |   1|   0|    1|          0|
    |firstSample                   |   1|   0|    1|          0|
    |firstSample_load_reg_576      |   1|   0|    1|          0|
    |p_014_0_i_reg_475             |  19|   0|   19|          0|
    |temp_reg_614                  |   8|   0|    8|          0|
    |tmp_reg_619                   |   1|   0|    1|          0|
    +------------------------------+----+----+-----+-----------+
    |Total                         |  96|   0|   96|          0|
    +------------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+----------------------+-----+-----+------------+-----------------+--------------+
|       RTL Ports      | Dir | Bits|  Protocol  |  Source Object  |    C Type    |
+----------------------+-----+-----+------------+-----------------+--------------+
|s_axi_CTRL_AWVALID    |  in |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_AWREADY    | out |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_AWADDR     |  in |    4|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_WVALID     |  in |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_WREADY     | out |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_WDATA      |  in |   32|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_WSTRB      |  in |    4|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_ARVALID    |  in |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_ARREADY    | out |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_ARADDR     |  in |    4|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_RVALID     | out |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_RREADY     |  in |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_RDATA      | out |   32|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_RRESP      | out |    2|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_BVALID     | out |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_BREADY     |  in |    1|    s_axi   |       CTRL      |  return void |
|s_axi_CTRL_BRESP      | out |    2|    s_axi   |       CTRL      |  return void |
|ap_clk                |  in |    1| ap_ctrl_hs | AXI_UART_DRIVER | return value |
|ap_rst_n              |  in |    1| ap_ctrl_hs | AXI_UART_DRIVER | return value |
|interrupt             | out |    1| ap_ctrl_hs | AXI_UART_DRIVER | return value |
|m_axi_UART_AWVALID    | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWREADY    |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWADDR     | out |   32|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWID       | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWLEN      | out |    8|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWSIZE     | out |    3|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWBURST    | out |    2|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWLOCK     | out |    2|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWCACHE    | out |    4|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWPROT     | out |    3|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWQOS      | out |    4|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWREGION   | out |    4|    m_axi   |       UART      |    pointer   |
|m_axi_UART_AWUSER     | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_WVALID     | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_WREADY     |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_WDATA      | out |   32|    m_axi   |       UART      |    pointer   |
|m_axi_UART_WSTRB      | out |    4|    m_axi   |       UART      |    pointer   |
|m_axi_UART_WLAST      | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_WID        | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_WUSER      | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARVALID    | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARREADY    |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARADDR     | out |   32|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARID       | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARLEN      | out |    8|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARSIZE     | out |    3|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARBURST    | out |    2|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARLOCK     | out |    2|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARCACHE    | out |    4|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARPROT     | out |    3|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARQOS      | out |    4|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARREGION   | out |    4|    m_axi   |       UART      |    pointer   |
|m_axi_UART_ARUSER     | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_RVALID     |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_RREADY     | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_RDATA      |  in |   32|    m_axi   |       UART      |    pointer   |
|m_axi_UART_RLAST      |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_RID        |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_RUSER      |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_RRESP      |  in |    2|    m_axi   |       UART      |    pointer   |
|m_axi_UART_BVALID     |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_BREADY     | out |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_BRESP      |  in |    2|    m_axi   |       UART      |    pointer   |
|m_axi_UART_BID        |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_UART_BUSER      |  in |    1|    m_axi   |       UART      |    pointer   |
|m_axi_OUT_r_AWVALID   | out |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_AWREADY   |  in |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_AWADDR    | out |   32|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_AWID      | out |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_AWLEN     | out |    8|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_AWSIZE    | out |    3|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_AWBURST   | out |    2|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_AWLOCK    | out |    2|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_AWCACHE   | out |    4|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_AWPROT    | out |    3|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_AWQOS     | out |    4|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_AWREGION  | out |    4|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_AWUSER    | out |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_WVALID    | out |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_WREADY    |  in |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_WDATA     | out |   32|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_WSTRB     | out |    4|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_WLAST     | out |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_WID       | out |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_WUSER     | out |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_ARVALID   | out |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_ARREADY   |  in |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_ARADDR    | out |   32|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_ARID      | out |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_ARLEN     | out |    8|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_ARSIZE    | out |    3|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_ARBURST   | out |    2|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_ARLOCK    | out |    2|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_ARCACHE   | out |    4|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_ARPROT    | out |    3|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_ARQOS     | out |    4|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_ARREGION  | out |    4|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_ARUSER    | out |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_RVALID    |  in |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_RREADY    | out |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_RDATA     |  in |   32|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_RLAST     |  in |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_RID       |  in |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_RUSER     |  in |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_RRESP     |  in |    2|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_BVALID    |  in |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_BREADY    | out |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_BRESP     |  in |    2|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_BID       |  in |    1|    m_axi   |      OUT_r      |    pointer   |
|m_axi_OUT_r_BUSER     |  in |    1|    m_axi   |      OUT_r      |    pointer   |
+----------------------+-----+-----+------------+-----------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 59
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (firstSample_load)
	28  / (!firstSample_load)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / (tmp)
	28  / (!tmp)
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / (calibrationSuccess_l)
	58  / (!calibrationSuccess_l)
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	59  / (!tmp_1)

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.75>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %UART), !map !37"   --->   Operation 60 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %OUT_r), !map !43"   --->   Operation 61 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%dummy = alloca i8, align 1"   --->   Operation 62 'alloca' 'dummy' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([16 x i8]* @AXI_UART_DRIVER_str) nounwind"   --->   Operation 63 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:12]   --->   Operation 64 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %UART, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 4096, [5 x i8]* @p_str4, [4 x i8]* @p_str5, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 65 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %OUT_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 4096, [4 x i8]* @p_str6, [4 x i8]* @p_str5, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 66 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i1* @firstSample, i32 1, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:30]   --->   Operation 67 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%firstSample_load = load i1* @firstSample, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:33]   --->   Operation 68 'load' 'firstSample_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "br i1 %firstSample_load, label %1, label %._crit_edge" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:33]   --->   Operation 69 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%UART_addr = getelementptr i32* %UART, i64 1031"   --->   Operation 70 'getelementptr' 'UART_addr' <Predicate = (firstSample_load)> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (8.75ns)   --->   "%UART_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:38]   --->   Operation 71 'writereq' 'UART_addr_req' <Predicate = (firstSample_load)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 72 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr, i32 69, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:38]   --->   Operation 72 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%UART_addr_1 = getelementptr i32* %UART, i64 1027"   --->   Operation 73 'getelementptr' 'UART_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (8.75ns)   --->   "%UART_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_1, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:41]   --->   Operation 74 'writereq' 'UART_addr_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 75 [5/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:38]   --->   Operation 75 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 76 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_1, i32 128, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:41]   --->   Operation 76 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%UART_addr_2 = getelementptr i32* %UART, i64 1024"   --->   Operation 77 'getelementptr' 'UART_addr_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (8.75ns)   --->   "%UART_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_2, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:46]   --->   Operation 78 'writereq' 'UART_addr_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 79 [4/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:38]   --->   Operation 79 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 80 [5/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:41]   --->   Operation 80 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 81 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_2, i32 63, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:46]   --->   Operation 81 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%UART_addr_3 = getelementptr i32* %UART, i64 1025"   --->   Operation 82 'getelementptr' 'UART_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (8.75ns)   --->   "%UART_addr_3_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_3, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:49]   --->   Operation 83 'writereq' 'UART_addr_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 84 [3/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:38]   --->   Operation 84 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 85 [4/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:41]   --->   Operation 85 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 86 [5/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:46]   --->   Operation 86 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 87 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_3, i32 0, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:49]   --->   Operation 87 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 88 [1/1] (8.75ns)   --->   "%UART_addr_1_req6 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_1, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 88 'writereq' 'UART_addr_1_req6' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 89 [2/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:38]   --->   Operation 89 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 90 [3/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:41]   --->   Operation 90 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 91 [4/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:46]   --->   Operation 91 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 92 [5/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:49]   --->   Operation 92 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 93 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_1, i32 31, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 93 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 94 [1/1] (0.00ns)   --->   "%UART_addr_4 = getelementptr i32* %UART, i64 1026"   --->   Operation 94 'getelementptr' 'UART_addr_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 95 [1/1] (8.75ns)   --->   "%UART_addr_4_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_4, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 95 'writereq' 'UART_addr_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 96 [1/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:38]   --->   Operation 96 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 97 [2/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:41]   --->   Operation 97 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 98 [3/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:46]   --->   Operation 98 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 99 [4/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:49]   --->   Operation 99 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 100 [5/5] (8.75ns)   --->   "%UART_addr_1_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 100 'writeresp' 'UART_addr_1_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 101 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_4, i32 1, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 101 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 102 [1/1] (8.75ns)   --->   "%UART_addr_3_req8 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_3, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 102 'writereq' 'UART_addr_3_req8' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 103 [1/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:41]   --->   Operation 103 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 104 [2/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:46]   --->   Operation 104 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 105 [3/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:49]   --->   Operation 105 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 106 [4/5] (8.75ns)   --->   "%UART_addr_1_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 106 'writeresp' 'UART_addr_1_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 107 [5/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 107 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 108 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_3, i32 1, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 108 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 109 [1/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:46]   --->   Operation 109 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 110 [2/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:49]   --->   Operation 110 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 111 [3/5] (8.75ns)   --->   "%UART_addr_1_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 111 'writeresp' 'UART_addr_1_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 112 [4/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 112 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 113 [5/5] (8.75ns)   --->   "%UART_addr_3_resp9 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 113 'writeresp' 'UART_addr_3_resp9' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 114 [1/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:49]   --->   Operation 114 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 115 [2/5] (8.75ns)   --->   "%UART_addr_1_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 115 'writeresp' 'UART_addr_1_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 116 [3/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 116 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 117 [4/5] (8.75ns)   --->   "%UART_addr_3_resp9 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 117 'writeresp' 'UART_addr_3_resp9' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 118 [1/5] (8.75ns)   --->   "%UART_addr_1_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 118 'writeresp' 'UART_addr_1_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 119 [2/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 119 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 120 [3/5] (8.75ns)   --->   "%UART_addr_3_resp9 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 120 'writeresp' 'UART_addr_3_resp9' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 121 [1/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 121 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 122 [2/5] (8.75ns)   --->   "%UART_addr_3_resp9 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 122 'writeresp' 'UART_addr_3_resp9' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 123 [1/5] (8.75ns)   --->   "%UART_addr_3_resp9 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 123 'writeresp' 'UART_addr_3_resp9' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 124 [7/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 124 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 125 [6/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 125 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 126 [5/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 126 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.75>
ST_17 : Operation 127 [4/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 127 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 8.75>
ST_18 : Operation 128 [3/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 128 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 8.75>
ST_19 : Operation 129 [2/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 129 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 8.75>
ST_20 : Operation 130 [1/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 130 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 8.75>
ST_21 : Operation 131 [1/1] (8.75ns)   --->   "%UART_addr_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 131 'read' 'UART_addr_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 132 [1/1] (0.00ns)   --->   "%temp = trunc i32 %UART_addr_read to i8" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 132 'trunc' 'temp' <Predicate = true> <Delay = 0.00>

State 22 <SV = 21> <Delay = 8.75>
ST_22 : Operation 133 [1/1] (1.55ns)   --->   "%tmp = icmp eq i8 %temp, 69" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:67]   --->   Operation 133 'icmp' 'tmp' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 134 [1/1] (0.00ns)   --->   "br i1 %tmp, label %2, label %._crit_edge1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:67]   --->   Operation 134 'br' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 135 [1/1] (0.00ns)   --->   "store i1 true, i1* @calibrationSuccess, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:69]   --->   Operation 135 'store' <Predicate = (tmp)> <Delay = 0.00>
ST_22 : Operation 136 [1/1] (8.75ns)   --->   "%UART_addr_req4 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 136 'writereq' 'UART_addr_req4' <Predicate = (tmp)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 8.75>
ST_23 : Operation 137 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr, i32 0, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 137 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 8.75>
ST_24 : Operation 138 [5/5] (8.75ns)   --->   "%UART_addr_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 138 'writeresp' 'UART_addr_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 8.75>
ST_25 : Operation 139 [4/5] (8.75ns)   --->   "%UART_addr_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 139 'writeresp' 'UART_addr_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 8.75>
ST_26 : Operation 140 [3/5] (8.75ns)   --->   "%UART_addr_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 140 'writeresp' 'UART_addr_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 8.75>
ST_27 : Operation 141 [2/5] (8.75ns)   --->   "%UART_addr_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 141 'writeresp' 'UART_addr_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 8.75>
ST_28 : Operation 142 [1/5] (8.75ns)   --->   "%UART_addr_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 142 'writeresp' 'UART_addr_resp5' <Predicate = (firstSample_load & tmp)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 143 [1/1] (0.00ns)   --->   "br label %._crit_edge1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:71]   --->   Operation 143 'br' <Predicate = (firstSample_load & tmp)> <Delay = 0.00>
ST_28 : Operation 144 [1/1] (0.00ns)   --->   "store i1 false, i1* @firstSample, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 144 'store' <Predicate = (firstSample_load)> <Delay = 0.00>
ST_28 : Operation 145 [1/1] (0.00ns)   --->   "br label %._crit_edge" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:75]   --->   Operation 145 'br' <Predicate = (firstSample_load)> <Delay = 0.00>
ST_28 : Operation 146 [1/1] (0.00ns)   --->   "%calibrationSuccess_l = load i1* @calibrationSuccess, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:79]   --->   Operation 146 'load' 'calibrationSuccess_l' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 147 [1/1] (0.00ns)   --->   "br i1 %calibrationSuccess_l, label %3, label %._crit_edge2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:79]   --->   Operation 147 'br' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 148 [1/1] (8.75ns)   --->   "%OUT_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %OUT_r, i32 25)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:89]   --->   Operation 148 'writereq' 'OUT_req' <Predicate = (calibrationSuccess_l)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 8.75>
ST_29 : Operation 149 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 15, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:89]   --->   Operation 149 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 8.75>
ST_30 : Operation 150 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 -56, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:90]   --->   Operation 150 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 8.75>
ST_31 : Operation 151 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 -16, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91]   --->   Operation 151 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 8.75>
ST_32 : Operation 152 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 -6, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:92]   --->   Operation 152 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 8.75>
ST_33 : Operation 153 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 95, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 153 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 8.75>
ST_34 : Operation 154 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 107, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:94]   --->   Operation 154 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 34> <Delay = 8.75>
ST_35 : Operation 155 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 -29, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95]   --->   Operation 155 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 8.75>
ST_36 : Operation 156 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 80, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 156 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 8.75>
ST_37 : Operation 157 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 106, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:97]   --->   Operation 157 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 8.75>
ST_38 : Operation 158 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 13, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:98]   --->   Operation 158 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 38> <Delay = 8.75>
ST_39 : Operation 159 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 64, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:99]   --->   Operation 159 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 8.75>
ST_40 : Operation 160 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 62, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 160 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 8.75>
ST_41 : Operation 161 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 -52, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:101]   --->   Operation 161 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 41> <Delay = 8.75>
ST_42 : Operation 162 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 -32, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:102]   --->   Operation 162 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 8.75>
ST_43 : Operation 163 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 -8, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:103]   --->   Operation 163 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 43> <Delay = 8.75>
ST_44 : Operation 164 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 31, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 164 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 44> <Delay = 8.75>
ST_45 : Operation 165 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 3, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:105]   --->   Operation 165 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 45> <Delay = 8.75>
ST_46 : Operation 166 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 -32, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 166 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 46> <Delay = 8.75>
ST_47 : Operation 167 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 124, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 167 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 47> <Delay = 8.75>
ST_48 : Operation 168 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 15, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:108]   --->   Operation 168 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 49 <SV = 48> <Delay = 8.75>
ST_49 : Operation 169 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 -127, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 169 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 50 <SV = 49> <Delay = 8.75>
ST_50 : Operation 170 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 -16, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:110]   --->   Operation 170 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 51 <SV = 50> <Delay = 8.75>
ST_51 : Operation 171 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 62, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:111]   --->   Operation 171 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 52 <SV = 51> <Delay = 8.75>
ST_52 : Operation 172 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 0, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:112]   --->   Operation 172 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 53 <SV = 52> <Delay = 8.75>
ST_53 : Operation 173 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 0, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:113]   --->   Operation 173 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 53> <Delay = 8.75>
ST_54 : Operation 174 [5/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:113]   --->   Operation 174 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 55 <SV = 54> <Delay = 8.75>
ST_55 : Operation 175 [4/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:113]   --->   Operation 175 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 56 <SV = 55> <Delay = 8.75>
ST_56 : Operation 176 [3/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:113]   --->   Operation 176 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 57 <SV = 56> <Delay = 8.75>
ST_57 : Operation 177 [2/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:113]   --->   Operation 177 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 58 <SV = 57> <Delay = 8.75>
ST_58 : Operation 178 [1/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:113]   --->   Operation 178 'writeresp' 'OUT_resp' <Predicate = (calibrationSuccess_l)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_58 : Operation 179 [1/1] (0.00ns)   --->   "br label %._crit_edge2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:167]   --->   Operation 179 'br' <Predicate = (calibrationSuccess_l)> <Delay = 0.00>
ST_58 : Operation 180 [1/1] (0.00ns)   --->   "%rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([42 x i8]* @delay_until_ms_MD_5u) nounwind"   --->   Operation 180 'specregionbegin' 'rbegin' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 181 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecProtocol(i32 0, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:42->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 181 'specprotocol' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 182 [1/1] (1.76ns)   --->   "br label %4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:46->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 182 'br' <Predicate = true> <Delay = 1.76>

State 59 <SV = 58> <Delay = 2.43>
ST_59 : Operation 183 [1/1] (0.00ns)   --->   "%p_014_0_i = phi i19 [ 0, %._crit_edge2 ], [ %ctr_V, %5 ]"   --->   Operation 183 'phi' 'p_014_0_i' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 184 [1/1] (2.43ns)   --->   "%tmp_1 = icmp eq i19 %p_014_0_i, -24288" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:46->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 184 'icmp' 'tmp_1' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 185 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 500000, i64 500000, i64 500000) nounwind"   --->   Operation 185 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 186 [1/1] (2.16ns)   --->   "%ctr_V = add i19 %p_014_0_i, 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:46->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 186 'add' 'ctr_V' <Predicate = true> <Delay = 2.16> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 187 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %"delay_until_ms<5ull, 100000000ull>.exit", label %5" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:46->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 187 'br' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 188 [1/1] (0.00ns)   --->   "%dummy_1 = load volatile i8* %dummy, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:47->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 188 'load' 'dummy_1' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_59 : Operation 189 [1/1] (0.00ns)   --->   "store volatile i8 %dummy_1, i8* %dummy, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:47->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 189 'store' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_59 : Operation 190 [1/1] (0.00ns)   --->   "br label %4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:46->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 190 'br' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_59 : Operation 191 [1/1] (0.00ns)   --->   "%rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([42 x i8]* @delay_until_ms_MD_5u, i32 %rbegin) nounwind"   --->   Operation 191 'specregionend' 'rend' <Predicate = (tmp_1)> <Delay = 0.00>
ST_59 : Operation 192 [1/1] (0.00ns)   --->   "ret void" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:174]   --->   Operation 192 'ret' <Predicate = (tmp_1)> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ UART]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=2; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ OUT_r]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ firstSample]:  wired=0; compound=0; hidden=1; nouse=0; global=1; static=1; extern=0; dir=2; type=0; pingpong=0; private_global=1; linkage=7; visibility=0; IO mode=ap_ovld:ce=0
Port [ calibrationSuccess]:  wired=0; compound=0; hidden=1; nouse=0; global=1; static=1; extern=0; dir=2; type=0; pingpong=0; private_global=1; linkage=7; visibility=0; IO mode=ap_ovld:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
StgValue_60          (specbitsmap      ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_61          (specbitsmap      ) [ 000000000000000000000000000000000000000000000000000000000000]
dummy                (alloca           ) [ 001111111111111111111111111111111111111111111111111111111111]
StgValue_63          (spectopmodule    ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_64          (specinterface    ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_65          (specinterface    ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_66          (specinterface    ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_67          (specreset        ) [ 000000000000000000000000000000000000000000000000000000000000]
firstSample_load     (load             ) [ 011111111111111111111111111110000000000000000000000000000000]
StgValue_69          (br               ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr            (getelementptr    ) [ 001111111111111111111111111110000000000000000000000000000000]
UART_addr_req        (writereq         ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_72          (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_1          (getelementptr    ) [ 000111111111000000000000000000000000000000000000000000000000]
UART_addr_1_req      (writereq         ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_76          (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_2          (getelementptr    ) [ 000011111100000000000000000000000000000000000000000000000000]
UART_addr_2_req      (writereq         ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_81          (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_3          (getelementptr    ) [ 000001111111110000000000000000000000000000000000000000000000]
UART_addr_3_req      (writereq         ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_87          (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_1_req6     (writereq         ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_93          (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_4          (getelementptr    ) [ 000000011111100000000000000000000000000000000000000000000000]
UART_addr_4_req      (writereq         ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_resp       (writeresp        ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_101         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_3_req8     (writereq         ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_1_resp     (writeresp        ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_108         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_2_resp     (writeresp        ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_3_resp     (writeresp        ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_1_resp7    (writeresp        ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_4_resp     (writeresp        ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_3_resp9    (writeresp        ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_load_req        (readreq          ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_read       (read             ) [ 000000000000000000000000000000000000000000000000000000000000]
temp                 (trunc            ) [ 000000000000000000000010000000000000000000000000000000000000]
tmp                  (icmp             ) [ 000000000000000000000011111110000000000000000000000000000000]
StgValue_134         (br               ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_135         (store            ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_req4       (writereq         ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_137         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
UART_addr_resp5      (writeresp        ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_143         (br               ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_144         (store            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_145         (br               ) [ 000000000000000000000000000000000000000000000000000000000000]
calibrationSuccess_l (load             ) [ 000000000000000000000000000011111111111111111111111111111110]
StgValue_147         (br               ) [ 000000000000000000000000000000000000000000000000000000000000]
OUT_req              (writereq         ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_149         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_150         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_151         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_152         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_153         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_154         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_155         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_156         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_157         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_158         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_159         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_160         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_161         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_162         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_163         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_164         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_165         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_166         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_167         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_168         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_169         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_170         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_171         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_172         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_173         (write            ) [ 000000000000000000000000000000000000000000000000000000000000]
OUT_resp             (writeresp        ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_179         (br               ) [ 000000000000000000000000000000000000000000000000000000000000]
rbegin               (specregionbegin  ) [ 000000000000000000000000000000000000000000000000000000000001]
StgValue_181         (specprotocol     ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_182         (br               ) [ 000000000000000000000000000000000000000000000000000000000011]
p_014_0_i            (phi              ) [ 000000000000000000000000000000000000000000000000000000000001]
tmp_1                (icmp             ) [ 000000000000000000000000000000000000000000000000000000000001]
empty                (speclooptripcount) [ 000000000000000000000000000000000000000000000000000000000000]
ctr_V                (add              ) [ 000000000000000000000000000000000000000000000000000000000011]
StgValue_187         (br               ) [ 000000000000000000000000000000000000000000000000000000000000]
dummy_1              (load             ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_189         (store            ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_190         (br               ) [ 000000000000000000000000000000000000000000000000000000000011]
rend                 (specregionend    ) [ 000000000000000000000000000000000000000000000000000000000000]
StgValue_192         (ret              ) [ 000000000000000000000000000000000000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="UART">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="UART"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="OUT_r">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="OUT_r"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="firstSample">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="firstSample"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="calibrationSuccess">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="calibrationSuccess"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="AXI_UART_DRIVER_str"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str5"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str6"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecReset"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_ReadReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.m_axi.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="76" class="1001" name="const_76">
<pin_list>
<pin id="77" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="78" class="1001" name="const_78">
<pin_list>
<pin id="79" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="80" class="1001" name="const_80">
<pin_list>
<pin id="81" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="82" class="1001" name="const_82">
<pin_list>
<pin id="83" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="84" class="1001" name="const_84">
<pin_list>
<pin id="85" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="86" class="1001" name="const_86">
<pin_list>
<pin id="87" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="88" class="1001" name="const_88">
<pin_list>
<pin id="89" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="90" class="1001" name="const_90">
<pin_list>
<pin id="91" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="92" class="1001" name="const_92">
<pin_list>
<pin id="93" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="94" class="1001" name="const_94">
<pin_list>
<pin id="95" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="96" class="1001" name="const_96">
<pin_list>
<pin id="97" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="98" class="1001" name="const_98">
<pin_list>
<pin id="99" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="100" class="1001" name="const_100">
<pin_list>
<pin id="101" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="102" class="1001" name="const_102">
<pin_list>
<pin id="103" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="104" class="1001" name="const_104">
<pin_list>
<pin id="105" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="106" class="1001" name="const_106">
<pin_list>
<pin id="107" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="108" class="1001" name="const_108">
<pin_list>
<pin id="109" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="110" class="1001" name="const_110">
<pin_list>
<pin id="111" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="112" class="1001" name="const_112">
<pin_list>
<pin id="113" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="114" class="1001" name="const_114">
<pin_list>
<pin id="115" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="116" class="1001" name="const_116">
<pin_list>
<pin id="117" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="118" class="1001" name="const_118">
<pin_list>
<pin id="119" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="120" class="1001" name="const_120">
<pin_list>
<pin id="121" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="122" class="1001" name="const_122">
<pin_list>
<pin id="123" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="124" class="1001" name="const_124">
<pin_list>
<pin id="125" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="126" class="1001" name="const_126">
<pin_list>
<pin id="127" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionBegin"/></StgValue>
</bind>
</comp>

<comp id="128" class="1001" name="const_128">
<pin_list>
<pin id="129" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="delay_until_ms_MD_5u"/></StgValue>
</bind>
</comp>

<comp id="130" class="1001" name="const_130">
<pin_list>
<pin id="131" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecProtocol"/></StgValue>
</bind>
</comp>

<comp id="132" class="1001" name="const_132">
<pin_list>
<pin id="133" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="134" class="1001" name="const_134">
<pin_list>
<pin id="135" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="136" class="1001" name="const_136">
<pin_list>
<pin id="137" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="138" class="1001" name="const_138">
<pin_list>
<pin id="139" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="140" class="1001" name="const_140">
<pin_list>
<pin id="141" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="142" class="1001" name="const_142">
<pin_list>
<pin id="143" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionEnd"/></StgValue>
</bind>
</comp>

<comp id="144" class="1004" name="dummy_fu_144">
<pin_list>
<pin id="145" dir="0" index="0" bw="1" slack="0"/>
<pin id="146" dir="1" index="1" bw="8" slack="58"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="dummy/1 "/>
</bind>
</comp>

<comp id="148" class="1004" name="grp_writeresp_fu_148">
<pin_list>
<pin id="149" dir="0" index="0" bw="1" slack="0"/>
<pin id="150" dir="0" index="1" bw="32" slack="0"/>
<pin id="151" dir="0" index="2" bw="1" slack="0"/>
<pin id="152" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_req/1 UART_addr_resp/3 UART_load_req/14 UART_addr_req4/22 UART_addr_resp5/24 "/>
</bind>
</comp>

<comp id="155" class="1004" name="StgValue_72_write_fu_155">
<pin_list>
<pin id="156" dir="0" index="0" bw="0" slack="0"/>
<pin id="157" dir="0" index="1" bw="32" slack="1"/>
<pin id="158" dir="0" index="2" bw="8" slack="0"/>
<pin id="159" dir="0" index="3" bw="1" slack="0"/>
<pin id="160" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_72/2 "/>
</bind>
</comp>

<comp id="164" class="1004" name="grp_writeresp_fu_164">
<pin_list>
<pin id="165" dir="0" index="0" bw="1" slack="0"/>
<pin id="166" dir="0" index="1" bw="32" slack="0"/>
<pin id="167" dir="0" index="2" bw="1" slack="0"/>
<pin id="168" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_1_req/2 UART_addr_1_resp/4 UART_addr_1_req6/5 UART_addr_1_resp7/7 "/>
</bind>
</comp>

<comp id="172" class="1004" name="StgValue_76_write_fu_172">
<pin_list>
<pin id="173" dir="0" index="0" bw="0" slack="0"/>
<pin id="174" dir="0" index="1" bw="32" slack="1"/>
<pin id="175" dir="0" index="2" bw="9" slack="0"/>
<pin id="176" dir="0" index="3" bw="1" slack="0"/>
<pin id="177" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_76/3 "/>
</bind>
</comp>

<comp id="181" class="1004" name="grp_writeresp_fu_181">
<pin_list>
<pin id="182" dir="0" index="0" bw="1" slack="0"/>
<pin id="183" dir="0" index="1" bw="32" slack="0"/>
<pin id="184" dir="0" index="2" bw="1" slack="0"/>
<pin id="185" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_2_req/3 UART_addr_2_resp/5 "/>
</bind>
</comp>

<comp id="189" class="1004" name="StgValue_81_write_fu_189">
<pin_list>
<pin id="190" dir="0" index="0" bw="0" slack="0"/>
<pin id="191" dir="0" index="1" bw="32" slack="1"/>
<pin id="192" dir="0" index="2" bw="7" slack="0"/>
<pin id="193" dir="0" index="3" bw="1" slack="0"/>
<pin id="194" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_81/4 "/>
</bind>
</comp>

<comp id="198" class="1004" name="grp_writeresp_fu_198">
<pin_list>
<pin id="199" dir="0" index="0" bw="1" slack="0"/>
<pin id="200" dir="0" index="1" bw="32" slack="0"/>
<pin id="201" dir="0" index="2" bw="1" slack="0"/>
<pin id="202" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_3_req/4 UART_addr_3_resp/6 UART_addr_3_req8/7 UART_addr_3_resp9/9 "/>
</bind>
</comp>

<comp id="206" class="1004" name="StgValue_87_write_fu_206">
<pin_list>
<pin id="207" dir="0" index="0" bw="0" slack="0"/>
<pin id="208" dir="0" index="1" bw="32" slack="1"/>
<pin id="209" dir="0" index="2" bw="1" slack="0"/>
<pin id="210" dir="0" index="3" bw="1" slack="0"/>
<pin id="211" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_87/5 "/>
</bind>
</comp>

<comp id="216" class="1004" name="StgValue_93_write_fu_216">
<pin_list>
<pin id="217" dir="0" index="0" bw="0" slack="0"/>
<pin id="218" dir="0" index="1" bw="32" slack="4"/>
<pin id="219" dir="0" index="2" bw="6" slack="0"/>
<pin id="220" dir="0" index="3" bw="1" slack="0"/>
<pin id="221" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_93/6 "/>
</bind>
</comp>

<comp id="225" class="1004" name="grp_writeresp_fu_225">
<pin_list>
<pin id="226" dir="0" index="0" bw="1" slack="0"/>
<pin id="227" dir="0" index="1" bw="32" slack="0"/>
<pin id="228" dir="0" index="2" bw="1" slack="0"/>
<pin id="229" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_4_req/6 UART_addr_4_resp/8 "/>
</bind>
</comp>

<comp id="232" class="1004" name="StgValue_101_write_fu_232">
<pin_list>
<pin id="233" dir="0" index="0" bw="0" slack="0"/>
<pin id="234" dir="0" index="1" bw="32" slack="1"/>
<pin id="235" dir="0" index="2" bw="1" slack="0"/>
<pin id="236" dir="0" index="3" bw="1" slack="0"/>
<pin id="237" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_101/7 "/>
</bind>
</comp>

<comp id="242" class="1004" name="StgValue_108_write_fu_242">
<pin_list>
<pin id="243" dir="0" index="0" bw="0" slack="0"/>
<pin id="244" dir="0" index="1" bw="32" slack="4"/>
<pin id="245" dir="0" index="2" bw="1" slack="0"/>
<pin id="246" dir="0" index="3" bw="1" slack="0"/>
<pin id="247" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_108/8 "/>
</bind>
</comp>

<comp id="252" class="1004" name="UART_addr_read_read_fu_252">
<pin_list>
<pin id="253" dir="0" index="0" bw="32" slack="0"/>
<pin id="254" dir="0" index="1" bw="32" slack="20"/>
<pin id="255" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="UART_addr_read/21 "/>
</bind>
</comp>

<comp id="257" class="1004" name="StgValue_137_write_fu_257">
<pin_list>
<pin id="258" dir="0" index="0" bw="0" slack="0"/>
<pin id="259" dir="0" index="1" bw="32" slack="22"/>
<pin id="260" dir="0" index="2" bw="1" slack="0"/>
<pin id="261" dir="0" index="3" bw="1" slack="0"/>
<pin id="262" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_137/23 "/>
</bind>
</comp>

<comp id="266" class="1004" name="grp_writeresp_fu_266">
<pin_list>
<pin id="267" dir="0" index="0" bw="1" slack="0"/>
<pin id="268" dir="0" index="1" bw="8" slack="0"/>
<pin id="269" dir="0" index="2" bw="6" slack="0"/>
<pin id="270" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="OUT_req/28 OUT_resp/54 "/>
</bind>
</comp>

<comp id="274" class="1004" name="grp_write_fu_274">
<pin_list>
<pin id="275" dir="0" index="0" bw="0" slack="0"/>
<pin id="276" dir="0" index="1" bw="8" slack="0"/>
<pin id="277" dir="0" index="2" bw="5" slack="0"/>
<pin id="278" dir="0" index="3" bw="1" slack="0"/>
<pin id="279" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_149/29 StgValue_168/48 "/>
</bind>
</comp>

<comp id="284" class="1004" name="StgValue_150_write_fu_284">
<pin_list>
<pin id="285" dir="0" index="0" bw="0" slack="0"/>
<pin id="286" dir="0" index="1" bw="8" slack="0"/>
<pin id="287" dir="0" index="2" bw="7" slack="0"/>
<pin id="288" dir="0" index="3" bw="1" slack="0"/>
<pin id="289" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_150/30 "/>
</bind>
</comp>

<comp id="294" class="1004" name="grp_write_fu_294">
<pin_list>
<pin id="295" dir="0" index="0" bw="0" slack="0"/>
<pin id="296" dir="0" index="1" bw="8" slack="0"/>
<pin id="297" dir="0" index="2" bw="5" slack="0"/>
<pin id="298" dir="0" index="3" bw="1" slack="0"/>
<pin id="299" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_151/31 StgValue_170/50 "/>
</bind>
</comp>

<comp id="304" class="1004" name="StgValue_152_write_fu_304">
<pin_list>
<pin id="305" dir="0" index="0" bw="0" slack="0"/>
<pin id="306" dir="0" index="1" bw="8" slack="0"/>
<pin id="307" dir="0" index="2" bw="4" slack="0"/>
<pin id="308" dir="0" index="3" bw="1" slack="0"/>
<pin id="309" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_152/32 "/>
</bind>
</comp>

<comp id="314" class="1004" name="StgValue_153_write_fu_314">
<pin_list>
<pin id="315" dir="0" index="0" bw="0" slack="0"/>
<pin id="316" dir="0" index="1" bw="8" slack="0"/>
<pin id="317" dir="0" index="2" bw="8" slack="0"/>
<pin id="318" dir="0" index="3" bw="1" slack="0"/>
<pin id="319" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_153/33 "/>
</bind>
</comp>

<comp id="324" class="1004" name="StgValue_154_write_fu_324">
<pin_list>
<pin id="325" dir="0" index="0" bw="0" slack="0"/>
<pin id="326" dir="0" index="1" bw="8" slack="0"/>
<pin id="327" dir="0" index="2" bw="8" slack="0"/>
<pin id="328" dir="0" index="3" bw="1" slack="0"/>
<pin id="329" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_154/34 "/>
</bind>
</comp>

<comp id="334" class="1004" name="StgValue_155_write_fu_334">
<pin_list>
<pin id="335" dir="0" index="0" bw="0" slack="0"/>
<pin id="336" dir="0" index="1" bw="8" slack="0"/>
<pin id="337" dir="0" index="2" bw="6" slack="0"/>
<pin id="338" dir="0" index="3" bw="1" slack="0"/>
<pin id="339" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_155/35 "/>
</bind>
</comp>

<comp id="344" class="1004" name="StgValue_156_write_fu_344">
<pin_list>
<pin id="345" dir="0" index="0" bw="0" slack="0"/>
<pin id="346" dir="0" index="1" bw="8" slack="0"/>
<pin id="347" dir="0" index="2" bw="8" slack="0"/>
<pin id="348" dir="0" index="3" bw="1" slack="0"/>
<pin id="349" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_156/36 "/>
</bind>
</comp>

<comp id="354" class="1004" name="StgValue_157_write_fu_354">
<pin_list>
<pin id="355" dir="0" index="0" bw="0" slack="0"/>
<pin id="356" dir="0" index="1" bw="8" slack="0"/>
<pin id="357" dir="0" index="2" bw="8" slack="0"/>
<pin id="358" dir="0" index="3" bw="1" slack="0"/>
<pin id="359" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_157/37 "/>
</bind>
</comp>

<comp id="364" class="1004" name="StgValue_158_write_fu_364">
<pin_list>
<pin id="365" dir="0" index="0" bw="0" slack="0"/>
<pin id="366" dir="0" index="1" bw="8" slack="0"/>
<pin id="367" dir="0" index="2" bw="5" slack="0"/>
<pin id="368" dir="0" index="3" bw="1" slack="0"/>
<pin id="369" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_158/38 "/>
</bind>
</comp>

<comp id="374" class="1004" name="StgValue_159_write_fu_374">
<pin_list>
<pin id="375" dir="0" index="0" bw="0" slack="0"/>
<pin id="376" dir="0" index="1" bw="8" slack="0"/>
<pin id="377" dir="0" index="2" bw="8" slack="0"/>
<pin id="378" dir="0" index="3" bw="1" slack="0"/>
<pin id="379" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_159/39 "/>
</bind>
</comp>

<comp id="384" class="1004" name="grp_write_fu_384">
<pin_list>
<pin id="385" dir="0" index="0" bw="0" slack="0"/>
<pin id="386" dir="0" index="1" bw="8" slack="0"/>
<pin id="387" dir="0" index="2" bw="7" slack="0"/>
<pin id="388" dir="0" index="3" bw="1" slack="0"/>
<pin id="389" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_160/40 StgValue_171/51 "/>
</bind>
</comp>

<comp id="394" class="1004" name="StgValue_161_write_fu_394">
<pin_list>
<pin id="395" dir="0" index="0" bw="0" slack="0"/>
<pin id="396" dir="0" index="1" bw="8" slack="0"/>
<pin id="397" dir="0" index="2" bw="7" slack="0"/>
<pin id="398" dir="0" index="3" bw="1" slack="0"/>
<pin id="399" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_161/41 "/>
</bind>
</comp>

<comp id="404" class="1004" name="grp_write_fu_404">
<pin_list>
<pin id="405" dir="0" index="0" bw="0" slack="0"/>
<pin id="406" dir="0" index="1" bw="8" slack="0"/>
<pin id="407" dir="0" index="2" bw="6" slack="0"/>
<pin id="408" dir="0" index="3" bw="1" slack="0"/>
<pin id="409" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_162/42 StgValue_166/46 "/>
</bind>
</comp>

<comp id="414" class="1004" name="StgValue_163_write_fu_414">
<pin_list>
<pin id="415" dir="0" index="0" bw="0" slack="0"/>
<pin id="416" dir="0" index="1" bw="8" slack="0"/>
<pin id="417" dir="0" index="2" bw="4" slack="0"/>
<pin id="418" dir="0" index="3" bw="1" slack="0"/>
<pin id="419" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_163/43 "/>
</bind>
</comp>

<comp id="424" class="1004" name="StgValue_164_write_fu_424">
<pin_list>
<pin id="425" dir="0" index="0" bw="0" slack="0"/>
<pin id="426" dir="0" index="1" bw="8" slack="0"/>
<pin id="427" dir="0" index="2" bw="6" slack="0"/>
<pin id="428" dir="0" index="3" bw="1" slack="0"/>
<pin id="429" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_164/44 "/>
</bind>
</comp>

<comp id="434" class="1004" name="StgValue_165_write_fu_434">
<pin_list>
<pin id="435" dir="0" index="0" bw="0" slack="0"/>
<pin id="436" dir="0" index="1" bw="8" slack="0"/>
<pin id="437" dir="0" index="2" bw="3" slack="0"/>
<pin id="438" dir="0" index="3" bw="1" slack="0"/>
<pin id="439" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_165/45 "/>
</bind>
</comp>

<comp id="444" class="1004" name="StgValue_167_write_fu_444">
<pin_list>
<pin id="445" dir="0" index="0" bw="0" slack="0"/>
<pin id="446" dir="0" index="1" bw="8" slack="0"/>
<pin id="447" dir="0" index="2" bw="8" slack="0"/>
<pin id="448" dir="0" index="3" bw="1" slack="0"/>
<pin id="449" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_167/47 "/>
</bind>
</comp>

<comp id="454" class="1004" name="StgValue_169_write_fu_454">
<pin_list>
<pin id="455" dir="0" index="0" bw="0" slack="0"/>
<pin id="456" dir="0" index="1" bw="8" slack="0"/>
<pin id="457" dir="0" index="2" bw="8" slack="0"/>
<pin id="458" dir="0" index="3" bw="1" slack="0"/>
<pin id="459" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_169/49 "/>
</bind>
</comp>

<comp id="464" class="1004" name="grp_write_fu_464">
<pin_list>
<pin id="465" dir="0" index="0" bw="0" slack="0"/>
<pin id="466" dir="0" index="1" bw="8" slack="0"/>
<pin id="467" dir="0" index="2" bw="1" slack="0"/>
<pin id="468" dir="0" index="3" bw="1" slack="0"/>
<pin id="469" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_172/52 StgValue_173/53 "/>
</bind>
</comp>

<comp id="475" class="1005" name="p_014_0_i_reg_475">
<pin_list>
<pin id="476" dir="0" index="0" bw="19" slack="1"/>
<pin id="477" dir="1" index="1" bw="19" slack="1"/>
</pin_list>
<bind>
<opset="p_014_0_i (phireg) "/>
</bind>
</comp>

<comp id="479" class="1004" name="p_014_0_i_phi_fu_479">
<pin_list>
<pin id="480" dir="0" index="0" bw="1" slack="1"/>
<pin id="481" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="482" dir="0" index="2" bw="19" slack="0"/>
<pin id="483" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="484" dir="1" index="4" bw="19" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="p_014_0_i/59 "/>
</bind>
</comp>

<comp id="486" class="1004" name="firstSample_load_load_fu_486">
<pin_list>
<pin id="487" dir="0" index="0" bw="1" slack="0"/>
<pin id="488" dir="1" index="1" bw="1" slack="27"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="firstSample_load/1 "/>
</bind>
</comp>

<comp id="490" class="1004" name="UART_addr_fu_490">
<pin_list>
<pin id="491" dir="0" index="0" bw="32" slack="0"/>
<pin id="492" dir="0" index="1" bw="32" slack="0"/>
<pin id="493" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr/1 "/>
</bind>
</comp>

<comp id="497" class="1004" name="UART_addr_1_fu_497">
<pin_list>
<pin id="498" dir="0" index="0" bw="32" slack="0"/>
<pin id="499" dir="0" index="1" bw="32" slack="0"/>
<pin id="500" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr_1/2 "/>
</bind>
</comp>

<comp id="504" class="1004" name="UART_addr_2_fu_504">
<pin_list>
<pin id="505" dir="0" index="0" bw="32" slack="0"/>
<pin id="506" dir="0" index="1" bw="32" slack="0"/>
<pin id="507" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr_2/3 "/>
</bind>
</comp>

<comp id="511" class="1004" name="UART_addr_3_fu_511">
<pin_list>
<pin id="512" dir="0" index="0" bw="32" slack="0"/>
<pin id="513" dir="0" index="1" bw="32" slack="0"/>
<pin id="514" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr_3/4 "/>
</bind>
</comp>

<comp id="518" class="1004" name="UART_addr_4_fu_518">
<pin_list>
<pin id="519" dir="0" index="0" bw="32" slack="0"/>
<pin id="520" dir="0" index="1" bw="32" slack="0"/>
<pin id="521" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr_4/6 "/>
</bind>
</comp>

<comp id="525" class="1004" name="temp_fu_525">
<pin_list>
<pin id="526" dir="0" index="0" bw="32" slack="0"/>
<pin id="527" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="temp/21 "/>
</bind>
</comp>

<comp id="529" class="1004" name="tmp_fu_529">
<pin_list>
<pin id="530" dir="0" index="0" bw="8" slack="1"/>
<pin id="531" dir="0" index="1" bw="8" slack="0"/>
<pin id="532" dir="1" index="2" bw="1" slack="6"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp/22 "/>
</bind>
</comp>

<comp id="534" class="1004" name="StgValue_135_store_fu_534">
<pin_list>
<pin id="535" dir="0" index="0" bw="1" slack="0"/>
<pin id="536" dir="0" index="1" bw="1" slack="0"/>
<pin id="537" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_135/22 "/>
</bind>
</comp>

<comp id="540" class="1004" name="StgValue_144_store_fu_540">
<pin_list>
<pin id="541" dir="0" index="0" bw="1" slack="0"/>
<pin id="542" dir="0" index="1" bw="1" slack="0"/>
<pin id="543" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_144/28 "/>
</bind>
</comp>

<comp id="546" class="1004" name="calibrationSuccess_l_load_fu_546">
<pin_list>
<pin id="547" dir="0" index="0" bw="1" slack="0"/>
<pin id="548" dir="1" index="1" bw="1" slack="30"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="calibrationSuccess_l/28 "/>
</bind>
</comp>

<comp id="550" class="1004" name="tmp_1_fu_550">
<pin_list>
<pin id="551" dir="0" index="0" bw="19" slack="0"/>
<pin id="552" dir="0" index="1" bw="19" slack="0"/>
<pin id="553" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_1/59 "/>
</bind>
</comp>

<comp id="556" class="1004" name="ctr_V_fu_556">
<pin_list>
<pin id="557" dir="0" index="0" bw="19" slack="0"/>
<pin id="558" dir="0" index="1" bw="1" slack="0"/>
<pin id="559" dir="1" index="2" bw="19" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="ctr_V/59 "/>
</bind>
</comp>

<comp id="562" class="1004" name="dummy_1_load_fu_562">
<pin_list>
<pin id="563" dir="0" index="0" bw="8" slack="58"/>
<pin id="564" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="dummy_1/59 "/>
</bind>
</comp>

<comp id="565" class="1004" name="StgValue_189_store_fu_565">
<pin_list>
<pin id="566" dir="0" index="0" bw="8" slack="0"/>
<pin id="567" dir="0" index="1" bw="8" slack="58"/>
<pin id="568" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_189/59 "/>
</bind>
</comp>

<comp id="570" class="1005" name="dummy_reg_570">
<pin_list>
<pin id="571" dir="0" index="0" bw="8" slack="58"/>
<pin id="572" dir="1" index="1" bw="8" slack="58"/>
</pin_list>
<bind>
<opset="dummy "/>
</bind>
</comp>

<comp id="576" class="1005" name="firstSample_load_reg_576">
<pin_list>
<pin id="577" dir="0" index="0" bw="1" slack="27"/>
<pin id="578" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="firstSample_load "/>
</bind>
</comp>

<comp id="580" class="1005" name="UART_addr_reg_580">
<pin_list>
<pin id="581" dir="0" index="0" bw="32" slack="1"/>
<pin id="582" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr "/>
</bind>
</comp>

<comp id="588" class="1005" name="UART_addr_1_reg_588">
<pin_list>
<pin id="589" dir="0" index="0" bw="32" slack="1"/>
<pin id="590" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_1 "/>
</bind>
</comp>

<comp id="595" class="1005" name="UART_addr_2_reg_595">
<pin_list>
<pin id="596" dir="0" index="0" bw="32" slack="1"/>
<pin id="597" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_2 "/>
</bind>
</comp>

<comp id="601" class="1005" name="UART_addr_3_reg_601">
<pin_list>
<pin id="602" dir="0" index="0" bw="32" slack="1"/>
<pin id="603" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_3 "/>
</bind>
</comp>

<comp id="608" class="1005" name="UART_addr_4_reg_608">
<pin_list>
<pin id="609" dir="0" index="0" bw="32" slack="1"/>
<pin id="610" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_4 "/>
</bind>
</comp>

<comp id="614" class="1005" name="temp_reg_614">
<pin_list>
<pin id="615" dir="0" index="0" bw="8" slack="1"/>
<pin id="616" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="temp "/>
</bind>
</comp>

<comp id="619" class="1005" name="tmp_reg_619">
<pin_list>
<pin id="620" dir="0" index="0" bw="1" slack="6"/>
<pin id="621" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="tmp "/>
</bind>
</comp>

<comp id="623" class="1005" name="calibrationSuccess_l_reg_623">
<pin_list>
<pin id="624" dir="0" index="0" bw="1" slack="30"/>
<pin id="625" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="calibrationSuccess_l "/>
</bind>
</comp>

<comp id="630" class="1005" name="ctr_V_reg_630">
<pin_list>
<pin id="631" dir="0" index="0" bw="19" slack="0"/>
<pin id="632" dir="1" index="1" bw="19" slack="0"/>
</pin_list>
<bind>
<opset="ctr_V "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="147"><net_src comp="10" pin="0"/><net_sink comp="144" pin=0"/></net>

<net id="153"><net_src comp="44" pin="0"/><net_sink comp="148" pin=0"/></net>

<net id="154"><net_src comp="40" pin="0"/><net_sink comp="148" pin=2"/></net>

<net id="161"><net_src comp="46" pin="0"/><net_sink comp="155" pin=0"/></net>

<net id="162"><net_src comp="48" pin="0"/><net_sink comp="155" pin=2"/></net>

<net id="163"><net_src comp="50" pin="0"/><net_sink comp="155" pin=3"/></net>

<net id="169"><net_src comp="44" pin="0"/><net_sink comp="164" pin=0"/></net>

<net id="170"><net_src comp="40" pin="0"/><net_sink comp="164" pin=2"/></net>

<net id="171"><net_src comp="54" pin="0"/><net_sink comp="148" pin=0"/></net>

<net id="178"><net_src comp="46" pin="0"/><net_sink comp="172" pin=0"/></net>

<net id="179"><net_src comp="56" pin="0"/><net_sink comp="172" pin=2"/></net>

<net id="180"><net_src comp="50" pin="0"/><net_sink comp="172" pin=3"/></net>

<net id="186"><net_src comp="44" pin="0"/><net_sink comp="181" pin=0"/></net>

<net id="187"><net_src comp="40" pin="0"/><net_sink comp="181" pin=2"/></net>

<net id="188"><net_src comp="54" pin="0"/><net_sink comp="164" pin=0"/></net>

<net id="195"><net_src comp="46" pin="0"/><net_sink comp="189" pin=0"/></net>

<net id="196"><net_src comp="60" pin="0"/><net_sink comp="189" pin=2"/></net>

<net id="197"><net_src comp="50" pin="0"/><net_sink comp="189" pin=3"/></net>

<net id="203"><net_src comp="44" pin="0"/><net_sink comp="198" pin=0"/></net>

<net id="204"><net_src comp="40" pin="0"/><net_sink comp="198" pin=2"/></net>

<net id="205"><net_src comp="54" pin="0"/><net_sink comp="181" pin=0"/></net>

<net id="212"><net_src comp="46" pin="0"/><net_sink comp="206" pin=0"/></net>

<net id="213"><net_src comp="18" pin="0"/><net_sink comp="206" pin=2"/></net>

<net id="214"><net_src comp="50" pin="0"/><net_sink comp="206" pin=3"/></net>

<net id="215"><net_src comp="54" pin="0"/><net_sink comp="198" pin=0"/></net>

<net id="222"><net_src comp="46" pin="0"/><net_sink comp="216" pin=0"/></net>

<net id="223"><net_src comp="64" pin="0"/><net_sink comp="216" pin=2"/></net>

<net id="224"><net_src comp="50" pin="0"/><net_sink comp="216" pin=3"/></net>

<net id="230"><net_src comp="44" pin="0"/><net_sink comp="225" pin=0"/></net>

<net id="231"><net_src comp="40" pin="0"/><net_sink comp="225" pin=2"/></net>

<net id="238"><net_src comp="46" pin="0"/><net_sink comp="232" pin=0"/></net>

<net id="239"><net_src comp="40" pin="0"/><net_sink comp="232" pin=2"/></net>

<net id="240"><net_src comp="50" pin="0"/><net_sink comp="232" pin=3"/></net>

<net id="241"><net_src comp="54" pin="0"/><net_sink comp="225" pin=0"/></net>

<net id="248"><net_src comp="46" pin="0"/><net_sink comp="242" pin=0"/></net>

<net id="249"><net_src comp="40" pin="0"/><net_sink comp="242" pin=2"/></net>

<net id="250"><net_src comp="50" pin="0"/><net_sink comp="242" pin=3"/></net>

<net id="251"><net_src comp="68" pin="0"/><net_sink comp="148" pin=0"/></net>

<net id="256"><net_src comp="70" pin="0"/><net_sink comp="252" pin=0"/></net>

<net id="263"><net_src comp="46" pin="0"/><net_sink comp="257" pin=0"/></net>

<net id="264"><net_src comp="18" pin="0"/><net_sink comp="257" pin=2"/></net>

<net id="265"><net_src comp="50" pin="0"/><net_sink comp="257" pin=3"/></net>

<net id="271"><net_src comp="78" pin="0"/><net_sink comp="266" pin=0"/></net>

<net id="272"><net_src comp="2" pin="0"/><net_sink comp="266" pin=1"/></net>

<net id="273"><net_src comp="80" pin="0"/><net_sink comp="266" pin=2"/></net>

<net id="280"><net_src comp="82" pin="0"/><net_sink comp="274" pin=0"/></net>

<net id="281"><net_src comp="2" pin="0"/><net_sink comp="274" pin=1"/></net>

<net id="282"><net_src comp="84" pin="0"/><net_sink comp="274" pin=2"/></net>

<net id="283"><net_src comp="74" pin="0"/><net_sink comp="274" pin=3"/></net>

<net id="290"><net_src comp="82" pin="0"/><net_sink comp="284" pin=0"/></net>

<net id="291"><net_src comp="2" pin="0"/><net_sink comp="284" pin=1"/></net>

<net id="292"><net_src comp="86" pin="0"/><net_sink comp="284" pin=2"/></net>

<net id="293"><net_src comp="74" pin="0"/><net_sink comp="284" pin=3"/></net>

<net id="300"><net_src comp="82" pin="0"/><net_sink comp="294" pin=0"/></net>

<net id="301"><net_src comp="2" pin="0"/><net_sink comp="294" pin=1"/></net>

<net id="302"><net_src comp="88" pin="0"/><net_sink comp="294" pin=2"/></net>

<net id="303"><net_src comp="74" pin="0"/><net_sink comp="294" pin=3"/></net>

<net id="310"><net_src comp="82" pin="0"/><net_sink comp="304" pin=0"/></net>

<net id="311"><net_src comp="2" pin="0"/><net_sink comp="304" pin=1"/></net>

<net id="312"><net_src comp="90" pin="0"/><net_sink comp="304" pin=2"/></net>

<net id="313"><net_src comp="74" pin="0"/><net_sink comp="304" pin=3"/></net>

<net id="320"><net_src comp="82" pin="0"/><net_sink comp="314" pin=0"/></net>

<net id="321"><net_src comp="2" pin="0"/><net_sink comp="314" pin=1"/></net>

<net id="322"><net_src comp="92" pin="0"/><net_sink comp="314" pin=2"/></net>

<net id="323"><net_src comp="74" pin="0"/><net_sink comp="314" pin=3"/></net>

<net id="330"><net_src comp="82" pin="0"/><net_sink comp="324" pin=0"/></net>

<net id="331"><net_src comp="2" pin="0"/><net_sink comp="324" pin=1"/></net>

<net id="332"><net_src comp="94" pin="0"/><net_sink comp="324" pin=2"/></net>

<net id="333"><net_src comp="74" pin="0"/><net_sink comp="324" pin=3"/></net>

<net id="340"><net_src comp="82" pin="0"/><net_sink comp="334" pin=0"/></net>

<net id="341"><net_src comp="2" pin="0"/><net_sink comp="334" pin=1"/></net>

<net id="342"><net_src comp="96" pin="0"/><net_sink comp="334" pin=2"/></net>

<net id="343"><net_src comp="74" pin="0"/><net_sink comp="334" pin=3"/></net>

<net id="350"><net_src comp="82" pin="0"/><net_sink comp="344" pin=0"/></net>

<net id="351"><net_src comp="2" pin="0"/><net_sink comp="344" pin=1"/></net>

<net id="352"><net_src comp="98" pin="0"/><net_sink comp="344" pin=2"/></net>

<net id="353"><net_src comp="74" pin="0"/><net_sink comp="344" pin=3"/></net>

<net id="360"><net_src comp="82" pin="0"/><net_sink comp="354" pin=0"/></net>

<net id="361"><net_src comp="2" pin="0"/><net_sink comp="354" pin=1"/></net>

<net id="362"><net_src comp="100" pin="0"/><net_sink comp="354" pin=2"/></net>

<net id="363"><net_src comp="74" pin="0"/><net_sink comp="354" pin=3"/></net>

<net id="370"><net_src comp="82" pin="0"/><net_sink comp="364" pin=0"/></net>

<net id="371"><net_src comp="2" pin="0"/><net_sink comp="364" pin=1"/></net>

<net id="372"><net_src comp="102" pin="0"/><net_sink comp="364" pin=2"/></net>

<net id="373"><net_src comp="74" pin="0"/><net_sink comp="364" pin=3"/></net>

<net id="380"><net_src comp="82" pin="0"/><net_sink comp="374" pin=0"/></net>

<net id="381"><net_src comp="2" pin="0"/><net_sink comp="374" pin=1"/></net>

<net id="382"><net_src comp="104" pin="0"/><net_sink comp="374" pin=2"/></net>

<net id="383"><net_src comp="74" pin="0"/><net_sink comp="374" pin=3"/></net>

<net id="390"><net_src comp="82" pin="0"/><net_sink comp="384" pin=0"/></net>

<net id="391"><net_src comp="2" pin="0"/><net_sink comp="384" pin=1"/></net>

<net id="392"><net_src comp="106" pin="0"/><net_sink comp="384" pin=2"/></net>

<net id="393"><net_src comp="74" pin="0"/><net_sink comp="384" pin=3"/></net>

<net id="400"><net_src comp="82" pin="0"/><net_sink comp="394" pin=0"/></net>

<net id="401"><net_src comp="2" pin="0"/><net_sink comp="394" pin=1"/></net>

<net id="402"><net_src comp="108" pin="0"/><net_sink comp="394" pin=2"/></net>

<net id="403"><net_src comp="74" pin="0"/><net_sink comp="394" pin=3"/></net>

<net id="410"><net_src comp="82" pin="0"/><net_sink comp="404" pin=0"/></net>

<net id="411"><net_src comp="2" pin="0"/><net_sink comp="404" pin=1"/></net>

<net id="412"><net_src comp="110" pin="0"/><net_sink comp="404" pin=2"/></net>

<net id="413"><net_src comp="74" pin="0"/><net_sink comp="404" pin=3"/></net>

<net id="420"><net_src comp="82" pin="0"/><net_sink comp="414" pin=0"/></net>

<net id="421"><net_src comp="2" pin="0"/><net_sink comp="414" pin=1"/></net>

<net id="422"><net_src comp="112" pin="0"/><net_sink comp="414" pin=2"/></net>

<net id="423"><net_src comp="74" pin="0"/><net_sink comp="414" pin=3"/></net>

<net id="430"><net_src comp="82" pin="0"/><net_sink comp="424" pin=0"/></net>

<net id="431"><net_src comp="2" pin="0"/><net_sink comp="424" pin=1"/></net>

<net id="432"><net_src comp="114" pin="0"/><net_sink comp="424" pin=2"/></net>

<net id="433"><net_src comp="74" pin="0"/><net_sink comp="424" pin=3"/></net>

<net id="440"><net_src comp="82" pin="0"/><net_sink comp="434" pin=0"/></net>

<net id="441"><net_src comp="2" pin="0"/><net_sink comp="434" pin=1"/></net>

<net id="442"><net_src comp="116" pin="0"/><net_sink comp="434" pin=2"/></net>

<net id="443"><net_src comp="74" pin="0"/><net_sink comp="434" pin=3"/></net>

<net id="450"><net_src comp="82" pin="0"/><net_sink comp="444" pin=0"/></net>

<net id="451"><net_src comp="2" pin="0"/><net_sink comp="444" pin=1"/></net>

<net id="452"><net_src comp="118" pin="0"/><net_sink comp="444" pin=2"/></net>

<net id="453"><net_src comp="74" pin="0"/><net_sink comp="444" pin=3"/></net>

<net id="460"><net_src comp="82" pin="0"/><net_sink comp="454" pin=0"/></net>

<net id="461"><net_src comp="2" pin="0"/><net_sink comp="454" pin=1"/></net>

<net id="462"><net_src comp="120" pin="0"/><net_sink comp="454" pin=2"/></net>

<net id="463"><net_src comp="74" pin="0"/><net_sink comp="454" pin=3"/></net>

<net id="470"><net_src comp="82" pin="0"/><net_sink comp="464" pin=0"/></net>

<net id="471"><net_src comp="2" pin="0"/><net_sink comp="464" pin=1"/></net>

<net id="472"><net_src comp="122" pin="0"/><net_sink comp="464" pin=2"/></net>

<net id="473"><net_src comp="74" pin="0"/><net_sink comp="464" pin=3"/></net>

<net id="474"><net_src comp="124" pin="0"/><net_sink comp="266" pin=0"/></net>

<net id="478"><net_src comp="132" pin="0"/><net_sink comp="475" pin=0"/></net>

<net id="485"><net_src comp="475" pin="1"/><net_sink comp="479" pin=0"/></net>

<net id="489"><net_src comp="4" pin="0"/><net_sink comp="486" pin=0"/></net>

<net id="494"><net_src comp="0" pin="0"/><net_sink comp="490" pin=0"/></net>

<net id="495"><net_src comp="42" pin="0"/><net_sink comp="490" pin=1"/></net>

<net id="496"><net_src comp="490" pin="2"/><net_sink comp="148" pin=1"/></net>

<net id="501"><net_src comp="0" pin="0"/><net_sink comp="497" pin=0"/></net>

<net id="502"><net_src comp="52" pin="0"/><net_sink comp="497" pin=1"/></net>

<net id="503"><net_src comp="497" pin="2"/><net_sink comp="164" pin=1"/></net>

<net id="508"><net_src comp="0" pin="0"/><net_sink comp="504" pin=0"/></net>

<net id="509"><net_src comp="58" pin="0"/><net_sink comp="504" pin=1"/></net>

<net id="510"><net_src comp="504" pin="2"/><net_sink comp="181" pin=1"/></net>

<net id="515"><net_src comp="0" pin="0"/><net_sink comp="511" pin=0"/></net>

<net id="516"><net_src comp="62" pin="0"/><net_sink comp="511" pin=1"/></net>

<net id="517"><net_src comp="511" pin="2"/><net_sink comp="198" pin=1"/></net>

<net id="522"><net_src comp="0" pin="0"/><net_sink comp="518" pin=0"/></net>

<net id="523"><net_src comp="66" pin="0"/><net_sink comp="518" pin=1"/></net>

<net id="524"><net_src comp="518" pin="2"/><net_sink comp="225" pin=1"/></net>

<net id="528"><net_src comp="252" pin="2"/><net_sink comp="525" pin=0"/></net>

<net id="533"><net_src comp="72" pin="0"/><net_sink comp="529" pin=1"/></net>

<net id="538"><net_src comp="74" pin="0"/><net_sink comp="534" pin=0"/></net>

<net id="539"><net_src comp="6" pin="0"/><net_sink comp="534" pin=1"/></net>

<net id="544"><net_src comp="76" pin="0"/><net_sink comp="540" pin=0"/></net>

<net id="545"><net_src comp="4" pin="0"/><net_sink comp="540" pin=1"/></net>

<net id="549"><net_src comp="6" pin="0"/><net_sink comp="546" pin=0"/></net>

<net id="554"><net_src comp="479" pin="4"/><net_sink comp="550" pin=0"/></net>

<net id="555"><net_src comp="134" pin="0"/><net_sink comp="550" pin=1"/></net>

<net id="560"><net_src comp="479" pin="4"/><net_sink comp="556" pin=0"/></net>

<net id="561"><net_src comp="140" pin="0"/><net_sink comp="556" pin=1"/></net>

<net id="569"><net_src comp="562" pin="1"/><net_sink comp="565" pin=0"/></net>

<net id="573"><net_src comp="144" pin="1"/><net_sink comp="570" pin=0"/></net>

<net id="574"><net_src comp="570" pin="1"/><net_sink comp="562" pin=0"/></net>

<net id="575"><net_src comp="570" pin="1"/><net_sink comp="565" pin=1"/></net>

<net id="579"><net_src comp="486" pin="1"/><net_sink comp="576" pin=0"/></net>

<net id="583"><net_src comp="490" pin="2"/><net_sink comp="580" pin=0"/></net>

<net id="584"><net_src comp="580" pin="1"/><net_sink comp="155" pin=1"/></net>

<net id="585"><net_src comp="580" pin="1"/><net_sink comp="148" pin=1"/></net>

<net id="586"><net_src comp="580" pin="1"/><net_sink comp="252" pin=1"/></net>

<net id="587"><net_src comp="580" pin="1"/><net_sink comp="257" pin=1"/></net>

<net id="591"><net_src comp="497" pin="2"/><net_sink comp="588" pin=0"/></net>

<net id="592"><net_src comp="588" pin="1"/><net_sink comp="172" pin=1"/></net>

<net id="593"><net_src comp="588" pin="1"/><net_sink comp="164" pin=1"/></net>

<net id="594"><net_src comp="588" pin="1"/><net_sink comp="216" pin=1"/></net>

<net id="598"><net_src comp="504" pin="2"/><net_sink comp="595" pin=0"/></net>

<net id="599"><net_src comp="595" pin="1"/><net_sink comp="189" pin=1"/></net>

<net id="600"><net_src comp="595" pin="1"/><net_sink comp="181" pin=1"/></net>

<net id="604"><net_src comp="511" pin="2"/><net_sink comp="601" pin=0"/></net>

<net id="605"><net_src comp="601" pin="1"/><net_sink comp="206" pin=1"/></net>

<net id="606"><net_src comp="601" pin="1"/><net_sink comp="198" pin=1"/></net>

<net id="607"><net_src comp="601" pin="1"/><net_sink comp="242" pin=1"/></net>

<net id="611"><net_src comp="518" pin="2"/><net_sink comp="608" pin=0"/></net>

<net id="612"><net_src comp="608" pin="1"/><net_sink comp="232" pin=1"/></net>

<net id="613"><net_src comp="608" pin="1"/><net_sink comp="225" pin=1"/></net>

<net id="617"><net_src comp="525" pin="1"/><net_sink comp="614" pin=0"/></net>

<net id="618"><net_src comp="614" pin="1"/><net_sink comp="529" pin=0"/></net>

<net id="622"><net_src comp="529" pin="2"/><net_sink comp="619" pin=0"/></net>

<net id="626"><net_src comp="546" pin="1"/><net_sink comp="623" pin=0"/></net>

<net id="633"><net_src comp="556" pin="2"/><net_sink comp="630" pin=0"/></net>

<net id="634"><net_src comp="630" pin="1"/><net_sink comp="479" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: UART | {1 2 3 4 5 6 7 8 9 10 11 12 13 22 23 24 25 26 27 28 }
	Port: OUT_r | {28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 }
	Port: firstSample | {28 }
	Port: calibrationSuccess | {22 }
 - Input state : 
	Port: AXI_UART_DRIVER : UART | {14 15 16 17 18 19 20 21 }
	Port: AXI_UART_DRIVER : firstSample | {1 }
	Port: AXI_UART_DRIVER : calibrationSuccess | {28 }
  - Chain level:
	State 1
		StgValue_69 : 1
		UART_addr_req : 1
	State 2
		UART_addr_1_req : 1
	State 3
		UART_addr_2_req : 1
	State 4
		UART_addr_3_req : 1
	State 5
	State 6
		UART_addr_4_req : 1
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
		StgValue_134 : 1
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
		StgValue_147 : 1
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
		tmp_1 : 1
		ctr_V : 1
		StgValue_187 : 2
		StgValue_189 : 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|----------------------------|---------|---------|
| Operation|       Functional Unit      |    FF   |   LUT   |
|----------|----------------------------|---------|---------|
|   icmp   |         tmp_fu_529         |    0    |    11   |
|          |        tmp_1_fu_550        |    0    |    18   |
|----------|----------------------------|---------|---------|
|    add   |        ctr_V_fu_556        |    0    |    26   |
|----------|----------------------------|---------|---------|
|          |    grp_writeresp_fu_148    |    0    |    0    |
|          |    grp_writeresp_fu_164    |    0    |    0    |
| writeresp|    grp_writeresp_fu_181    |    0    |    0    |
|          |    grp_writeresp_fu_198    |    0    |    0    |
|          |    grp_writeresp_fu_225    |    0    |    0    |
|          |    grp_writeresp_fu_266    |    0    |    0    |
|----------|----------------------------|---------|---------|
|          |  StgValue_72_write_fu_155  |    0    |    0    |
|          |  StgValue_76_write_fu_172  |    0    |    0    |
|          |  StgValue_81_write_fu_189  |    0    |    0    |
|          |  StgValue_87_write_fu_206  |    0    |    0    |
|          |  StgValue_93_write_fu_216  |    0    |    0    |
|          |  StgValue_101_write_fu_232 |    0    |    0    |
|          |  StgValue_108_write_fu_242 |    0    |    0    |
|          |  StgValue_137_write_fu_257 |    0    |    0    |
|          |      grp_write_fu_274      |    0    |    0    |
|          |  StgValue_150_write_fu_284 |    0    |    0    |
|          |      grp_write_fu_294      |    0    |    0    |
|          |  StgValue_152_write_fu_304 |    0    |    0    |
|          |  StgValue_153_write_fu_314 |    0    |    0    |
|   write  |  StgValue_154_write_fu_324 |    0    |    0    |
|          |  StgValue_155_write_fu_334 |    0    |    0    |
|          |  StgValue_156_write_fu_344 |    0    |    0    |
|          |  StgValue_157_write_fu_354 |    0    |    0    |
|          |  StgValue_158_write_fu_364 |    0    |    0    |
|          |  StgValue_159_write_fu_374 |    0    |    0    |
|          |      grp_write_fu_384      |    0    |    0    |
|          |  StgValue_161_write_fu_394 |    0    |    0    |
|          |      grp_write_fu_404      |    0    |    0    |
|          |  StgValue_163_write_fu_414 |    0    |    0    |
|          |  StgValue_164_write_fu_424 |    0    |    0    |
|          |  StgValue_165_write_fu_434 |    0    |    0    |
|          |  StgValue_167_write_fu_444 |    0    |    0    |
|          |  StgValue_169_write_fu_454 |    0    |    0    |
|          |      grp_write_fu_464      |    0    |    0    |
|----------|----------------------------|---------|---------|
|   read   | UART_addr_read_read_fu_252 |    0    |    0    |
|----------|----------------------------|---------|---------|
|   trunc  |         temp_fu_525        |    0    |    0    |
|----------|----------------------------|---------|---------|
|   Total  |                            |    0    |    55   |
|----------|----------------------------|---------|---------|

Memories:
N/A

* Register list:
+----------------------------+--------+
|                            |   FF   |
+----------------------------+--------+
|     UART_addr_1_reg_588    |   32   |
|     UART_addr_2_reg_595    |   32   |
|     UART_addr_3_reg_601    |   32   |
|     UART_addr_4_reg_608    |   32   |
|      UART_addr_reg_580     |   32   |
|calibrationSuccess_l_reg_623|    1   |
|        ctr_V_reg_630       |   19   |
|        dummy_reg_570       |    8   |
|  firstSample_load_reg_576  |    1   |
|      p_014_0_i_reg_475     |   19   |
|        temp_reg_614        |    8   |
|         tmp_reg_619        |    1   |
+----------------------------+--------+
|            Total           |   217  |
+----------------------------+--------+

* Multiplexer (MUX) list: 
|----------------------|------|------|------|--------||---------||---------|
|         Comp         |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|----------------------|------|------|------|--------||---------||---------|
| grp_writeresp_fu_148 |  p0  |   3  |   1  |    3   |
| grp_writeresp_fu_148 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_164 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_164 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_181 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_181 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_198 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_198 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_225 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_225 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_266 |  p0  |   2  |   1  |    2   |
|----------------------|------|------|------|--------||---------||---------|
|         Total        |      |      |      |   333  || 19.5047 ||    45   |
|----------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |   55   |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|   19   |    -   |   45   |
|  Register |    -   |   217  |    -   |
+-----------+--------+--------+--------+
|   Total   |   19   |   217  |   100  |
+-----------+--------+--------+--------+
