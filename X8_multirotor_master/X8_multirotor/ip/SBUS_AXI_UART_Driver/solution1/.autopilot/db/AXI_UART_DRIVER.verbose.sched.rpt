

================================================================
== Vivado HLS Report for 'AXI_UART_DRIVER'
================================================================
* Date:           Sat May 18 20:25:46 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        SBUS_AXI_UART_Driver
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  500003|  500054|  500003|  500054|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+--------+--------+----------+-----------+-----------+--------+----------+
        |          |     Latency     | Iteration|  Initiation Interval  |  Trip  |          |
        | Loop Name|   min  |   max  |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------+--------+--------+----------+-----------+-----------+--------+----------+
        |- Loop 1  |  500000|  500000|         1|          -|          -|  500000|    no    |
        +----------+--------+--------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 55
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (firstSample_load)
	28  / (!firstSample_load)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / (tmp)
	28  / (!tmp)
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / (calibrationSuccess_l)
	54  / (!calibrationSuccess_l)
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / (tmp_2)
	54  / (!tmp_2)
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	55  / (!tmp_4)

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.75>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %UART), !map !37"   --->   Operation 56 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4096 x i32]* %SBUS_data) nounwind, !map !43"   --->   Operation 57 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%SBUS_data_addr = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 0"   --->   Operation 58 'getelementptr' 'SBUS_data_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%dummy = alloca i8, align 1"   --->   Operation 59 'alloca' 'dummy' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([16 x i8]* @AXI_UART_DRIVER_str) nounwind"   --->   Operation 60 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:11]   --->   Operation 61 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %UART, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 4096, [5 x i8]* @p_str4, [4 x i8]* @p_str5, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 62 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([4096 x i32]* %SBUS_data, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 4096, [5 x i8]* @p_str6, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind"   --->   Operation 63 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([4096 x i32]* %SBUS_data, [1 x i8]* @p_str, [12 x i8]* @p_str7, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind"   --->   Operation 64 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i1* @firstSample, i32 1, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:26]   --->   Operation 65 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%firstSample_load = load i1* @firstSample, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:29]   --->   Operation 66 'load' 'firstSample_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "br i1 %firstSample_load, label %1, label %._crit_edge" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:29]   --->   Operation 67 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%UART_addr = getelementptr i32* %UART, i64 1031"   --->   Operation 68 'getelementptr' 'UART_addr' <Predicate = (firstSample_load)> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (8.75ns)   --->   "%UART_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34]   --->   Operation 69 'writereq' 'UART_addr_req' <Predicate = (firstSample_load)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 70 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr, i32 69, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34]   --->   Operation 70 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%UART_addr_1 = getelementptr i32* %UART, i64 1027"   --->   Operation 71 'getelementptr' 'UART_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (8.75ns)   --->   "%UART_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_1, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37]   --->   Operation 72 'writereq' 'UART_addr_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 73 [5/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34]   --->   Operation 73 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 74 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_1, i32 128, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37]   --->   Operation 74 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%UART_addr_2 = getelementptr i32* %UART, i64 1024"   --->   Operation 75 'getelementptr' 'UART_addr_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (8.75ns)   --->   "%UART_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_2, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42]   --->   Operation 76 'writereq' 'UART_addr_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 77 [4/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34]   --->   Operation 77 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 78 [5/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37]   --->   Operation 78 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 79 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_2, i32 63, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42]   --->   Operation 79 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%UART_addr_3 = getelementptr i32* %UART, i64 1025"   --->   Operation 80 'getelementptr' 'UART_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (8.75ns)   --->   "%UART_addr_3_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_3, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45]   --->   Operation 81 'writereq' 'UART_addr_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 82 [3/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34]   --->   Operation 82 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 83 [4/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37]   --->   Operation 83 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 84 [5/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42]   --->   Operation 84 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 85 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_3, i32 0, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45]   --->   Operation 85 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 86 [1/1] (8.75ns)   --->   "%UART_addr_1_req4 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_1, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48]   --->   Operation 86 'writereq' 'UART_addr_1_req4' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 87 [2/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34]   --->   Operation 87 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 88 [3/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37]   --->   Operation 88 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 89 [4/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42]   --->   Operation 89 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 90 [5/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45]   --->   Operation 90 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 91 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_1, i32 31, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48]   --->   Operation 91 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 92 [1/1] (0.00ns)   --->   "%UART_addr_4 = getelementptr i32* %UART, i64 1026"   --->   Operation 92 'getelementptr' 'UART_addr_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 93 [1/1] (8.75ns)   --->   "%UART_addr_4_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_4, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51]   --->   Operation 93 'writereq' 'UART_addr_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 94 [1/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34]   --->   Operation 94 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 95 [2/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37]   --->   Operation 95 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 96 [3/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42]   --->   Operation 96 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 97 [4/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45]   --->   Operation 97 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 98 [5/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48]   --->   Operation 98 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 99 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_4, i32 1, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51]   --->   Operation 99 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 100 [1/1] (8.75ns)   --->   "%UART_addr_3_req6 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_3, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58]   --->   Operation 100 'writereq' 'UART_addr_3_req6' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 101 [1/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37]   --->   Operation 101 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 102 [2/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42]   --->   Operation 102 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 103 [3/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45]   --->   Operation 103 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 104 [4/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48]   --->   Operation 104 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 105 [5/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51]   --->   Operation 105 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 106 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_3, i32 1, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58]   --->   Operation 106 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 107 [1/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42]   --->   Operation 107 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 108 [2/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45]   --->   Operation 108 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 109 [3/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48]   --->   Operation 109 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 110 [4/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51]   --->   Operation 110 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 111 [5/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58]   --->   Operation 111 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 112 [1/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45]   --->   Operation 112 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 113 [2/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48]   --->   Operation 113 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 114 [3/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51]   --->   Operation 114 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 115 [4/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58]   --->   Operation 115 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 116 [1/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48]   --->   Operation 116 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 117 [2/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51]   --->   Operation 117 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 118 [3/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58]   --->   Operation 118 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 119 [1/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51]   --->   Operation 119 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 120 [2/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58]   --->   Operation 120 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 121 [1/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58]   --->   Operation 121 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 122 [7/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 122 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 123 [6/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 123 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 124 [5/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 124 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.75>
ST_17 : Operation 125 [4/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 125 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 8.75>
ST_18 : Operation 126 [3/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 126 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 8.75>
ST_19 : Operation 127 [2/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 127 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 8.75>
ST_20 : Operation 128 [1/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 128 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 8.75>
ST_21 : Operation 129 [1/1] (8.75ns)   --->   "%UART_addr_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 129 'read' 'UART_addr_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 130 [1/1] (0.00ns)   --->   "%temp = trunc i32 %UART_addr_read to i8" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 130 'trunc' 'temp' <Predicate = true> <Delay = 0.00>

State 22 <SV = 21> <Delay = 8.75>
ST_22 : Operation 131 [1/1] (1.55ns)   --->   "%tmp = icmp eq i8 %temp, 69" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:63]   --->   Operation 131 'icmp' 'tmp' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 132 [1/1] (0.00ns)   --->   "br i1 %tmp, label %2, label %._crit_edge1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:63]   --->   Operation 132 'br' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 133 [1/1] (0.00ns)   --->   "store i1 true, i1* @calibrationSuccess, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 133 'store' <Predicate = (tmp)> <Delay = 0.00>
ST_22 : Operation 134 [1/1] (8.75ns)   --->   "%UART_addr_req2 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 134 'writereq' 'UART_addr_req2' <Predicate = (tmp)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 8.75>
ST_23 : Operation 135 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr, i32 0, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 135 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 8.75>
ST_24 : Operation 136 [5/5] (8.75ns)   --->   "%UART_addr_resp3 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 136 'writeresp' 'UART_addr_resp3' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 8.75>
ST_25 : Operation 137 [4/5] (8.75ns)   --->   "%UART_addr_resp3 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 137 'writeresp' 'UART_addr_resp3' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 8.75>
ST_26 : Operation 138 [3/5] (8.75ns)   --->   "%UART_addr_resp3 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 138 'writeresp' 'UART_addr_resp3' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 8.75>
ST_27 : Operation 139 [2/5] (8.75ns)   --->   "%UART_addr_resp3 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 139 'writeresp' 'UART_addr_resp3' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 8.75>
ST_28 : Operation 140 [1/5] (8.75ns)   --->   "%UART_addr_resp3 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66]   --->   Operation 140 'writeresp' 'UART_addr_resp3' <Predicate = (firstSample_load & tmp)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 141 [1/1] (0.00ns)   --->   "br label %._crit_edge1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:67]   --->   Operation 141 'br' <Predicate = (firstSample_load & tmp)> <Delay = 0.00>
ST_28 : Operation 142 [1/1] (0.00ns)   --->   "store i1 false, i1* @firstSample, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 142 'store' <Predicate = (firstSample_load)> <Delay = 0.00>
ST_28 : Operation 143 [1/1] (0.00ns)   --->   "br label %._crit_edge" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:71]   --->   Operation 143 'br' <Predicate = (firstSample_load)> <Delay = 0.00>
ST_28 : Operation 144 [1/1] (0.00ns)   --->   "%calibrationSuccess_l = load i1* @calibrationSuccess, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:75]   --->   Operation 144 'load' 'calibrationSuccess_l' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 145 [1/1] (0.00ns)   --->   "br i1 %calibrationSuccess_l, label %3, label %._crit_edge2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:75]   --->   Operation 145 'br' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 146 [1/1] (0.00ns)   --->   "%UART_addr_5 = getelementptr i32* %UART, i64 1024"   --->   Operation 146 'getelementptr' 'UART_addr_5' <Predicate = (calibrationSuccess_l)> <Delay = 0.00>
ST_28 : Operation 147 [1/1] (8.75ns)   --->   "%UART_addr_5_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 147 'writereq' 'UART_addr_5_req' <Predicate = (calibrationSuccess_l)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 8.75>
ST_29 : Operation 148 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_5, i32 69, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 148 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 8.75>
ST_30 : Operation 149 [5/5] (8.75ns)   --->   "%UART_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 149 'writeresp' 'UART_addr_5_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 8.75>
ST_31 : Operation 150 [4/5] (8.75ns)   --->   "%UART_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 150 'writeresp' 'UART_addr_5_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 8.75>
ST_32 : Operation 151 [3/5] (8.75ns)   --->   "%UART_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 151 'writeresp' 'UART_addr_5_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 8.75>
ST_33 : Operation 152 [2/5] (8.75ns)   --->   "%UART_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 152 'writeresp' 'UART_addr_5_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 8.75>
ST_34 : Operation 153 [1/5] (8.75ns)   --->   "%UART_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 153 'writeresp' 'UART_addr_5_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 34> <Delay = 8.75>
ST_35 : Operation 154 [1/1] (3.25ns)   --->   "store i32 17, i32* %SBUS_data_addr, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:79]   --->   Operation 154 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_35 : Operation 155 [1/1] (0.00ns)   --->   "%UART_addr_6 = getelementptr i32* %UART, i64 1029"   --->   Operation 155 'getelementptr' 'UART_addr_6' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 156 [7/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 156 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 8.75>
ST_36 : Operation 157 [1/1] (0.00ns)   --->   "%SBUS_data_addr_1 = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:80]   --->   Operation 157 'getelementptr' 'SBUS_data_addr_1' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 158 [1/1] (3.25ns)   --->   "store i32 34, i32* %SBUS_data_addr_1, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:80]   --->   Operation 158 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_36 : Operation 159 [6/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 159 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 8.75>
ST_37 : Operation 160 [1/1] (0.00ns)   --->   "%SBUS_data_addr_2 = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:81]   --->   Operation 160 'getelementptr' 'SBUS_data_addr_2' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 161 [1/1] (3.25ns)   --->   "store i32 51, i32* %SBUS_data_addr_2, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:81]   --->   Operation 161 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_37 : Operation 162 [5/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 162 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 8.75>
ST_38 : Operation 163 [1/1] (0.00ns)   --->   "%SBUS_data_addr_3 = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 3" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:82]   --->   Operation 163 'getelementptr' 'SBUS_data_addr_3' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 164 [1/1] (3.25ns)   --->   "store i32 68, i32* %SBUS_data_addr_3, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:82]   --->   Operation 164 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_38 : Operation 165 [4/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 165 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 38> <Delay = 8.75>
ST_39 : Operation 166 [1/1] (0.00ns)   --->   "%SBUS_data_addr_4 = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:83]   --->   Operation 166 'getelementptr' 'SBUS_data_addr_4' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 167 [1/1] (3.25ns)   --->   "store i32 85, i32* %SBUS_data_addr_4, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:83]   --->   Operation 167 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_39 : Operation 168 [3/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 168 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 8.75>
ST_40 : Operation 169 [1/1] (0.00ns)   --->   "%SBUS_data_addr_5 = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 5" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:84]   --->   Operation 169 'getelementptr' 'SBUS_data_addr_5' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 170 [1/1] (3.25ns)   --->   "store i32 102, i32* %SBUS_data_addr_5, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:84]   --->   Operation 170 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_40 : Operation 171 [2/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 171 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 8.75>
ST_41 : Operation 172 [1/1] (0.00ns)   --->   "%SBUS_data_addr_6 = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 6" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:85]   --->   Operation 172 'getelementptr' 'SBUS_data_addr_6' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 173 [1/1] (3.25ns)   --->   "store i32 119, i32* %SBUS_data_addr_6, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:85]   --->   Operation 173 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_41 : Operation 174 [1/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 174 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 41> <Delay = 8.75>
ST_42 : Operation 175 [1/1] (0.00ns)   --->   "%SBUS_data_addr_7 = getelementptr [4096 x i32]* %SBUS_data, i64 0, i64 7" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:86]   --->   Operation 175 'getelementptr' 'SBUS_data_addr_7' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 176 [1/1] (3.25ns)   --->   "store i32 136, i32* %SBUS_data_addr_7, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:86]   --->   Operation 176 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_42 : Operation 177 [1/1] (8.75ns)   --->   "%UART_addr_6_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_6)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 177 'read' 'UART_addr_6_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 178 [1/1] (0.00ns)   --->   "%tmp_2 = trunc i32 %UART_addr_6_read to i1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 178 'trunc' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 179 [1/1] (0.00ns)   --->   "br i1 %tmp_2, label %4, label %._crit_edge3" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:105]   --->   Operation 179 'br' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 180 [7/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 180 'readreq' 'UART_load_2_req' <Predicate = (tmp_2)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 8.75>
ST_43 : Operation 181 [6/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 181 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 43> <Delay = 8.75>
ST_44 : Operation 182 [5/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 182 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 44> <Delay = 8.75>
ST_45 : Operation 183 [4/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 183 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 45> <Delay = 8.75>
ST_46 : Operation 184 [3/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 184 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 46> <Delay = 8.75>
ST_47 : Operation 185 [2/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 185 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 47> <Delay = 8.75>
ST_48 : Operation 186 [1/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 186 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_48 : Operation 187 [1/1] (0.00ns)   --->   "%UART_addr_7 = getelementptr i32* %UART, i64 1031"   --->   Operation 187 'getelementptr' 'UART_addr_7' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 188 [1/1] (8.75ns)   --->   "%UART_addr_7_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_7, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 188 'writereq' 'UART_addr_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 49 <SV = 48> <Delay = 8.75>
ST_49 : Operation 189 [1/1] (8.75ns)   --->   "%UART_addr_5_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 189 'read' 'UART_addr_5_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_49 : Operation 190 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_7, i32 1, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 190 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 50 <SV = 49> <Delay = 8.75>
ST_50 : Operation 191 [1/1] (3.25ns)   --->   "store i32 %UART_addr_5_read, i32* %SBUS_data_addr, align 4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 191 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_50 : Operation 192 [5/5] (8.75ns)   --->   "%UART_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_7)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 192 'writeresp' 'UART_addr_7_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 51 <SV = 50> <Delay = 8.75>
ST_51 : Operation 193 [4/5] (8.75ns)   --->   "%UART_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_7)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 193 'writeresp' 'UART_addr_7_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 52 <SV = 51> <Delay = 8.75>
ST_52 : Operation 194 [3/5] (8.75ns)   --->   "%UART_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_7)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 194 'writeresp' 'UART_addr_7_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 53 <SV = 52> <Delay = 8.75>
ST_53 : Operation 195 [2/5] (8.75ns)   --->   "%UART_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_7)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 195 'writeresp' 'UART_addr_7_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 53> <Delay = 8.75>
ST_54 : Operation 196 [1/5] (8.75ns)   --->   "%UART_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_7)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 196 'writeresp' 'UART_addr_7_resp' <Predicate = (calibrationSuccess_l & tmp_2)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_54 : Operation 197 [1/1] (0.00ns)   --->   "br label %._crit_edge3" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:122]   --->   Operation 197 'br' <Predicate = (calibrationSuccess_l & tmp_2)> <Delay = 0.00>
ST_54 : Operation 198 [1/1] (0.00ns)   --->   "br label %._crit_edge2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:148]   --->   Operation 198 'br' <Predicate = (calibrationSuccess_l)> <Delay = 0.00>
ST_54 : Operation 199 [1/1] (0.00ns)   --->   "%rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([42 x i8]* @delay_until_ms_MD_5u) nounwind"   --->   Operation 199 'specregionbegin' 'rbegin' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 200 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecProtocol(i32 0, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:38->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 200 'specprotocol' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 201 [1/1] (1.76ns)   --->   "br label %5" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:42->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 201 'br' <Predicate = true> <Delay = 1.76>

State 55 <SV = 54> <Delay = 2.43>
ST_55 : Operation 202 [1/1] (0.00ns)   --->   "%p_014_0_i = phi i19 [ 0, %._crit_edge2 ], [ %ctr_V, %6 ]"   --->   Operation 202 'phi' 'p_014_0_i' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 203 [1/1] (2.43ns)   --->   "%tmp_4 = icmp eq i19 %p_014_0_i, -24288" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:42->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 203 'icmp' 'tmp_4' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 204 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 500000, i64 500000, i64 500000) nounwind"   --->   Operation 204 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 205 [1/1] (2.16ns)   --->   "%ctr_V = add i19 %p_014_0_i, 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:42->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 205 'add' 'ctr_V' <Predicate = true> <Delay = 2.16> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 206 [1/1] (0.00ns)   --->   "br i1 %tmp_4, label %"delay_until_ms<5ull, 100000000ull>.exit", label %6" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:42->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 206 'br' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 207 [1/1] (0.00ns)   --->   "%dummy_1 = load volatile i8* %dummy, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:43->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 207 'load' 'dummy_1' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_55 : Operation 208 [1/1] (0.00ns)   --->   "store volatile i8 %dummy_1, i8* %dummy, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:43->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 208 'store' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_55 : Operation 209 [1/1] (0.00ns)   --->   "br label %5" [SBUS_AXI_UART_Driver/AXI_UART_Driver.h:42->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154]   --->   Operation 209 'br' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_55 : Operation 210 [1/1] (0.00ns)   --->   "%rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([42 x i8]* @delay_until_ms_MD_5u, i32 %rbegin) nounwind"   --->   Operation 210 'specregionend' 'rend' <Predicate = (tmp_4)> <Delay = 0.00>
ST_55 : Operation 211 [1/1] (0.00ns)   --->   "ret void" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:155]   --->   Operation 211 'ret' <Predicate = (tmp_4)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('UART_addr') [18]  (0 ns)
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34) [19]  (8.75 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	bus write on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34) [20]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34) [21]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34) [21]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34) [21]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34) [21]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:34) [21]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:37) [25]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:42) [29]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:45) [33]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:48) [36]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:51) [40]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:58) [43]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62) [44]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62) [44]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62) [44]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62) [44]  (8.75 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62) [44]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62) [44]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62) [44]  (8.75 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus read on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62) [45]  (8.75 ns)

 <State 22>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66) [51]  (8.75 ns)

 <State 23>: 8.75ns
The critical path consists of the following:
	bus write on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66) [52]  (8.75 ns)

 <State 24>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66) [53]  (8.75 ns)

 <State 25>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66) [53]  (8.75 ns)

 <State 26>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66) [53]  (8.75 ns)

 <State 27>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66) [53]  (8.75 ns)

 <State 28>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:66) [53]  (8.75 ns)

 <State 29>: 8.75ns
The critical path consists of the following:
	bus write on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100) [79]  (8.75 ns)

 <State 30>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100) [80]  (8.75 ns)

 <State 31>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100) [80]  (8.75 ns)

 <State 32>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100) [80]  (8.75 ns)

 <State 33>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100) [80]  (8.75 ns)

 <State 34>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100) [80]  (8.75 ns)

 <State 35>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('UART_addr_6') [81]  (0 ns)
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104) [82]  (8.75 ns)

 <State 36>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104) [82]  (8.75 ns)

 <State 37>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104) [82]  (8.75 ns)

 <State 38>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104) [82]  (8.75 ns)

 <State 39>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104) [82]  (8.75 ns)

 <State 40>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104) [82]  (8.75 ns)

 <State 41>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104) [82]  (8.75 ns)

 <State 42>: 8.75ns
The critical path consists of the following:
	bus read on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104) [83]  (8.75 ns)

 <State 43>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107) [87]  (8.75 ns)

 <State 44>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107) [87]  (8.75 ns)

 <State 45>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107) [87]  (8.75 ns)

 <State 46>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107) [87]  (8.75 ns)

 <State 47>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107) [87]  (8.75 ns)

 <State 48>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107) [87]  (8.75 ns)

 <State 49>: 8.75ns
The critical path consists of the following:
	bus read on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107) [88]  (8.75 ns)

 <State 50>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [93]  (8.75 ns)

 <State 51>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [93]  (8.75 ns)

 <State 52>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [93]  (8.75 ns)

 <State 53>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [93]  (8.75 ns)

 <State 54>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [93]  (8.75 ns)

 <State 55>: 2.44ns
The critical path consists of the following:
	'phi' operation ('ctr.V') with incoming values : ('ctr.V', SBUS_AXI_UART_Driver/AXI_UART_Driver.h:42->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154) [102]  (0 ns)
	'icmp' operation ('tmp_4', SBUS_AXI_UART_Driver/AXI_UART_Driver.h:42->SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:154) [103]  (2.44 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
