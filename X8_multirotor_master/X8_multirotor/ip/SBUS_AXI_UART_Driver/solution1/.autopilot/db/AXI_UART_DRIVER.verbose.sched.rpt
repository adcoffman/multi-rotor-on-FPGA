

================================================================
== Vivado HLS Report for 'AXI_UART_DRIVER'
================================================================
* Date:           Sun May 26 19:00:28 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        SBUS_AXI_UART_Driver
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|  9 ~ 21  |          -|          -|     ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 77
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (firstSample_load)
	28  / (!firstSample_load)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / (tmp)
	28  / (!tmp)
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / (calibrationSuccess_l)
	77  / (!calibrationSuccess_l)
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / (tmp_8)
	77  / (!tmp_8)
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	70  / (!tmp_5)
	50  / (tmp_5)
50 --> 
	51  / (tmp_6)
	70  / (!tmp_6)
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / (tmp_10)
	70  / (!tmp_10)
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	50  / (tmp_5 & tmp_6 & !tmp_7)
	71  / (!tmp_5) | (!tmp_6) | (tmp_7)
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.75>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %UART), !map !48"   --->   Operation 78 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %OUT_r), !map !54"   --->   Operation 79 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([16 x i8]* @AXI_UART_DRIVER_str) nounwind"   --->   Operation 80 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:33]   --->   Operation 81 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %UART, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 4096, [5 x i8]* @p_str4, [4 x i8]* @p_str5, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 82 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %OUT_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 4096, [4 x i8]* @p_str6, [4 x i8]* @p_str5, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 83 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i1* @firstSample, i32 1, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:53]   --->   Operation 84 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%firstSample_load = load i1* @firstSample, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:56]   --->   Operation 85 'load' 'firstSample_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "br i1 %firstSample_load, label %1, label %._crit_edge" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:56]   --->   Operation 86 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%UART_addr = getelementptr i32* %UART, i64 1031"   --->   Operation 87 'getelementptr' 'UART_addr' <Predicate = (firstSample_load)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (8.75ns)   --->   "%UART_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:61]   --->   Operation 88 'writereq' 'UART_addr_req' <Predicate = (firstSample_load)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 89 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr, i32 69, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:61]   --->   Operation 89 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%UART_addr_1 = getelementptr i32* %UART, i64 1027"   --->   Operation 90 'getelementptr' 'UART_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (8.75ns)   --->   "%UART_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_1, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:64]   --->   Operation 91 'writereq' 'UART_addr_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 92 [5/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:61]   --->   Operation 92 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 93 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_1, i32 128, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:64]   --->   Operation 93 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%UART_addr_2 = getelementptr i32* %UART, i64 1024"   --->   Operation 94 'getelementptr' 'UART_addr_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (8.75ns)   --->   "%UART_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_2, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 95 'writereq' 'UART_addr_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 96 [4/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:61]   --->   Operation 96 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 97 [5/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:64]   --->   Operation 97 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 98 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_2, i32 62, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 98 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%UART_addr_3 = getelementptr i32* %UART, i64 1025"   --->   Operation 99 'getelementptr' 'UART_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (8.75ns)   --->   "%UART_addr_3_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_3, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:75]   --->   Operation 100 'writereq' 'UART_addr_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 101 [3/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:61]   --->   Operation 101 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 102 [4/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:64]   --->   Operation 102 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 103 [5/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 103 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 104 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_3, i32 0, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:75]   --->   Operation 104 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 105 [1/1] (8.75ns)   --->   "%UART_addr_1_req6 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_1, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 105 'writereq' 'UART_addr_1_req6' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 106 [2/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:61]   --->   Operation 106 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 107 [3/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:64]   --->   Operation 107 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 108 [4/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 108 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 109 [5/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:75]   --->   Operation 109 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 110 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_1, i32 31, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 110 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 111 [1/1] (0.00ns)   --->   "%UART_addr_4 = getelementptr i32* %UART, i64 1026"   --->   Operation 111 'getelementptr' 'UART_addr_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 112 [1/1] (8.75ns)   --->   "%UART_addr_4_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_4, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:81]   --->   Operation 112 'writereq' 'UART_addr_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 113 [1/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:61]   --->   Operation 113 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 114 [2/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:64]   --->   Operation 114 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 115 [3/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 115 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 116 [4/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:75]   --->   Operation 116 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 117 [5/5] (8.75ns)   --->   "%UART_addr_1_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 117 'writeresp' 'UART_addr_1_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 118 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_4, i32 1, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:81]   --->   Operation 118 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 119 [1/1] (8.75ns)   --->   "%UART_addr_3_req8 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_3, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:87]   --->   Operation 119 'writereq' 'UART_addr_3_req8' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 120 [1/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:64]   --->   Operation 120 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 121 [2/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 121 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 122 [3/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:75]   --->   Operation 122 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 123 [4/5] (8.75ns)   --->   "%UART_addr_1_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 123 'writeresp' 'UART_addr_1_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 124 [5/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:81]   --->   Operation 124 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 125 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_3, i32 1, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:87]   --->   Operation 125 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 126 [1/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70]   --->   Operation 126 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 127 [2/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:75]   --->   Operation 127 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 128 [3/5] (8.75ns)   --->   "%UART_addr_1_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 128 'writeresp' 'UART_addr_1_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 129 [4/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:81]   --->   Operation 129 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 130 [5/5] (8.75ns)   --->   "%UART_addr_3_resp9 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:87]   --->   Operation 130 'writeresp' 'UART_addr_3_resp9' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 131 [1/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:75]   --->   Operation 131 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 132 [2/5] (8.75ns)   --->   "%UART_addr_1_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 132 'writeresp' 'UART_addr_1_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 133 [3/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:81]   --->   Operation 133 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 134 [4/5] (8.75ns)   --->   "%UART_addr_3_resp9 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:87]   --->   Operation 134 'writeresp' 'UART_addr_3_resp9' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 135 [1/5] (8.75ns)   --->   "%UART_addr_1_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 135 'writeresp' 'UART_addr_1_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 136 [2/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:81]   --->   Operation 136 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 137 [3/5] (8.75ns)   --->   "%UART_addr_3_resp9 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:87]   --->   Operation 137 'writeresp' 'UART_addr_3_resp9' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 138 [1/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:81]   --->   Operation 138 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 139 [2/5] (8.75ns)   --->   "%UART_addr_3_resp9 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:87]   --->   Operation 139 'writeresp' 'UART_addr_3_resp9' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 140 [1/5] (8.75ns)   --->   "%UART_addr_3_resp9 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:87]   --->   Operation 140 'writeresp' 'UART_addr_3_resp9' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 141 [7/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91]   --->   Operation 141 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 142 [6/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91]   --->   Operation 142 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 143 [5/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91]   --->   Operation 143 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.75>
ST_17 : Operation 144 [4/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91]   --->   Operation 144 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 8.75>
ST_18 : Operation 145 [3/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91]   --->   Operation 145 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 8.75>
ST_19 : Operation 146 [2/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91]   --->   Operation 146 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 8.75>
ST_20 : Operation 147 [1/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91]   --->   Operation 147 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 8.75>
ST_21 : Operation 148 [1/1] (8.75ns)   --->   "%UART_addr_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91]   --->   Operation 148 'read' 'UART_addr_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 149 [1/1] (0.00ns)   --->   "%temp = trunc i32 %UART_addr_read to i8" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91]   --->   Operation 149 'trunc' 'temp' <Predicate = true> <Delay = 0.00>

State 22 <SV = 21> <Delay = 8.75>
ST_22 : Operation 150 [1/1] (1.55ns)   --->   "%tmp = icmp eq i8 %temp, 69" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:92]   --->   Operation 150 'icmp' 'tmp' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 151 [1/1] (0.00ns)   --->   "br i1 %tmp, label %2, label %._crit_edge2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:92]   --->   Operation 151 'br' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 152 [1/1] (0.00ns)   --->   "store i1 true, i1* @calibrationSuccess, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:94]   --->   Operation 152 'store' <Predicate = (tmp)> <Delay = 0.00>
ST_22 : Operation 153 [1/1] (8.75ns)   --->   "%UART_addr_req4 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95]   --->   Operation 153 'writereq' 'UART_addr_req4' <Predicate = (tmp)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 8.75>
ST_23 : Operation 154 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr, i32 0, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95]   --->   Operation 154 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 8.75>
ST_24 : Operation 155 [5/5] (8.75ns)   --->   "%UART_addr_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95]   --->   Operation 155 'writeresp' 'UART_addr_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 8.75>
ST_25 : Operation 156 [4/5] (8.75ns)   --->   "%UART_addr_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95]   --->   Operation 156 'writeresp' 'UART_addr_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 8.75>
ST_26 : Operation 157 [3/5] (8.75ns)   --->   "%UART_addr_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95]   --->   Operation 157 'writeresp' 'UART_addr_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 8.75>
ST_27 : Operation 158 [2/5] (8.75ns)   --->   "%UART_addr_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95]   --->   Operation 158 'writeresp' 'UART_addr_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 8.75>
ST_28 : Operation 159 [1/5] (8.75ns)   --->   "%UART_addr_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95]   --->   Operation 159 'writeresp' 'UART_addr_resp5' <Predicate = (firstSample_load & tmp)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 160 [1/1] (0.00ns)   --->   "br label %._crit_edge2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 160 'br' <Predicate = (firstSample_load & tmp)> <Delay = 0.00>
ST_28 : Operation 161 [1/1] (0.00ns)   --->   "store i1 false, i1* @firstSample, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:99]   --->   Operation 161 'store' <Predicate = (firstSample_load)> <Delay = 0.00>
ST_28 : Operation 162 [1/1] (0.00ns)   --->   "br label %._crit_edge" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 162 'br' <Predicate = (firstSample_load)> <Delay = 0.00>
ST_28 : Operation 163 [1/1] (0.00ns)   --->   "%calibrationSuccess_l = load i1* @calibrationSuccess, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 163 'load' 'calibrationSuccess_l' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 164 [1/1] (0.00ns)   --->   "br i1 %calibrationSuccess_l, label %3, label %._crit_edge3" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:104]   --->   Operation 164 'br' <Predicate = true> <Delay = 0.00>

State 29 <SV = 28> <Delay = 8.75>
ST_29 : Operation 165 [1/1] (0.00ns)   --->   "%UART_addr_5 = getelementptr i32* %UART, i64 1029"   --->   Operation 165 'getelementptr' 'UART_addr_5' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 166 [7/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170]   --->   Operation 166 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 8.75>
ST_30 : Operation 167 [6/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170]   --->   Operation 167 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 8.75>
ST_31 : Operation 168 [5/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170]   --->   Operation 168 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 8.75>
ST_32 : Operation 169 [4/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170]   --->   Operation 169 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 8.75>
ST_33 : Operation 170 [3/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170]   --->   Operation 170 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 8.75>
ST_34 : Operation 171 [2/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170]   --->   Operation 171 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 34> <Delay = 8.75>
ST_35 : Operation 172 [1/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170]   --->   Operation 172 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 8.75>
ST_36 : Operation 173 [1/1] (8.75ns)   --->   "%UART_addr_5_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170]   --->   Operation 173 'read' 'UART_addr_5_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 174 [1/1] (0.00ns)   --->   "%tmp_8 = trunc i32 %UART_addr_5_read to i1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170]   --->   Operation 174 'trunc' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 175 [1/1] (0.00ns)   --->   "br i1 %tmp_8, label %4, label %._crit_edge4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:171]   --->   Operation 175 'br' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 176 [1/1] (0.00ns)   --->   "%UART_addr_6 = getelementptr i32* %UART, i64 1024"   --->   Operation 176 'getelementptr' 'UART_addr_6' <Predicate = (tmp_8)> <Delay = 0.00>
ST_36 : Operation 177 [7/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 177 'readreq' 'UART_load_2_req' <Predicate = (tmp_8)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 8.75>
ST_37 : Operation 178 [6/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 178 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 8.75>
ST_38 : Operation 179 [5/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 179 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 38> <Delay = 8.75>
ST_39 : Operation 180 [4/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 180 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 8.75>
ST_40 : Operation 181 [3/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 181 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 8.75>
ST_41 : Operation 182 [2/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 182 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 41> <Delay = 8.75>
ST_42 : Operation 183 [1/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 183 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 8.75>
ST_43 : Operation 184 [1/1] (8.75ns)   --->   "%UART_addr_6_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_6)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 184 'read' 'UART_addr_6_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 185 [1/1] (0.00ns)   --->   "%tmp_9 = trunc i32 %UART_addr_6_read to i8" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 185 'trunc' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 186 [1/1] (8.75ns)   --->   "%OUT_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %OUT_r, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 186 'writereq' 'OUT_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 43> <Delay = 8.75>
ST_44 : Operation 187 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 %tmp_9, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 187 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_44 : Operation 188 [1/1] (1.55ns)   --->   "%tmp_5 = icmp eq i8 %tmp_9, 15" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:177]   --->   Operation 188 'icmp' 'tmp_5' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 45 <SV = 44> <Delay = 8.75>
ST_45 : Operation 189 [5/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 189 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 45> <Delay = 8.75>
ST_46 : Operation 190 [4/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 190 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 46> <Delay = 8.75>
ST_47 : Operation 191 [3/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 191 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 47> <Delay = 8.75>
ST_48 : Operation 192 [2/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 192 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 49 <SV = 48> <Delay = 8.75>
ST_49 : Operation 193 [1/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173]   --->   Operation 193 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_49 : Operation 194 [1/1] (1.76ns)   --->   "br i1 %tmp_5, label %.preheader.preheader, label %.loopexit" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:177]   --->   Operation 194 'br' <Predicate = true> <Delay = 1.76>
ST_49 : Operation 195 [1/1] (0.00ns)   --->   "%NUM_BYTES_READ = alloca i5"   --->   Operation 195 'alloca' 'NUM_BYTES_READ' <Predicate = (tmp_5)> <Delay = 0.00>
ST_49 : Operation 196 [1/1] (1.76ns)   --->   "store i5 1, i5* %NUM_BYTES_READ"   --->   Operation 196 'store' <Predicate = (tmp_5)> <Delay = 1.76>
ST_49 : Operation 197 [1/1] (0.00ns)   --->   "br label %.preheader" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:180]   --->   Operation 197 'br' <Predicate = (tmp_5)> <Delay = 0.00>

State 50 <SV = 49> <Delay = 8.75>
ST_50 : Operation 198 [1/1] (0.00ns)   --->   "%NUM_BYTES_READ_load = load i5* %NUM_BYTES_READ" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:187]   --->   Operation 198 'load' 'NUM_BYTES_READ_load' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 199 [1/1] (1.36ns)   --->   "%tmp_6 = icmp ult i5 %NUM_BYTES_READ_load, -7" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:180]   --->   Operation 199 'icmp' 'tmp_6' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 200 [1/1] (1.76ns)   --->   "br i1 %tmp_6, label %5, label %.loopexit.loopexit" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:180]   --->   Operation 200 'br' <Predicate = true> <Delay = 1.76>
ST_50 : Operation 201 [7/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183]   --->   Operation 201 'readreq' 'UART_load_3_req' <Predicate = (tmp_6)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 51 <SV = 50> <Delay = 8.75>
ST_51 : Operation 202 [6/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183]   --->   Operation 202 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 52 <SV = 51> <Delay = 8.75>
ST_52 : Operation 203 [5/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183]   --->   Operation 203 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 53 <SV = 52> <Delay = 8.75>
ST_53 : Operation 204 [4/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183]   --->   Operation 204 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 53> <Delay = 8.75>
ST_54 : Operation 205 [3/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183]   --->   Operation 205 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 55 <SV = 54> <Delay = 8.75>
ST_55 : Operation 206 [2/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183]   --->   Operation 206 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 56 <SV = 55> <Delay = 8.75>
ST_56 : Operation 207 [1/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183]   --->   Operation 207 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 57 <SV = 56> <Delay = 8.75>
ST_57 : Operation 208 [1/1] (8.75ns)   --->   "%UART_addr_5_read_1 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183]   --->   Operation 208 'read' 'UART_addr_5_read_1' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_57 : Operation 209 [1/1] (0.00ns)   --->   "%tmp_10 = trunc i32 %UART_addr_5_read_1 to i1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183]   --->   Operation 209 'trunc' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 210 [1/1] (0.00ns)   --->   "br i1 %tmp_10, label %6, label %._crit_edge5" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:184]   --->   Operation 210 'br' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 211 [7/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 211 'readreq' 'UART_load_4_req' <Predicate = (tmp_10)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_57 : Operation 212 [1/1] (1.76ns)   --->   "store i14 0, i14* @cycle_count, align 2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:188]   --->   Operation 212 'store' <Predicate = (tmp_10)> <Delay = 1.76>

State 58 <SV = 57> <Delay = 8.75>
ST_58 : Operation 213 [6/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 213 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 59 <SV = 58> <Delay = 8.75>
ST_59 : Operation 214 [5/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 214 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 60 <SV = 59> <Delay = 8.75>
ST_60 : Operation 215 [4/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 215 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 61 <SV = 60> <Delay = 8.75>
ST_61 : Operation 216 [3/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 216 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 62 <SV = 61> <Delay = 8.75>
ST_62 : Operation 217 [2/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 217 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 63 <SV = 62> <Delay = 8.75>
ST_63 : Operation 218 [1/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 218 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 64 <SV = 63> <Delay = 8.75>
ST_64 : Operation 219 [1/1] (8.75ns)   --->   "%UART_addr_6_read_1 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_6)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 219 'read' 'UART_addr_6_read_1' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_64 : Operation 220 [1/1] (0.00ns)   --->   "%tmp_11 = trunc i32 %UART_addr_6_read_1 to i8" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 220 'trunc' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 221 [1/1] (0.00ns)   --->   "%tmp_1 = zext i5 %NUM_BYTES_READ_load to i64" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 221 'zext' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 222 [1/1] (0.00ns)   --->   "%OUT_addr = getelementptr i8* %OUT_r, i64 %tmp_1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 222 'getelementptr' 'OUT_addr' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 223 [1/1] (8.75ns)   --->   "%OUT_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %OUT_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 223 'writereq' 'OUT_addr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 65 <SV = 64> <Delay = 8.75>
ST_65 : Operation 224 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_addr, i8 %tmp_11, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 224 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 66 <SV = 65> <Delay = 8.75>
ST_66 : Operation 225 [5/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 225 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 67 <SV = 66> <Delay = 8.75>
ST_67 : Operation 226 [4/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 226 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 68 <SV = 67> <Delay = 8.75>
ST_68 : Operation 227 [3/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 227 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 69 <SV = 68> <Delay = 8.75>
ST_69 : Operation 228 [2/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 228 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_69 : Operation 229 [1/1] (1.78ns)   --->   "%NUM_BYTES_READ_1 = add i5 1, %NUM_BYTES_READ_load" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:187]   --->   Operation 229 'add' 'NUM_BYTES_READ_1' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 230 [1/1] (1.76ns)   --->   "store i5 %NUM_BYTES_READ_1, i5* %NUM_BYTES_READ" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:187]   --->   Operation 230 'store' <Predicate = true> <Delay = 1.76>

State 70 <SV = 69> <Delay = 8.75>
ST_70 : Operation 231 [1/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186]   --->   Operation 231 'writeresp' 'OUT_addr_resp' <Predicate = (tmp_5 & tmp_6 & tmp_10)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_70 : Operation 232 [1/1] (0.00ns)   --->   "br label %._crit_edge5" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:189]   --->   Operation 232 'br' <Predicate = (tmp_5 & tmp_6 & tmp_10)> <Delay = 0.00>
ST_70 : Operation 233 [1/1] (0.00ns)   --->   "%NUM_BYTES_READ_load_1 = load i5* %NUM_BYTES_READ"   --->   Operation 233 'load' 'NUM_BYTES_READ_load_1' <Predicate = (tmp_5 & tmp_6)> <Delay = 0.00>
ST_70 : Operation 234 [1/1] (0.00ns)   --->   "%cycle_count_load = load i14* @cycle_count, align 2"   --->   Operation 234 'load' 'cycle_count_load' <Predicate = (tmp_5 & tmp_6)> <Delay = 0.00>
ST_70 : Operation 235 [1/1] (2.20ns)   --->   "%tmp_7 = icmp ugt i14 %cycle_count_load, -6384" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:190]   --->   Operation 235 'icmp' 'tmp_7' <Predicate = (tmp_5 & tmp_6)> <Delay = 2.20> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 236 [1/1] (1.76ns)   --->   "br i1 %tmp_7, label %.loopexit.loopexit, label %7" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:190]   --->   Operation 236 'br' <Predicate = (tmp_5 & tmp_6)> <Delay = 1.76>
ST_70 : Operation 237 [1/1] (1.81ns)   --->   "%tmp_2 = add i14 %cycle_count_load, 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:194]   --->   Operation 237 'add' 'tmp_2' <Predicate = (tmp_5 & tmp_6 & !tmp_7)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 238 [1/1] (1.76ns)   --->   "store i14 %tmp_2, i14* @cycle_count, align 2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:194]   --->   Operation 238 'store' <Predicate = (tmp_5 & tmp_6 & !tmp_7)> <Delay = 1.76>
ST_70 : Operation 239 [1/1] (0.00ns)   --->   "br label %.preheader" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:195]   --->   Operation 239 'br' <Predicate = (tmp_5 & tmp_6 & !tmp_7)> <Delay = 0.00>
ST_70 : Operation 240 [1/1] (0.00ns)   --->   "%NUM_BYTES_READ_3_ph = phi i5 [ %NUM_BYTES_READ_load, %.preheader ], [ %NUM_BYTES_READ_load_1, %._crit_edge5 ]" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:187]   --->   Operation 240 'phi' 'NUM_BYTES_READ_3_ph' <Predicate = (tmp_5 & !tmp_6) | (tmp_5 & tmp_7)> <Delay = 0.00>
ST_70 : Operation 241 [1/1] (1.76ns)   --->   "br label %.loopexit"   --->   Operation 241 'br' <Predicate = (tmp_5 & !tmp_6) | (tmp_5 & tmp_7)> <Delay = 1.76>
ST_70 : Operation 242 [1/1] (0.00ns)   --->   "%OUT_addr_1 = getelementptr i8* %OUT_r, i64 26"   --->   Operation 242 'getelementptr' 'OUT_addr_1' <Predicate = (!tmp_5) | (!tmp_6) | (tmp_7)> <Delay = 0.00>
ST_70 : Operation 243 [1/1] (8.75ns)   --->   "%OUT_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %OUT_addr_1, i32 2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:203]   --->   Operation 243 'writereq' 'OUT_addr_1_req' <Predicate = (!tmp_5) | (!tmp_6) | (tmp_7)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 71 <SV = 70> <Delay = 8.75>
ST_71 : Operation 244 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_addr_1, i8 69, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:203]   --->   Operation 244 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 72 <SV = 71> <Delay = 8.75>
ST_72 : Operation 245 [1/1] (0.00ns)   --->   "%NUM_BYTES_READ_3 = phi i5 [ 0, %4 ], [ %NUM_BYTES_READ_3_ph, %.loopexit.loopexit ]" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:187]   --->   Operation 245 'phi' 'NUM_BYTES_READ_3' <Predicate = true> <Delay = 0.00>
ST_72 : Operation 246 [1/1] (0.00ns)   --->   "%tmp_3 = zext i5 %NUM_BYTES_READ_3 to i8" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:204]   --->   Operation 246 'zext' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_72 : Operation 247 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_addr_1, i8 %tmp_3, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:204]   --->   Operation 247 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 73 <SV = 72> <Delay = 8.75>
ST_73 : Operation 248 [5/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:204]   --->   Operation 248 'writeresp' 'OUT_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 74 <SV = 73> <Delay = 8.75>
ST_74 : Operation 249 [4/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:204]   --->   Operation 249 'writeresp' 'OUT_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 75 <SV = 74> <Delay = 8.75>
ST_75 : Operation 250 [3/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:204]   --->   Operation 250 'writeresp' 'OUT_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 76 <SV = 75> <Delay = 8.75>
ST_76 : Operation 251 [2/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:204]   --->   Operation 251 'writeresp' 'OUT_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 77 <SV = 76> <Delay = 8.75>
ST_77 : Operation 252 [1/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:204]   --->   Operation 252 'writeresp' 'OUT_addr_1_resp' <Predicate = (calibrationSuccess_l & tmp_8)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_77 : Operation 253 [1/1] (0.00ns)   --->   "br label %._crit_edge4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:206]   --->   Operation 253 'br' <Predicate = (calibrationSuccess_l & tmp_8)> <Delay = 0.00>
ST_77 : Operation 254 [1/1] (0.00ns)   --->   "br label %._crit_edge3" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:218]   --->   Operation 254 'br' <Predicate = (calibrationSuccess_l)> <Delay = 0.00>
ST_77 : Operation 255 [1/1] (0.00ns)   --->   "ret void" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:225]   --->   Operation 255 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('UART_addr') [16]  (0 ns)
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:61) [17]  (8.75 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	bus write on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:61) [18]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:61) [19]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:61) [19]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:61) [19]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:61) [19]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:61) [19]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:64) [23]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:70) [27]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:75) [31]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78) [34]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:81) [38]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:87) [41]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91) [42]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91) [42]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91) [42]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91) [42]  (8.75 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91) [42]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91) [42]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91) [42]  (8.75 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus read on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:91) [43]  (8.75 ns)

 <State 22>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95) [49]  (8.75 ns)

 <State 23>: 8.75ns
The critical path consists of the following:
	bus write on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95) [50]  (8.75 ns)

 <State 24>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95) [51]  (8.75 ns)

 <State 25>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95) [51]  (8.75 ns)

 <State 26>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95) [51]  (8.75 ns)

 <State 27>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95) [51]  (8.75 ns)

 <State 28>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:95) [51]  (8.75 ns)

 <State 29>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('UART_addr_5') [60]  (0 ns)
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170) [61]  (8.75 ns)

 <State 30>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170) [61]  (8.75 ns)

 <State 31>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170) [61]  (8.75 ns)

 <State 32>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170) [61]  (8.75 ns)

 <State 33>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170) [61]  (8.75 ns)

 <State 34>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170) [61]  (8.75 ns)

 <State 35>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170) [61]  (8.75 ns)

 <State 36>: 8.75ns
The critical path consists of the following:
	bus read on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:170) [62]  (8.75 ns)

 <State 37>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173) [67]  (8.75 ns)

 <State 38>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173) [67]  (8.75 ns)

 <State 39>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173) [67]  (8.75 ns)

 <State 40>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173) [67]  (8.75 ns)

 <State 41>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173) [67]  (8.75 ns)

 <State 42>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173) [67]  (8.75 ns)

 <State 43>: 8.75ns
The critical path consists of the following:
	bus read on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173) [68]  (8.75 ns)

 <State 44>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173) [71]  (8.75 ns)

 <State 45>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173) [72]  (8.75 ns)

 <State 46>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173) [72]  (8.75 ns)

 <State 47>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173) [72]  (8.75 ns)

 <State 48>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173) [72]  (8.75 ns)

 <State 49>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:173) [72]  (8.75 ns)

 <State 50>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183) [84]  (8.75 ns)

 <State 51>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183) [84]  (8.75 ns)

 <State 52>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183) [84]  (8.75 ns)

 <State 53>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183) [84]  (8.75 ns)

 <State 54>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183) [84]  (8.75 ns)

 <State 55>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183) [84]  (8.75 ns)

 <State 56>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183) [84]  (8.75 ns)

 <State 57>: 8.75ns
The critical path consists of the following:
	bus read on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:183) [85]  (8.75 ns)

 <State 58>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186) [89]  (8.75 ns)

 <State 59>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186) [89]  (8.75 ns)

 <State 60>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186) [89]  (8.75 ns)

 <State 61>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186) [89]  (8.75 ns)

 <State 62>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186) [89]  (8.75 ns)

 <State 63>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186) [89]  (8.75 ns)

 <State 64>: 8.75ns
The critical path consists of the following:
	bus read on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186) [90]  (8.75 ns)

 <State 65>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186) [95]  (8.75 ns)

 <State 66>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186) [96]  (8.75 ns)

 <State 67>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186) [96]  (8.75 ns)

 <State 68>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186) [96]  (8.75 ns)

 <State 69>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186) [96]  (8.75 ns)

 <State 70>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:186) [96]  (8.75 ns)

 <State 71>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:203) [117]  (8.75 ns)

 <State 72>: 8.75ns
The critical path consists of the following:
	'phi' operation ('NUM_BYTES_READ_3', SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:187) with incoming values : ('NUM_BYTES_READ_load', SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:187) ('NUM_BYTES_READ_load_1') [114]  (0 ns)
	bus write on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:204) [119]  (8.75 ns)

 <State 73>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:204) [120]  (8.75 ns)

 <State 74>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:204) [120]  (8.75 ns)

 <State 75>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:204) [120]  (8.75 ns)

 <State 76>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:204) [120]  (8.75 ns)

 <State 77>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:204) [120]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
