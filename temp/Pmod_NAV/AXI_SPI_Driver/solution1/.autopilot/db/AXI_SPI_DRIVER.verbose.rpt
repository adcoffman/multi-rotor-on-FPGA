

================================================================
== Vivado HLS Report for 'AXI_SPI_DRIVER'
================================================================
* Date:           Wed May  8 02:28:29 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        AXI_SPI_Driver
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    6|    6|    6|    6|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|DSP              |        -|      -|       -|      -|
|Expression       |        -|      -|       0|     12|
|FIFO             |        -|      -|       -|      -|
|Instance         |        2|      -|     618|    748|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|    185|
|Register         |        -|      -|      55|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        2|      0|     673|    945|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |    ~0   |      0|   ~0   |      1|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    +---------------------------------+-------------------------------+---------+-------+-----+-----+
    |             Instance            |             Module            | BRAM_18K| DSP48E|  FF | LUT |
    +---------------------------------+-------------------------------+---------+-------+-----+-----+
    |AXI_SPI_DRIVER_debug_s_axi_U     |AXI_SPI_DRIVER_debug_s_axi     |        0|      0|  106|  168|
    |AXI_SPI_DRIVER_spi_core_m_axi_U  |AXI_SPI_DRIVER_spi_core_m_axi  |        2|      0|  512|  580|
    +---------------------------------+-------------------------------+---------+-------+-----+-----+
    |Total                            |                               |        2|      0|  618|  748|
    +---------------------------------+-------------------------------+---------+-------+-----+-----+

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +------------------------------------+----------+-------+---+----+------------+------------+
    |            Variable Name           | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +------------------------------------+----------+-------+---+----+------------+------------+
    |ap_condition_274                    |    and   |      0|  0|   2|           1|           1|
    |ap_condition_439                    |    and   |      0|  0|   2|           1|           1|
    |ap_predicate_op37_writereq_state1   |    and   |      0|  0|   2|           1|           1|
    |ap_predicate_op47_writeresp_state7  |    and   |      0|  0|   2|           1|           1|
    |ap_block_state1_io                  |    or    |      0|  0|   2|           1|           1|
    |ap_block_state7                     |    or    |      0|  0|   2|           1|           1|
    +------------------------------------+----------+-------+---+----+------------+------------+
    |Total                               |          |      0|  0|  12|           6|           6|
    +------------------------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +---------------------------------+----+-----------+-----+-----------+
    |               Name              | LUT| Input Size| Bits| Total Bits|
    +---------------------------------+----+-----------+-----+-----------+
    |ap_NS_fsm                        |  89|         18|    1|         18|
    |ap_sig_ioackin_spi_core_AWREADY  |   9|          2|    1|          2|
    |ap_sig_ioackin_spi_core_WREADY   |   9|          2|    1|          2|
    |spi_core_AWADDR                  |  21|          4|   32|        128|
    |spi_core_WDATA                   |  21|          4|   32|        128|
    |spi_core_blk_n_AW                |   9|          2|    1|          2|
    |spi_core_blk_n_B                 |   9|          2|    1|          2|
    |spi_core_blk_n_W                 |   9|          2|    1|          2|
    |state                            |   9|          2|    2|          4|
    +---------------------------------+----+-----------+-----+-----------+
    |Total                            | 185|         38|   72|        288|
    +---------------------------------+----+-----------+-----+-----------+

    * Register: 
    +---------------------------------+----+----+-----+-----------+
    |               Name              | FF | LUT| Bits| Const Bits|
    +---------------------------------+----+----+-----+-----------+
    |TX_message_V_read_reg_161        |  32|   0|   32|          0|
    |ap_CS_fsm                        |  17|   0|   17|          0|
    |ap_reg_ioackin_spi_core_AWREADY  |   1|   0|    1|          0|
    |ap_reg_ioackin_spi_core_WREADY   |   1|   0|    1|          0|
    |state                            |   2|   0|    4|          2|
    |state_load_reg_166               |   2|   0|    4|          2|
    +---------------------------------+----+----+-----+-----------+
    |Total                            |  55|   0|   59|          4|
    +---------------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+-------------------------+-----+-----+------------+----------------+--------------+
|        RTL Ports        | Dir | Bits|  Protocol  |  Source Object |    C Type    |
+-------------------------+-----+-----+------------+----------------+--------------+
|s_axi_debug_AWVALID      |  in |    1|    s_axi   |      debug     |    scalar    |
|s_axi_debug_AWREADY      | out |    1|    s_axi   |      debug     |    scalar    |
|s_axi_debug_AWADDR       |  in |    5|    s_axi   |      debug     |    scalar    |
|s_axi_debug_WVALID       |  in |    1|    s_axi   |      debug     |    scalar    |
|s_axi_debug_WREADY       | out |    1|    s_axi   |      debug     |    scalar    |
|s_axi_debug_WDATA        |  in |   32|    s_axi   |      debug     |    scalar    |
|s_axi_debug_WSTRB        |  in |    4|    s_axi   |      debug     |    scalar    |
|s_axi_debug_ARVALID      |  in |    1|    s_axi   |      debug     |    scalar    |
|s_axi_debug_ARREADY      | out |    1|    s_axi   |      debug     |    scalar    |
|s_axi_debug_ARADDR       |  in |    5|    s_axi   |      debug     |    scalar    |
|s_axi_debug_RVALID       | out |    1|    s_axi   |      debug     |    scalar    |
|s_axi_debug_RREADY       |  in |    1|    s_axi   |      debug     |    scalar    |
|s_axi_debug_RDATA        | out |   32|    s_axi   |      debug     |    scalar    |
|s_axi_debug_RRESP        | out |    2|    s_axi   |      debug     |    scalar    |
|s_axi_debug_BVALID       | out |    1|    s_axi   |      debug     |    scalar    |
|s_axi_debug_BREADY       |  in |    1|    s_axi   |      debug     |    scalar    |
|s_axi_debug_BRESP        | out |    2|    s_axi   |      debug     |    scalar    |
|ap_clk                   |  in |    1| ap_ctrl_hs | AXI_SPI_DRIVER | return value |
|ap_rst_n                 |  in |    1| ap_ctrl_hs | AXI_SPI_DRIVER | return value |
|ap_start                 |  in |    1| ap_ctrl_hs | AXI_SPI_DRIVER | return value |
|ap_done                  | out |    1| ap_ctrl_hs | AXI_SPI_DRIVER | return value |
|ap_idle                  | out |    1| ap_ctrl_hs | AXI_SPI_DRIVER | return value |
|ap_ready                 | out |    1| ap_ctrl_hs | AXI_SPI_DRIVER | return value |
|m_axi_spi_core_AWVALID   | out |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_AWREADY   |  in |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_AWADDR    | out |   32|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_AWID      | out |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_AWLEN     | out |    8|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_AWSIZE    | out |    3|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_AWBURST   | out |    2|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_AWLOCK    | out |    2|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_AWCACHE   | out |    4|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_AWPROT    | out |    3|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_AWQOS     | out |    4|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_AWREGION  | out |    4|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_AWUSER    | out |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_WVALID    | out |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_WREADY    |  in |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_WDATA     | out |   32|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_WSTRB     | out |    4|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_WLAST     | out |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_WID       | out |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_WUSER     | out |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_ARVALID   | out |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_ARREADY   |  in |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_ARADDR    | out |   32|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_ARID      | out |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_ARLEN     | out |    8|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_ARSIZE    | out |    3|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_ARBURST   | out |    2|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_ARLOCK    | out |    2|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_ARCACHE   | out |    4|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_ARPROT    | out |    3|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_ARQOS     | out |    4|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_ARREGION  | out |    4|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_ARUSER    | out |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_RVALID    |  in |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_RREADY    | out |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_RDATA     |  in |   32|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_RLAST     |  in |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_RID       |  in |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_RUSER     |  in |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_RRESP     |  in |    2|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_BVALID    |  in |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_BREADY    | out |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_BRESP     |  in |    2|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_BID       |  in |    1|    m_axi   |    spi_core    |    pointer   |
|m_axi_spi_core_BUSER     |  in |    1|    m_axi   |    spi_core    |    pointer   |
+-------------------------+-----+-----+------------+----------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 17
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (state_load == 1)
	8  / (state_load == 0)
	13  / (state_load != 0 & state_load != 1)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	7  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	7  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.75>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecClockDomain([8 x i8]* @default, [1 x i8]* @empty)"   --->   Operation 18 'specclockdomain' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %spi_core), !map !29"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %TX_message_V), !map !35"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %RX_message_V), !map !41"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @AXI_SPI_DRIVER_str) nounwind"   --->   Operation 22 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.00ns)   --->   "%TX_message_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %TX_message_V)"   --->   Operation 23 'read' 'TX_message_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %TX_message_V, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [6 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:20]   --->   Operation 24 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %RX_message_V, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [6 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:21]   --->   Operation 25 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %spi_core, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [9 x i8]* @p_str4, [4 x i8]* @p_str5, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 26 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i4* @state, i32 1, [1 x i8]* @p_str) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:29]   --->   Operation 27 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%state_load = load i4* @state, align 1"   --->   Operation 28 'load' 'state_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (1.13ns)   --->   "switch i4 %state_load, label %3 [
    i4 0, label %1
    i4 1, label %2
  ]" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:31]   --->   Operation 29 'switch' <Predicate = true> <Delay = 1.13>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%spi_core_addr_2 = getelementptr i32* %spi_core, i64 28"   --->   Operation 30 'getelementptr' 'spi_core_addr_2' <Predicate = (state_load == 1)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (8.75ns)   --->   "%spi_core_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %spi_core_addr_2, i32 1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:39]   --->   Operation 31 'writereq' 'spi_core_addr_2_req' <Predicate = (state_load == 1)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_1 : Operation 32 [1/1] (1.76ns)   --->   "store i4 2, i4* @state, align 1" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:40]   --->   Operation 32 'store' <Predicate = (state_load == 1)> <Delay = 1.76>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%spi_core_addr_1 = getelementptr i32* %spi_core, i64 24"   --->   Operation 33 'getelementptr' 'spi_core_addr_1' <Predicate = (state_load == 0)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (8.75ns)   --->   "%spi_core_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %spi_core_addr_1, i32 1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:34]   --->   Operation 34 'writereq' 'spi_core_addr_1_req' <Predicate = (state_load == 0)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_1 : Operation 35 [1/1] (1.76ns)   --->   "store i4 1, i4* @state, align 1" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:36]   --->   Operation 35 'store' <Predicate = (state_load == 0)> <Delay = 1.76>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%spi_core_addr = getelementptr i32* %spi_core, i64 26"   --->   Operation 36 'getelementptr' 'spi_core_addr' <Predicate = (state_load != 0 & state_load != 1)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (8.75ns)   --->   "%spi_core_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %spi_core_addr, i32 1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:47]   --->   Operation 37 'writereq' 'spi_core_addr_req' <Predicate = (state_load != 0 & state_load != 1)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 38 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i32P(i32* %spi_core_addr_2, i32 65534, i4 -1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:39]   --->   Operation 38 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 39 [5/5] (8.75ns)   --->   "%spi_core_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr_2)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:39]   --->   Operation 39 'writeresp' 'spi_core_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 40 [4/5] (8.75ns)   --->   "%spi_core_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr_2)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:39]   --->   Operation 40 'writeresp' 'spi_core_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 41 [3/5] (8.75ns)   --->   "%spi_core_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr_2)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:39]   --->   Operation 41 'writeresp' 'spi_core_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 42 [2/5] (8.75ns)   --->   "%spi_core_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr_2)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:39]   --->   Operation 42 'writeresp' 'spi_core_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 43 [1/5] (8.75ns)   --->   "%spi_core_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr_2)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:39]   --->   Operation 43 'writeresp' 'spi_core_addr_2_resp' <Predicate = (state_load == 1)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 44 [1/1] (0.00ns)   --->   "br label %4" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:41]   --->   Operation 44 'br' <Predicate = (state_load == 1)> <Delay = 0.00>
ST_7 : Operation 45 [1/5] (8.75ns)   --->   "%spi_core_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr_1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:34]   --->   Operation 45 'writeresp' 'spi_core_addr_1_resp' <Predicate = (state_load == 0)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 46 [1/1] (0.00ns)   --->   "br label %4" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:37]   --->   Operation 46 'br' <Predicate = (state_load == 0)> <Delay = 0.00>
ST_7 : Operation 47 [1/5] (8.75ns)   --->   "%spi_core_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:47]   --->   Operation 47 'writeresp' 'spi_core_addr_resp' <Predicate = (state_load != 0 & state_load != 1)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 48 [1/1] (0.00ns)   --->   "br label %4" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:55]   --->   Operation 48 'br' <Predicate = (state_load != 0 & state_load != 1)> <Delay = 0.00>
ST_7 : Operation 49 [1/1] (0.00ns)   --->   "ret void" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:60]   --->   Operation 49 'ret' <Predicate = true> <Delay = 0.00>

State 8 <SV = 1> <Delay = 8.75>
ST_8 : Operation 50 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i32P(i32* %spi_core_addr_1, i32 6, i4 -1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:34]   --->   Operation 50 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 2> <Delay = 8.75>
ST_9 : Operation 51 [5/5] (8.75ns)   --->   "%spi_core_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr_1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:34]   --->   Operation 51 'writeresp' 'spi_core_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 3> <Delay = 8.75>
ST_10 : Operation 52 [4/5] (8.75ns)   --->   "%spi_core_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr_1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:34]   --->   Operation 52 'writeresp' 'spi_core_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 4> <Delay = 8.75>
ST_11 : Operation 53 [3/5] (8.75ns)   --->   "%spi_core_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr_1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:34]   --->   Operation 53 'writeresp' 'spi_core_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 5> <Delay = 8.75>
ST_12 : Operation 54 [2/5] (8.75ns)   --->   "%spi_core_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr_1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:34]   --->   Operation 54 'writeresp' 'spi_core_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 1> <Delay = 8.75>
ST_13 : Operation 55 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i32P(i32* %spi_core_addr, i32 %TX_message_V_read, i4 -1)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:47]   --->   Operation 55 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 2> <Delay = 8.75>
ST_14 : Operation 56 [5/5] (8.75ns)   --->   "%spi_core_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:47]   --->   Operation 56 'writeresp' 'spi_core_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 3> <Delay = 8.75>
ST_15 : Operation 57 [4/5] (8.75ns)   --->   "%spi_core_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:47]   --->   Operation 57 'writeresp' 'spi_core_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 4> <Delay = 8.75>
ST_16 : Operation 58 [3/5] (8.75ns)   --->   "%spi_core_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:47]   --->   Operation 58 'writeresp' 'spi_core_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 5> <Delay = 8.75>
ST_17 : Operation 59 [2/5] (8.75ns)   --->   "%spi_core_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %spi_core_addr)" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:47]   --->   Operation 59 'writeresp' 'spi_core_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ spi_core]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ TX_message_V]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ RX_message_V]:  wired=1; compound=0; hidden=0; nouse=1; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ state]:  wired=0; compound=0; hidden=1; nouse=0; global=1; static=1; extern=0; dir=2; type=0; pingpong=0; private_global=1; linkage=7; visibility=0; IO mode=ap_ovld:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
StgValue_18          (specclockdomain) [ 000000000000000000]
StgValue_19          (specbitsmap    ) [ 000000000000000000]
StgValue_20          (specbitsmap    ) [ 000000000000000000]
StgValue_21          (specbitsmap    ) [ 000000000000000000]
StgValue_22          (spectopmodule  ) [ 000000000000000000]
TX_message_V_read    (read           ) [ 000000000000010000]
StgValue_24          (specinterface  ) [ 000000000000000000]
StgValue_25          (specinterface  ) [ 000000000000000000]
StgValue_26          (specinterface  ) [ 000000000000000000]
StgValue_27          (specreset      ) [ 000000000000000000]
state_load           (load           ) [ 011111111111111111]
StgValue_29          (switch         ) [ 000000000000000000]
spi_core_addr_2      (getelementptr  ) [ 001111111111111111]
spi_core_addr_2_req  (writereq       ) [ 000000000000000000]
StgValue_32          (store          ) [ 000000000000000000]
spi_core_addr_1      (getelementptr  ) [ 001111111111111111]
spi_core_addr_1_req  (writereq       ) [ 000000000000000000]
StgValue_35          (store          ) [ 000000000000000000]
spi_core_addr        (getelementptr  ) [ 001111111111111111]
spi_core_addr_req    (writereq       ) [ 000000000000000000]
StgValue_38          (write          ) [ 000000000000000000]
spi_core_addr_2_resp (writeresp      ) [ 000000000000000000]
StgValue_44          (br             ) [ 000000000000000000]
spi_core_addr_1_resp (writeresp      ) [ 000000000000000000]
StgValue_46          (br             ) [ 000000000000000000]
spi_core_addr_resp   (writeresp      ) [ 000000000000000000]
StgValue_48          (br             ) [ 000000000000000000]
StgValue_49          (ret            ) [ 000000000000000000]
StgValue_50          (write          ) [ 000000000000000000]
StgValue_55          (write          ) [ 000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="spi_core">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="spi_core"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="TX_message_V">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="TX_message_V"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="RX_message_V">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="RX_message_V"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="state">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="state"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecClockDomain"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="default"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="AXI_SPI_DRIVER_str"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.s_axilite.i32"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str5"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecReset"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="68" class="1004" name="TX_message_V_read_read_fu_68">
<pin_list>
<pin id="69" dir="0" index="0" bw="32" slack="0"/>
<pin id="70" dir="0" index="1" bw="32" slack="0"/>
<pin id="71" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="TX_message_V_read/1 "/>
</bind>
</comp>

<comp id="74" class="1004" name="grp_writeresp_fu_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="1" slack="0"/>
<pin id="76" dir="0" index="1" bw="32" slack="0"/>
<pin id="77" dir="0" index="2" bw="1" slack="0"/>
<pin id="78" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="spi_core_addr_2_req/1 spi_core_addr_2_resp/3 "/>
</bind>
</comp>

<comp id="81" class="1004" name="grp_writeresp_fu_81">
<pin_list>
<pin id="82" dir="0" index="0" bw="1" slack="0"/>
<pin id="83" dir="0" index="1" bw="32" slack="0"/>
<pin id="84" dir="0" index="2" bw="1" slack="0"/>
<pin id="85" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="spi_core_addr_1_req/1 spi_core_addr_1_resp/9 "/>
</bind>
</comp>

<comp id="88" class="1004" name="grp_writeresp_fu_88">
<pin_list>
<pin id="89" dir="0" index="0" bw="1" slack="0"/>
<pin id="90" dir="0" index="1" bw="32" slack="0"/>
<pin id="91" dir="0" index="2" bw="1" slack="0"/>
<pin id="92" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="spi_core_addr_req/1 spi_core_addr_resp/14 "/>
</bind>
</comp>

<comp id="95" class="1004" name="StgValue_38_write_fu_95">
<pin_list>
<pin id="96" dir="0" index="0" bw="0" slack="0"/>
<pin id="97" dir="0" index="1" bw="32" slack="1"/>
<pin id="98" dir="0" index="2" bw="17" slack="0"/>
<pin id="99" dir="0" index="3" bw="1" slack="0"/>
<pin id="100" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_38/2 "/>
</bind>
</comp>

<comp id="105" class="1004" name="StgValue_50_write_fu_105">
<pin_list>
<pin id="106" dir="0" index="0" bw="0" slack="0"/>
<pin id="107" dir="0" index="1" bw="32" slack="1"/>
<pin id="108" dir="0" index="2" bw="4" slack="0"/>
<pin id="109" dir="0" index="3" bw="1" slack="0"/>
<pin id="110" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_50/8 "/>
</bind>
</comp>

<comp id="115" class="1004" name="StgValue_55_write_fu_115">
<pin_list>
<pin id="116" dir="0" index="0" bw="0" slack="0"/>
<pin id="117" dir="0" index="1" bw="32" slack="1"/>
<pin id="118" dir="0" index="2" bw="32" slack="1"/>
<pin id="119" dir="0" index="3" bw="1" slack="0"/>
<pin id="120" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_55/13 "/>
</bind>
</comp>

<comp id="124" class="1004" name="state_load_load_fu_124">
<pin_list>
<pin id="125" dir="0" index="0" bw="4" slack="0"/>
<pin id="126" dir="1" index="1" bw="4" slack="6"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="state_load/1 "/>
</bind>
</comp>

<comp id="128" class="1004" name="spi_core_addr_2_fu_128">
<pin_list>
<pin id="129" dir="0" index="0" bw="32" slack="0"/>
<pin id="130" dir="0" index="1" bw="32" slack="0"/>
<pin id="131" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="spi_core_addr_2/1 "/>
</bind>
</comp>

<comp id="135" class="1004" name="StgValue_32_store_fu_135">
<pin_list>
<pin id="136" dir="0" index="0" bw="3" slack="0"/>
<pin id="137" dir="0" index="1" bw="4" slack="0"/>
<pin id="138" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_32/1 "/>
</bind>
</comp>

<comp id="141" class="1004" name="spi_core_addr_1_fu_141">
<pin_list>
<pin id="142" dir="0" index="0" bw="32" slack="0"/>
<pin id="143" dir="0" index="1" bw="32" slack="0"/>
<pin id="144" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="spi_core_addr_1/1 "/>
</bind>
</comp>

<comp id="148" class="1004" name="StgValue_35_store_fu_148">
<pin_list>
<pin id="149" dir="0" index="0" bw="1" slack="0"/>
<pin id="150" dir="0" index="1" bw="4" slack="0"/>
<pin id="151" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_35/1 "/>
</bind>
</comp>

<comp id="154" class="1004" name="spi_core_addr_fu_154">
<pin_list>
<pin id="155" dir="0" index="0" bw="32" slack="0"/>
<pin id="156" dir="0" index="1" bw="32" slack="0"/>
<pin id="157" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="spi_core_addr/1 "/>
</bind>
</comp>

<comp id="161" class="1005" name="TX_message_V_read_reg_161">
<pin_list>
<pin id="162" dir="0" index="0" bw="32" slack="1"/>
<pin id="163" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="TX_message_V_read "/>
</bind>
</comp>

<comp id="166" class="1005" name="state_load_reg_166">
<pin_list>
<pin id="167" dir="0" index="0" bw="4" slack="6"/>
<pin id="168" dir="1" index="1" bw="4" slack="2147483647"/>
</pin_list>
<bind>
<opset="state_load "/>
</bind>
</comp>

<comp id="170" class="1005" name="spi_core_addr_2_reg_170">
<pin_list>
<pin id="171" dir="0" index="0" bw="32" slack="1"/>
<pin id="172" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="spi_core_addr_2 "/>
</bind>
</comp>

<comp id="176" class="1005" name="spi_core_addr_1_reg_176">
<pin_list>
<pin id="177" dir="0" index="0" bw="32" slack="1"/>
<pin id="178" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="spi_core_addr_1 "/>
</bind>
</comp>

<comp id="182" class="1005" name="spi_core_addr_reg_182">
<pin_list>
<pin id="183" dir="0" index="0" bw="32" slack="1"/>
<pin id="184" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="spi_core_addr "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="72"><net_src comp="20" pin="0"/><net_sink comp="68" pin=0"/></net>

<net id="73"><net_src comp="2" pin="0"/><net_sink comp="68" pin=1"/></net>

<net id="79"><net_src comp="50" pin="0"/><net_sink comp="74" pin=0"/></net>

<net id="80"><net_src comp="42" pin="0"/><net_sink comp="74" pin=2"/></net>

<net id="86"><net_src comp="50" pin="0"/><net_sink comp="81" pin=0"/></net>

<net id="87"><net_src comp="42" pin="0"/><net_sink comp="81" pin=2"/></net>

<net id="93"><net_src comp="50" pin="0"/><net_sink comp="88" pin=0"/></net>

<net id="94"><net_src comp="42" pin="0"/><net_sink comp="88" pin=2"/></net>

<net id="101"><net_src comp="58" pin="0"/><net_sink comp="95" pin=0"/></net>

<net id="102"><net_src comp="60" pin="0"/><net_sink comp="95" pin=2"/></net>

<net id="103"><net_src comp="62" pin="0"/><net_sink comp="95" pin=3"/></net>

<net id="104"><net_src comp="64" pin="0"/><net_sink comp="74" pin=0"/></net>

<net id="111"><net_src comp="58" pin="0"/><net_sink comp="105" pin=0"/></net>

<net id="112"><net_src comp="66" pin="0"/><net_sink comp="105" pin=2"/></net>

<net id="113"><net_src comp="62" pin="0"/><net_sink comp="105" pin=3"/></net>

<net id="114"><net_src comp="64" pin="0"/><net_sink comp="81" pin=0"/></net>

<net id="121"><net_src comp="58" pin="0"/><net_sink comp="115" pin=0"/></net>

<net id="122"><net_src comp="62" pin="0"/><net_sink comp="115" pin=3"/></net>

<net id="123"><net_src comp="64" pin="0"/><net_sink comp="88" pin=0"/></net>

<net id="127"><net_src comp="6" pin="0"/><net_sink comp="124" pin=0"/></net>

<net id="132"><net_src comp="0" pin="0"/><net_sink comp="128" pin=0"/></net>

<net id="133"><net_src comp="48" pin="0"/><net_sink comp="128" pin=1"/></net>

<net id="134"><net_src comp="128" pin="2"/><net_sink comp="74" pin=1"/></net>

<net id="139"><net_src comp="52" pin="0"/><net_sink comp="135" pin=0"/></net>

<net id="140"><net_src comp="6" pin="0"/><net_sink comp="135" pin=1"/></net>

<net id="145"><net_src comp="0" pin="0"/><net_sink comp="141" pin=0"/></net>

<net id="146"><net_src comp="54" pin="0"/><net_sink comp="141" pin=1"/></net>

<net id="147"><net_src comp="141" pin="2"/><net_sink comp="81" pin=1"/></net>

<net id="152"><net_src comp="46" pin="0"/><net_sink comp="148" pin=0"/></net>

<net id="153"><net_src comp="6" pin="0"/><net_sink comp="148" pin=1"/></net>

<net id="158"><net_src comp="0" pin="0"/><net_sink comp="154" pin=0"/></net>

<net id="159"><net_src comp="56" pin="0"/><net_sink comp="154" pin=1"/></net>

<net id="160"><net_src comp="154" pin="2"/><net_sink comp="88" pin=1"/></net>

<net id="164"><net_src comp="68" pin="2"/><net_sink comp="161" pin=0"/></net>

<net id="165"><net_src comp="161" pin="1"/><net_sink comp="115" pin=2"/></net>

<net id="169"><net_src comp="124" pin="1"/><net_sink comp="166" pin=0"/></net>

<net id="173"><net_src comp="128" pin="2"/><net_sink comp="170" pin=0"/></net>

<net id="174"><net_src comp="170" pin="1"/><net_sink comp="95" pin=1"/></net>

<net id="175"><net_src comp="170" pin="1"/><net_sink comp="74" pin=1"/></net>

<net id="179"><net_src comp="141" pin="2"/><net_sink comp="176" pin=0"/></net>

<net id="180"><net_src comp="176" pin="1"/><net_sink comp="81" pin=1"/></net>

<net id="181"><net_src comp="176" pin="1"/><net_sink comp="105" pin=1"/></net>

<net id="185"><net_src comp="154" pin="2"/><net_sink comp="182" pin=0"/></net>

<net id="186"><net_src comp="182" pin="1"/><net_sink comp="88" pin=1"/></net>

<net id="187"><net_src comp="182" pin="1"/><net_sink comp="115" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: spi_core | {1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 }
	Port: state | {1 }
 - Input state : 
	Port: AXI_SPI_DRIVER : TX_message_V | {1 }
	Port: AXI_SPI_DRIVER : state | {1 }
  - Chain level:
	State 1
		StgValue_29 : 1
		spi_core_addr_2_req : 1
		spi_core_addr_1_req : 1
		spi_core_addr_req : 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|------------------------------|
| Operation|        Functional Unit       |
|----------|------------------------------|
|   read   | TX_message_V_read_read_fu_68 |
|----------|------------------------------|
|          |      grp_writeresp_fu_74     |
| writeresp|      grp_writeresp_fu_81     |
|          |      grp_writeresp_fu_88     |
|----------|------------------------------|
|          |    StgValue_38_write_fu_95   |
|   write  |   StgValue_50_write_fu_105   |
|          |   StgValue_55_write_fu_115   |
|----------|------------------------------|
|   Total  |                              |
|----------|------------------------------|

Memories:
N/A

* Register list:
+-------------------------+--------+
|                         |   FF   |
+-------------------------+--------+
|TX_message_V_read_reg_161|   32   |
| spi_core_addr_1_reg_176 |   32   |
| spi_core_addr_2_reg_170 |   32   |
|  spi_core_addr_reg_182  |   32   |
|    state_load_reg_166   |    4   |
+-------------------------+--------+
|          Total          |   132  |
+-------------------------+--------+

* Multiplexer (MUX) list: 
|---------------------|------|------|------|--------||---------||---------|
|         Comp        |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|---------------------|------|------|------|--------||---------||---------|
| grp_writeresp_fu_74 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_74 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_81 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_81 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_88 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_88 |  p1  |   2  |  32  |   64   ||    9    |
|---------------------|------|------|------|--------||---------||---------|
|        Total        |      |      |      |   198  ||  10.614 ||    27   |
|---------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    -   |    -   |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|   10   |    -   |   27   |
|  Register |    -   |   132  |    -   |
+-----------+--------+--------+--------+
|   Total   |   10   |   132  |   27   |
+-----------+--------+--------+--------+
